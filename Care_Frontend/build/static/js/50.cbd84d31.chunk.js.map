{"version":3,"sources":["Api_Requests/RiskAssisment/Use-Create-Risk-assisment.js","Api_Requests/RiskAssisment/Use-delet-RiskAssesment.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","views/AllCarePlan/components/Header/Header.js","Api_Requests/CarePlan/UseDeletCarePlan.js","Hook/CarePlan/Get-Delet-CarePlan-Hook.js","views/AllCarePlan/components/Results/Results.js","Api_Requests/CarePlan/UseGetCarePlanData.js","views/AllCarePlan/list.js","Hook/CarePlan/Get-AllCarePlan-Hook.js","views/AllCarePlan/index.js"],"names":["UseCreateRiskAssesmentData","_ref","Object","D_care_managment_Care_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_care_managment_Care_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","data","config","wrap","_context","prev","next","headers","token","localStorage","getItem","baseUrl","post","abrupt","sent","stop","_x","apply","this","arguments","UseDeletRiskAssesmentData","_ref2","_callee2","id","parmas","res","_context2","delete","concat","_x3","_x4","react_default","createElement","KeyboardArrowRight","KeyboardArrowLeft","_ref3","_ref4","TablePagination_TablePaginationActions","forwardRef","props","ref","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","other","objectWithoutProperties","theme","useTheme","esm_extends","IconButton","onClick","event","disabled","color","direction","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","TablePagination_TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","classes","colSpanProp","_props$component","component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","className","root","Toolbar","toolbar","spacer","length","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","clsx_m","selectRoot","value","onChange","map","rowsPerPageOption","menuItem","key","min","actions","__webpack_exports__","withStyles","palette","text","secondary","fontSize","typography","pxToRem","&:last-child","padding","height","minHeight","paddingRight","flex","flexShrink","marginRight","marginLeft","paddingLeft","textAlign","textAlignLast","top","name","useStyles","makeStyles","Header","CarePlanData","rest","assign","clsx","Grid","alignItems","container","justify","spacing","item","gutterBottom","react_router_dom","Button","UseDeletCarePlanData","asyncToGenerator","regenerator_default","DeletCarePlanApi","dispatch","useDispatch","QueryClient","useRouter","useQueryClient","useMutation","onSuccess","result","status","statusText","console","log","DeletCarePlanSliceInfo","invalidateQueries","notify","onError","err","response","message","content","inner","minWidth","nameCell","display","avatar","width","justifyContent","Results","_useState","useState","_useState2","slicedToArray","_DeletCarePlanApi","SubmitDeletCarePlan","isLoading","mutate","DeletCarePlanData","isError","error","refetch","useSelector","state","DeletCarePlanSlice","_useState3","_useState4","Id","setId","_useState5","_useState6","show","setShow","handleClose","_useState7","_useState8","showEdite","setShowEdite","_useState9","_useState10","setIdEdite","_useState11","_useState12","custmerData","setcustmerData","handleCloseEdite","customers","_useState13","_useState14","selectedCustomers","_useState15","_useState16","setPage","_useState17","_useState18","setRowsPerPage","Modal","onHide","closeButton","Title","Body","Footer","handelDeletCarePlan","EditeCarePlan","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","align","TableBody","customer","index","hover","RouterLink","mobility","date","night_time_support","risks","size","CardActions","TablePagination","target","selected","defaultProps","UseGetAllCarePlanData","url","get","results","marginTop","CustomerManagementList","formData","useQuery","GetCarePlanSliceInfo","useGetCarePlanApi","GetAllCAREplaneSlice","components_Header_Header","onFilter","onSearch","components_Results_Results","handleShow","__webpack_require__","d","list"],"mappings":"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","file":"static/js/50.cbd84d31.chunk.js","sourcesContent":["import baseUrl from '../../Api/baseURL'\r\n\r\n\r\nexport const UseCreateRiskAssesmentData  = async data => {\r\n    const config = {\r\n        headers: {\r\n            \r\n            token: localStorage.getItem(\"token\")\r\n        }\r\n    }\r\n    return await baseUrl.post(\r\n      'risk-assesment',data,config );\r\n  };","import baseUrl from '../../Api/baseURL'\r\n\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseDeletRiskAssesmentData = async (id, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.delete(`risk-assesment/${id}`, config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseDeletRiskAssesmentData };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className,CarePlanData , ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Currnt Care Plan({CarePlanData?.length})\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link to=\"/addCarePlan\">\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Add carePlan\r\n          </Button>\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import baseUrl from '../../Api/baseURL'\r\n\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseDeletCarePlanData = async (id, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.delete(`plan/${id}`, config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseDeletCarePlanData };","import React from 'react'\r\n\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\n\r\n\r\n\r\nimport notify from 'Hook/useNotifaction';\r\nimport { UseCreateRiskAssesmentData } from 'Api_Requests/RiskAssisment/Use-Create-Risk-assisment';\r\nimport { CreateRiskAssesmentSliceInfo } from 'Redux_Slices/RiskAssesment/Create-RiskAssesment-Slice';\r\nimport { DeletRiskAssesmentSliceInfo } from 'Redux_Slices/RiskAssesment/Delet-RiskAssesment-Slice';\r\nimport { UseDeletRiskAssesmentData } from 'Api_Requests/RiskAssisment/Use-delet-RiskAssesment';\r\nimport { UseDeletCarePlanData } from 'Api_Requests/CarePlan/UseDeletCarePlan';\r\nimport { DeletCarePlanSliceInfo } from 'Redux_Slices/CarePlan/Delet-CarePlan-Slice';\r\n\r\n\r\nexport const DeletCarePlanApi = (id) =>{\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const QueryClient = useQueryClient();\r\n\r\n    return(useMutation((id)=>(UseDeletCarePlanData(id)),{\r\n        onSuccess: res => {\r\n          const result = {\r\n            status: res.status + '-' + res.statusText,\r\n            headers: res.headers,\r\n            data: res.data\r\n          };\r\n          console.log(result,\"result\");\r\n           dispatch(DeletCarePlanSliceInfo(result.data));\r\n          // localStorage.setItem('user', JSON.stringify(result.data));\r\n          // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n          //  window.location.replace('/');\r\n          // router.history.push('/');\r\n          QueryClient.invalidateQueries('GetAllCarePlan');\r\n\r\n             notify(\"The CarePlan  has been Deleted\",\"success\")    \r\n  \r\n//    setTimeout(() => {\r\n//       router.history.push('/');\r\n//    }, 2000);\r\n    \r\n        },\r\n        onError: err => {\r\n          // console.log(err.response.data.message);\r\n          //   dispatch(errorAtLogin(err.response.data.detail));\r\n          //  return err;\r\n          notify(err.response.data.message,\"error\")      \r\n  \r\n        }\r\n      }))\r\n\r\n} ","import React, { useState } from 'react';\r\nimport { Link, Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport getInitials from 'utils/getInitials';\r\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetProfileViewSliceInfo } from 'Redux_Slices/Profile/View-profile-Slice';\r\nimport useRouter from 'utils/useRouter';\r\nimport { useEffect } from 'react';\r\nimport { DeletCarePlanApi } from 'Hook/CarePlan/Get-Delet-CarePlan-Hook';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport EditeCarePlan from 'views/EditeCarePlan';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  },\r\n  nameCell: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    height: 42,\r\n    width: 42,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n\r\n  const [dataEdite,setdataEdite] =useState()\r\n const {isLoading,mutate:SubmitDeletCarePlan,isError,error,refetch} =  DeletCarePlanApi()\r\n  const {DeletCarePlanData} = useSelector(state => state.DeletCarePlanSlice)\r\nconsole.log(DeletCarePlanData)\r\nconst [Id,setId] =useState()\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true); \r\n\r\n  const handelDeletCarePlan =(Id)=>{\r\n    SubmitDeletCarePlan(Id)\r\n    handleClose()\r\n  }\r\n \r\n  \r\n\r\nconst handelcrossDataTOedite=()=>{\r\n  setdataEdite()\r\n}\r\n\r\n//   const {isLoading,mutate:SubmitDeletCarePlan,isError,error,refetch} =  DeletCarePlanApi()\r\n//   const {DeletCarePlanData} = useSelector(state => state.DeletCarePlanSlice)\r\n// console.log(DeletCarePlanData)\r\n\r\n\r\n  const [showEdite, setShowEdite] = useState(false);\r\n  const [IdEdite,setIdEdite] =useState()\r\n\r\nconst [custmerData,setcustmerData]=useState()\r\n\r\n  const handleCloseEdite = () => setShowEdite(false);\r\n  const handleShowEdite = () => setShowEdite(true); \r\n\r\n\r\n\r\n\r\n  const handelEditeCarePlan =(Id)=>{\r\n    SubmitDeletCarePlan(Id)\r\n    handleCloseEdite()  \r\n  }\r\n \r\n\r\n\r\n\r\n  const router = useRouter();\r\n\r\n\r\n  const { className, customers,CarePlanData, ...rest } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const handelview =(data)=>{\r\n    \r\n\r\n  \r\n  //   const res = AllUserData.filter((item,index) => index === data)\r\n    \r\n\r\n  //   console.log(res);\r\n  //   dispatch(GetProfileViewSliceInfo(res));\r\n    \r\n  //     router.history.push('/ViewProfile');\r\n \r\n  //   // window.location.replace('/ViewProfile');\r\n\r\n  // }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedCustomers = event.target.checked\r\n      ? customers.map(customer => customer.id)\r\n      : [];\r\n\r\n    setSelectedCustomers(selectedCustomers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomers.indexOf(id);\r\n    let newSelectedCustomers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomers.length - 1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, selectedIndex),\r\n        selectedCustomers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomers(newSelectedCustomers);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n\r\n\r\n<Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className='text-center '> \r\n          <div className=''>Alert</div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n           <div className='d-flex '>\r\n            Are you Sure ?\r\n           </div>\r\n             </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>handelDeletCarePlan(Id)} >\r\n            Delet\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n      <Modal show={showEdite} onHide={handleCloseEdite}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className='text-center '> \r\n          <div className=''>Alert</div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n           <div className='d-flex '>\r\n           <EditeCarePlan custmerData={custmerData} handleCloseEdite={handleCloseEdite}/>\r\n           </div>\r\n             </Modal.Body>\r\n        <Modal.Footer>\r\n        \r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {customers.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(customers.length / rowsPerPage)}\r\n      </Typography>\r\n      <Card>\r\n        <CardHeader\r\n          action={<GenericMoreButton />}\r\n          title=\"All customers\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          <PerfectScrollbar>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {/* <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedCustomers.length === customers.length}\r\n                        color=\"primary\"\r\n                        indeterminate={\r\n                          selectedCustomers.length > 0 &&\r\n                          selectedCustomers.length < customers.length\r\n                        }\r\n                        onChange={handleSelectAll}\r\n                      />\r\n                    </TableCell> */}\r\n                    <TableCell>Number</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>Phone</TableCell>\r\n                    <TableCell>Sex</TableCell>\r\n                    \r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n              \r\n             \r\n              <TableBody>\r\n                  {CarePlanData?.map((customer,index) => (\r\n                    <TableRow\r\n                      hover\r\n                      // key={customer.id}\r\n                      // selected={selectedCustomers.indexOf(customer.id) !== -1}\r\n                    >\r\n                   <TableCell>{index + 1}</TableCell>\r\n\r\n                       <Link to=\"/service/user\">\r\n                      <TableCell>\r\n                        <div className={classes.nameCell}>\r\n                  \r\n                          <div>\r\n                            <Link\r\n                              color=\"inherit\"\r\n                              component={RouterLink}\r\n                              to=\"/management/customers/1\"\r\n                              variant=\"h6\"\r\n                            >\r\n                              {customer.mobility}\r\n                              {/* {customer.name} */}\r\n                            </Link>\r\n                            {/* <div>{\"customer.email\"}</div> */}\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                      </Link>\r\n                      <TableCell>{customer.date}</TableCell>\r\n                      <TableCell>\r\n                        {\r\n                          customer.night_time_support\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {\r\n                          customer.risks\r\n                        }\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"right\">\r\n\r\n                      \r\n                      <Button\r\n                          color=\"primary\"\r\n                          onClick={()=>{return (handleShowEdite(),setIdEdite(customer.id),setcustmerData(customer))}}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i className=\"fa-regular fa-pen-to-square\"></i>\r\n                        </Button>\r\n                    \r\n                      \r\n\r\n\r\n                         <Button\r\n                         className='ms-1'\r\n                          color=\"primary\"\r\n                          onClick={()=>{return(setId(customer.id) ,handleShow())}}\r\n                          size=\"small\"\r\n                          \r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i className=\"fa-sharp fa-solid fa-trash p-1\"></i>\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n             \r\n                \r\n              </Table>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={customers.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      <TableEditBar selected={selectedCustomers} />\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  customers: []\r\n};\r\n\r\nexport default Results;\r\n","import baseUrl from '.././../Api/baseURL'\r\n\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseGetAllCarePlanData = async (url, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.get(\"plan\", config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseGetAllCarePlanData };","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page, SearchBar } from 'components';\r\nimport { Header, Results } from './components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useGetCarePlanApi } from 'Hook/CarePlan/Get-AllCarePlan-Hook';\r\nimport { DeletCarePlanApi } from 'Hook/CarePlan/Get-Delet-CarePlan-Hook';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerManagementList = () => {\r\n\r\n  const {isLoading,mutate:SubmitDeletCarePlan,isError,error,refetch} =  DeletCarePlanApi()\r\n  const {DeletCarePlanData} = useSelector(state => state.DeletCarePlanSlice)\r\nconsole.log(DeletCarePlanData)\r\nconst [Id,setId] =useState()\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true); \r\n\r\n  const handelDeletCarePlan =(id)=>{\r\n    SubmitDeletCarePlan(id)\r\n    handleClose()\r\n  }\r\n \r\n\r\n  const classes = useStyles();\r\n\r\n  const [customers, setCustomers] = useState([{},{}]);\r\n\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n\r\n  //   const fetchCustomers = () => {\r\n  //     axios.get('/api/management/customers').then(response => {\r\n  //       if (mounted) {\r\n  //         setCustomers(response.data.customers);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   fetchCustomers();\r\n\r\n  //   return () => {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  const handleFilter = () => {};\r\n  const handleSearch = () => {};\r\n  const {data}=useGetCarePlanApi()\r\n\r\n  const {CarePlanData} =useSelector(state => state.GetAllCAREplaneSlice)\r\n  console.log(CarePlanData);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Management List\"\r\n    >\r\n      <Header CarePlanData ={CarePlanData} handelDeletCarePlan={handelDeletCarePlan} />\r\n      <SearchBar\r\n        onFilter={handleFilter}\r\n        onSearch={handleSearch}\r\n      />\r\n      {customers && (\r\n        <Results\r\n        Id={Id}\r\n        setId={setId}\r\n        handelDeletCarePlan={handelDeletCarePlan}\r\n        handleShow={handleShow}\r\n        handleClose={handleClose}\r\n        show={show}\r\n          className={classes.results}\r\n          customers={customers}\r\n          CarePlanData ={CarePlanData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerManagementList;\r\n","import axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\n\r\nimport notify from 'Hook/useNotifaction';\r\nimport { GetProfileSliceInfo } from \"Redux_Slices/Profile/Get-profile-Slice\";\r\nimport { UseGetProfileData } from \"Api_Requests/UseGetProfileData\";\r\nimport { UseGetAllCarePlanData } from \"Api_Requests/CarePlan/UseGetCarePlanData\";\r\nimport { GetCarePlanSliceInfo } from \"Redux_Slices/CarePlan/Get-CarePlane-Slice\";\r\n\r\nexport const useGetCarePlanApi = formData => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useQuery(\"GetAllCarePlan\",UseGetAllCarePlanData, {\r\n      onSuccess: res => {\r\n        \r\n        \r\n         dispatch(GetCarePlanSliceInfo(res));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err.response.data.message,\"error\")      \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n","export { default } from './list';\r\n"],"sourceRoot":""}