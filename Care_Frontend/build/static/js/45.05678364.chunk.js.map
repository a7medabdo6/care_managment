{"version":3,"sources":["../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","views/AllWorkers/components/Header/Header.js","views/AllWorkers/components/Results/Results.js","views/AllWorkers/list.js","views/AllWorkers/index.js","Api/baseURL.js","Hook/useNotifaction.js","Api_Requests/useInsertDataSignUp.js","Api_Requests/UseGetProfileData.js","Api_Requests/UseGetAllUser.js","Hook/AllUser/Get-All-user-Hook.js"],"names":["_ref","react_default","a","createElement","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePagination_TablePaginationActions","forwardRef","props","ref","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","other","Object","objectWithoutProperties","theme","useTheme","esm_extends","IconButton","onClick","event","disabled","color","direction","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","TablePagination_TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","classes","colSpanProp","_props$component","component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","className","root","Toolbar","toolbar","spacer","length","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","clsx_m","selectRoot","value","onChange","map","rowsPerPageOption","menuItem","key","min","actions","__webpack_exports__","withStyles","palette","text","secondary","fontSize","typography","pxToRem","&:last-child","padding","height","minHeight","paddingRight","flex","flexShrink","marginRight","marginLeft","paddingLeft","textAlign","textAlignLast","top","name","useStyles","makeStyles","Header","AllUserData","rest","assign","clsx","Grid","alignItems","container","justify","spacing","item","gutterBottom","Button","content","inner","minWidth","nameCell","display","avatar","width","justifyContent","Results","router","useRouter","customers","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray","selectedCustomers","_useState3","_useState4","setPage","_useState5","_useState6","setRowsPerPage","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","align","TableBody","customer","index","hover","Link","RouterLink","username","email","worker","phone","sex","size","data","res","filter","console","log","GetProfileViewSliceInfo","history","push","handelview","CardActions","TablePagination","target","selected","defaultProps","results","marginTop","CustomerManagementList","useGetAllUserApi","useSelector","state","GetAllUserSlice","components_Header_Header","onFilter","onSearch","components_Results_Results","__webpack_require__","d","list","axios__WEBPACK_IMPORTED_MODULE_0__","baseurl_Server","n","axios","create","baseURL","react_toastify__WEBPACK_IMPORTED_MODULE_0__","notify","msg","type","toast","warn","success","error","useInsertDataSignUp","D_care_managment_Care_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_care_managment_Care_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","baseUrl","post","abrupt","sent","stop","_x","apply","this","arguments","UseGetProfileData","_callee2","url","parmas","config","_context2","headers","token","localStorage","getItem","get","_x3","_x4","UseGetAllUserData","Hook_useNotifaction__WEBPACK_IMPORTED_MODULE_0__","react_query__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_5__","utils_useRouter__WEBPACK_IMPORTED_MODULE_6__","Api_Requests_UseGetAllUser__WEBPACK_IMPORTED_MODULE_9__","Redux_Slices_AllUser_Get_All_user_Slice__WEBPACK_IMPORTED_MODULE_10__","formData","useQuery","onSuccess","GetAllUserSliceInfo","onError","err","response","message"],"mappings":"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","file":"static/js/45.05678364.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className,AllUserData , ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Currnt Care Plan({AllUserData?.length})\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Add customer\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  Button,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport getInitials from 'utils/getInitials';\r\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetProfileViewSliceInfo } from 'Redux_Slices/Profile/View-profile-Slice';\r\nimport useRouter from 'utils/useRouter';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  },\r\n  nameCell: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    height: 42,\r\n    width: 42,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n\r\n  \r\n\r\n  const router = useRouter();\r\n\r\n\r\n  const { className, customers,AllUserData, ...rest } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handelview =(data)=>{\r\n    \r\n\r\n  \r\n    const res = AllUserData.filter((item,index) => index === data)\r\n    \r\n\r\n    console.log(res);\r\n    dispatch(GetProfileViewSliceInfo(res));\r\n    \r\n      router.history.push('/ViewProfile');\r\n \r\n    // window.location.replace('/ViewProfile');\r\n\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedCustomers = event.target.checked\r\n      ? customers.map(customer => customer.id)\r\n      : [];\r\n\r\n    setSelectedCustomers(selectedCustomers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomers.indexOf(id);\r\n    let newSelectedCustomers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomers.length - 1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, selectedIndex),\r\n        selectedCustomers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomers(newSelectedCustomers);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {customers.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(customers.length / rowsPerPage)}\r\n      </Typography>\r\n      <Card>\r\n        <CardHeader\r\n          action={<GenericMoreButton />}\r\n          title=\"All customers\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          <PerfectScrollbar>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {/* <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedCustomers.length === customers.length}\r\n                        color=\"primary\"\r\n                        indeterminate={\r\n                          selectedCustomers.length > 0 &&\r\n                          selectedCustomers.length < customers.length\r\n                        }\r\n                        onChange={handleSelectAll}\r\n                      />\r\n                    </TableCell> */}\r\n                    <TableCell>Number</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>Phone</TableCell>\r\n                    <TableCell>Sex</TableCell>\r\n                    \r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n              \r\n             \r\n              <TableBody>\r\n                  {AllUserData?.map((customer,index) => (\r\n                    <TableRow\r\n                      hover\r\n                      // key={customer.id}\r\n                      // selected={selectedCustomers.indexOf(customer.id) !== -1}\r\n                    >\r\n                   <TableCell>{index + 1}</TableCell>\r\n\r\n                       <Link to=\"/service/user\">\r\n                      <TableCell>\r\n                        <div className={classes.nameCell}>\r\n                  \r\n                          <div>\r\n                            <Link\r\n                              color=\"inherit\"\r\n                              component={RouterLink}\r\n                              to=\"/management/customers/1\"\r\n                              variant=\"h6\"\r\n                            >\r\n                              {customer.username}\r\n                              {/* {customer.name} */}\r\n                            </Link>\r\n                            {/* <div>{\"customer.email\"}</div> */}\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                      </Link>\r\n                      <TableCell>{customer.email}</TableCell>\r\n                      <TableCell>\r\n                        {\r\n                          customer.worker !== null ? (\r\n                            customer.worker.phone\r\n                          ) : \"\"\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {\r\n                          customer.worker !== null ? (\r\n                            customer.worker.sex\r\n                          ) : \"\"\r\n                        }\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"right\">\r\n\r\n                        <Button\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          onClick={()=> handelview(index)}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n\r\n\r\n                         <Button\r\n                         className='ms-1'\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          \r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i className=\"fa-sharp fa-solid fa-trash p-1\"></i>\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n             \r\n                \r\n              </Table>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={customers.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      <TableEditBar selected={selectedCustomers} />\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  customers: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page, SearchBar } from 'components';\r\nimport { Header, Results } from './components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerManagementList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [customers, setCustomers] = useState([{},{}]);\r\n\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n\r\n  //   const fetchCustomers = () => {\r\n  //     axios.get('/api/management/customers').then(response => {\r\n  //       if (mounted) {\r\n  //         setCustomers(response.data.customers);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   fetchCustomers();\r\n\r\n  //   return () => {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  const handleFilter = () => {};\r\n  const handleSearch = () => {};\r\n  const {data}=useGetAllUserApi()\r\n\r\n  const {AllUserData} =useSelector(state => state.GetAllUserSlice)\r\n  console.log(AllUserData);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Management List\"\r\n    >\r\n      <Header AllUserData ={AllUserData} />\r\n      <SearchBar\r\n        onFilter={handleFilter}\r\n        onSearch={handleSearch}\r\n      />\r\n      {customers && (\r\n        <Results\r\n          className={classes.results}\r\n          customers={customers}\r\n          AllUserData ={AllUserData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerManagementList;\r\n","export { default } from './list';\r\n","import axios from 'axios';\r\n\r\nconst baseurl_Server = axios.create({ baseURL: 'http://137.184.12.206/api/' });\r\n// const baseurl_Dev = axios.create({ baseURL: 'http://localhost:5000/' });\r\n\r\n//http://137.184.12.206/api/\r\n\r\nexport default baseurl_Server;\r\n","\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n//to make notifactio to any componentet\r\nconst notify = (msg, type) => {\r\n    if (type === \"warn\")\r\n        toast.warn(msg)\r\n    else if (type ===\"success\")\r\n        toast.success(msg)\r\n    else if (type ===\"error\")\r\n        toast.error(msg)\r\n};\r\n\r\nexport default notify;","\r\nimport baseUrl from '../Api/baseURL'\r\n\r\n\r\nexport const useInsertDataSignUp  = async data => {\r\n    \r\n    return await baseUrl.post(\r\n      'users/signup',data );\r\n  };","import baseUrl from '../Api/baseURL'\r\n\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseGetProfileData = async (url, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.get(\"users/my-profile\", config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseGetProfileData };","import baseUrl from '../Api/baseURL'\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseGetAllUserData = async (url, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.get(\"users\", config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseGetAllUserData };","import notify from 'Hook/useNotifaction';\r\nimport { UseGetProfileData } from \"Api_Requests/UseGetProfileData\";\r\nimport axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\nimport { UseGetAllUserData } from 'Api_Requests/UseGetAllUser';\r\nimport { GetAllUserSliceInfo } from 'Redux_Slices/AllUser/Get-All-user-Slice';\r\nexport const useGetAllUserApi = formData => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useQuery(\"getprofile\",UseGetAllUserData, {\r\n      onSuccess: res => {\r\n        \r\n        \r\n         dispatch(GetAllUserSliceInfo(res));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err.response.data.message,\"error\")      \r\n\r\n      }\r\n    });\r\n  };\r\n"],"sourceRoot":""}