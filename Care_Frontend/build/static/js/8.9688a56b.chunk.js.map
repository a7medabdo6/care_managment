{"version":3,"sources":["../node_modules/@material-ui/icons/KeyboardBackspace.js","../node_modules/@material-ui/icons/Block.js","../node_modules/@material-ui/icons/NotificationsOffOutlined.js","views/Chat/components/ConversationList/components/ConversationListItem/ConversationListItem.js","views/Chat/components/ConversationList/ConversationList.js","views/Chat/components/ConversationDetails/components/ConversationToolbar/ConversationToolbar.js","views/Chat/components/ConversationDetails/components/ConversationMessage/ConversationMessage.js","views/Chat/components/ConversationDetails/components/ConversationMessages/ConversationMessages.js","views/Chat/components/ConversationDetails/components/ConversationForm/ConversationForm.js","views/Chat/components/ConversationDetails/ConversationDetails.js","views/Chat/components/ConversationPlaceholder/ConversationPlaceholder.js","views/Chat/Chat.js","views/Chat/index.js"],"names":["_interopRequireDefault","__webpack_require__","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Fragment","fill","useStyles","makeStyles","theme","active","boxShadow","concat","palette","primary","main","backgroundColor","colors","grey","avatar","height","width","details","marginLeft","spacing","display","flexDirection","alignItems","unread","marginTop","padding","minWidth","ConversationListItem","props","conversation","className","rest","objectWithoutProperties","classes","lastMessage","messages","length","react_default","a","ListItem","assign","button","clsx","component","RouterLink","to","id","ListItemAvatar","Avatar","alt","src","otherUser","ListItemText","name","primaryTypographyProps","noWrap","variant","secondary","sender","content","secondaryTypographyProps","Typography","moment","created_at","isSame","format","fromNow","components","color","red","shape","root","white","searchInput","flexGrow","ConversationList","conversations","selectedConversation","useRouter","match","params","Toolbar","Input","disableUnderline","placeholder","Tooltip","title","IconButton","edge","Search_default","Divider","List","disablePadding","map","i","components_ConversationListItem_ConversationListItem","divider","key","backButton","marginRight","@media (min-width: 864px)","user","flexShrink","activity","statusBullet","search","flexBasis","breakpoints","down","flex","searchIcon","icon","ConversationToolbar","moreRef","useRef","_useState","useState","_useState2","slicedToArray","openMenu","setOpenMenu","KeyboardBackspace_default","react","size","lastActivity","Paper","elevation","onClick","ref","MoreVert_default","Menu","anchorEl","current","keepMounted","onClose","open","MenuItem","ListItemIcon","Block_default","DeleteOutlined_default","ArchiveOutlined_default","NotificationsOffOutlined_default","marginBottom","authUser","justifyContent","& $body","contrastText","inner","maxWidth","body","text","borderRadius","image","footer","ConversationMessage","message","Link","contentType","time","overflow","maxHeight","ConversationMessages","lib_default","components_ConversationMessage_ConversationMessage","paper","input","fileInput","ConversationForm","fileInputRef","setValue","handleAttach","click","onChange","event","persist","target","Send_default","AddPhotoAlternate_default","AttachFile_default","type","ConversationDetails","components_ConversationToolbar_ConversationToolbar","components_ConversationMessages_ConversationMessages","components_ConversationForm_ConversationForm","textAlign","margin","ConversationPlaceholder","cursor","@media (max-width: 863px)","& $conversationList, & $conversationDetails","transform","openConversion","conversationList","borderRight","conversationDetails","conversationPlaceholder","Chat","_clsx","router","setConversations","useEffect","mounted","axios","get","then","response","data","find","c","components_ConversationList_ConversationList","components_ConversationDetails_ConversationDetails","components_ConversationPlaceholder_ConversationPlaceholder","__webpack_exports__","views_Chat_Chat"],"mappings":"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","file":"static/js/8.9688a56b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"\n}), 'Block');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm0-15.5c2.49 0 4 2.02 4 4.5v.1l2 2V11c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68c-.24.06-.47.15-.69.23l1.64 1.64c.18-.02.36-.05.55-.05zM5.41 3.35L4 4.76l2.81 2.81C6.29 8.57 6 9.74 6 11v5l-2 2v1h14.24l1.74 1.74 1.41-1.41L5.41 3.35zM16 17H8v-6c0-.68.12-1.32.34-1.9L16 16.76V17z\"\n})), 'NotificationsOffOutlined');\n\nexports.default = _default;","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Typography,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  active: {\r\n    boxShadow: `inset 4px 0px 0px ${theme.palette.primary.main}`,\r\n    backgroundColor: colors.grey[50]\r\n  },\r\n  avatar: {\r\n    height: 40,\r\n    width: 40\r\n  },\r\n  details: {\r\n    marginLeft: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end'\r\n  },\r\n  unread: {\r\n    marginTop: 2,\r\n    padding: 2,\r\n    height: 18,\r\n    minWidth: 18\r\n  }\r\n}));\r\n\r\nconst ConversationListItem = props => {\r\n  const { active, conversation, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\r\n\r\n  return (\r\n    <ListItem\r\n      {...rest}\r\n      button\r\n      className={clsx(\r\n        {\r\n          [classes.active]: active\r\n        },\r\n        className\r\n      )}\r\n      component={RouterLink}\r\n      to={`/chat/${conversation.id}`}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          alt=\"Person\"\r\n          className={classes.avatar}\r\n          src={conversation.otherUser.avatar}\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={conversation.otherUser.name}\r\n        primaryTypographyProps={{\r\n          noWrap: true,\r\n          variant: 'h6'\r\n        }}\r\n        secondary={`${lastMessage.sender.name}: ${lastMessage.content}`}\r\n        secondaryTypographyProps={{\r\n          noWrap: true,\r\n          variant: 'body1'\r\n        }}\r\n      />\r\n      <div className={classes.details}>\r\n        <Typography\r\n          noWrap\r\n          variant=\"body2\"\r\n        >\r\n          {moment(lastMessage.created_at).isSame(moment(), 'day')\r\n            ? moment(lastMessage.created_at).format('LT')\r\n            : moment(lastMessage.created_at).fromNow()}\r\n        </Typography>\r\n        {conversation.unread > 0 && (\r\n          <Label\r\n            className={classes.unread}\r\n            color={colors.red[500]}\r\n            shape=\"rounded\"\r\n          >\r\n            {conversation.unread}\r\n          </Label>\r\n        )}\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nConversationListItem.propTypes = {\r\n  active: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  conversation: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ConversationListItem;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Toolbar,\r\n  Input,\r\n  IconButton,\r\n  Tooltip,\r\n  Divider,\r\n  List\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { ConversationListItem } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.white\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst ConversationList = props => {\r\n  const { conversations, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const selectedConversation = router.match.params.id;\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Toolbar>\r\n        <Input\r\n          className={classes.searchInput}\r\n          disableUnderline\r\n          placeholder=\"Search contacts\"\r\n        />\r\n        <Tooltip title=\"Search\">\r\n          <IconButton edge=\"end\">\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n      <Divider />\r\n      <List disablePadding>\r\n        {conversations.map((conversation, i) => (\r\n          <ConversationListItem\r\n            active={conversation.id === selectedConversation}\r\n            conversation={conversation}\r\n            divider={i < conversations.length - 1}\r\n            key={conversation.id}\r\n          />\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nConversationList.propTypes = {\r\n  className: PropTypes.string,\r\n  conversations: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ConversationList;\r\n","import React, { Fragment, useRef, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  IconButton,\r\n  Input,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOffOutlined';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport { StatusBullet } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.white\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(2),\r\n    '@media (min-width: 864px)': {\r\n      display: 'none'\r\n    }\r\n  },\r\n  user: {\r\n    flexShrink: 0,\r\n    flexGrow: 1\r\n  },\r\n  activity: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  statusBullet: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  search: {\r\n    height: 42,\r\n    padding: theme.spacing(0, 2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexBasis: 300,\r\n    marginLeft: 'auto',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flex: '1 1 auto'\r\n    }\r\n  },\r\n  searchIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.icon\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst ConversationToolbar = props => {\r\n  const { conversation, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const moreRef = useRef(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Tooltip title=\"Back\">\r\n        <IconButton\r\n          className={classes.backButton}\r\n          component={RouterLink}\r\n          edge=\"start\"\r\n          to=\"/chat\"\r\n        >\r\n          <KeyboardBackspaceIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <div className={classes.user}>\r\n        <Typography variant=\"h6\">{conversation.otherUser.name}</Typography>\r\n        <div className={classes.activity}>\r\n          {conversation.otherUser.active ? (\r\n            <Fragment>\r\n              <StatusBullet\r\n                className={classes.statusBullet}\r\n                color=\"success\"\r\n                size=\"small\"\r\n              />\r\n              <Typography variant=\"body2\">Active now</Typography>\r\n            </Fragment>\r\n          ) : (\r\n            <Typography variant=\"body2\">\r\n              Active {moment(conversation.otherUser.lastActivity).fromNow()}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Paper\r\n        className={classes.search}\r\n        elevation={1}\r\n      >\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <Input\r\n          className={classes.searchInput}\r\n          disableUnderline\r\n          placeholder=\"Search email\"\r\n        />\r\n      </Paper>\r\n      <Tooltip title=\"More options\">\r\n        <IconButton\r\n          onClick={handleMenuOpen}\r\n          ref={moreRef}\r\n        >\r\n          <MoreIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        anchorEl={moreRef.current}\r\n        keepMounted\r\n        onClose={handleMenuClose}\r\n        open={openMenu}\r\n      >\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <BlockIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Block user\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <DeleteIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Delete conversation\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <ArchiveIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Archive conversation\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <NotificationsOffIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Mute notifications\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nConversationToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n  conversation: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ConversationToolbar;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Link, Avatar, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  authUser: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    '& $body': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.primary.contrastText\r\n    }\r\n  },\r\n  inner: {\r\n    display: 'flex',\r\n    maxWidth: 500\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  body: {\r\n    backgroundColor: colors.grey[100],\r\n    color: theme.palette.text.primary,\r\n    borderRadius: theme.shape.borderRadius,\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  image: {\r\n    marginTop: theme.spacing(2),\r\n    height: 'auto',\r\n    width: 380,\r\n    maxWidth: '100%'\r\n  },\r\n  footer: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst ConversationMessage = props => {\r\n  const { message, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(\r\n        classes.root,\r\n        {\r\n          [classes.authUser]: message.sender.authUser\r\n        },\r\n        className\r\n      )}\r\n    >\r\n      <div className={classes.inner}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={message.sender.avatar}\r\n          to=\"/profile/1/timeline\"\r\n        />\r\n        <div>\r\n          <div className={classes.body}>\r\n            <div>\r\n              <Link\r\n                color=\"inherit\"\r\n                component={RouterLink}\r\n                to=\"/profile/1/timeline\"\r\n                variant=\"h6\"\r\n              >\r\n                {message.sender.authUser ? 'Me' : message.sender.name}\r\n              </Link>\r\n            </div>\r\n            <div className={classes.content}>\r\n              {message.contentType === 'image' ? (\r\n                <img\r\n                  alt=\"Attachment\"\r\n                  className={classes.image}\r\n                  src={message.content}\r\n                />\r\n              ) : (\r\n                <Typography\r\n                  color=\"inherit\"\r\n                  variant=\"body1\"\r\n                >\r\n                  {message.content}\r\n                </Typography>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={classes.footer}>\r\n            <Typography\r\n              className={classes.time}\r\n              variant=\"body2\"\r\n            >\r\n              {moment(message.created_at).fromNow()}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nConversationMessage.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ConversationMessage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport ConversationMessage from '../ConversationMessage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    maxHeight: '100%'\r\n  },\r\n  inner: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst ConversationMessages = props => {\r\n  const { messages, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <PerfectScrollbar>\r\n        <div className={classes.inner}>\r\n          {messages.map(message => {\r\n            return (\r\n              <ConversationMessage\r\n                key={message.id}\r\n                message={message} //\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nConversationMessages.propTypes = {\r\n  className: PropTypes.string,\r\n  messages: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ConversationMessages;\r\n","import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Divider,\r\n  IconButton,\r\n  Input,\r\n  Paper,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.white,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  paper: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(2),\r\n    padding: theme.spacing(0.5, 2)\r\n  },\r\n  input: {\r\n    width: '100%'\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 24\r\n  },\r\n  fileInput: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst ConversationForm = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [value, setValue] = useState('');\r\n\r\n  const sender = {\r\n    avatar: '/images/avatars/avatar_11.png'\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleAttach = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        src={sender.avatar}\r\n      />\r\n      <Paper\r\n        className={classes.paper}\r\n        elevation={1}\r\n      >\r\n        <Input\r\n          className={classes.input}\r\n          disableUnderline\r\n          onChange={handleChange}\r\n          placeholder=\"Leave a message\"\r\n        />\r\n      </Paper>\r\n      <Tooltip title=\"Send\">\r\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Divider className={classes.divider} />\r\n      <Tooltip title=\"Attach photo\">\r\n        <IconButton\r\n          edge=\"end\"\r\n          onClick={handleAttach}\r\n        >\r\n          <AddPhotoIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Attach file\">\r\n        <IconButton\r\n          edge=\"end\"\r\n          onClick={handleAttach}\r\n        >\r\n          <AttachFileIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <input\r\n        className={classes.fileInput}\r\n        ref={fileInputRef}\r\n        type=\"file\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nConversationForm.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ConversationForm;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nimport {\r\n  ConversationToolbar,\r\n  ConversationMessages,\r\n  ConversationForm\r\n} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: theme.palette.white\r\n  }\r\n}));\r\n\r\nconst ConversationDetails = props => {\r\n  const { conversation, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <ConversationToolbar conversation={conversation} />\r\n      <Divider />\r\n      <ConversationMessages messages={conversation.messages} />\r\n      <Divider />\r\n      <ConversationForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nConversationDetails.propTypes = {\r\n  className: PropTypes.string,\r\n  conversation: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ConversationDetails;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  inner: {\r\n    textAlign: 'center'\r\n  },\r\n  image: {\r\n    maxWidth: 400\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 1, 0)\r\n  }\r\n}));\r\n\r\nconst ConversationPlaceholder = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.inner}>\r\n        <img\r\n          alt=\"Select conversation\"\r\n          className={classes.image}\r\n          src=\"/images/undraw_work_chat_erdt.svg\"\r\n        />\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h4\"\r\n        >\r\n          Select conversation to display\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\">\r\n          To start a conversation just click the message button from a person\r\n          profile\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nConversationPlaceholder.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ConversationPlaceholder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport useRouter from 'utils/useRouter';\r\nimport { Page } from 'components';\r\nimport {\r\n  ConversationList,\r\n  ConversationDetails,\r\n  ConversationPlaceholder\r\n} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    overflow: 'hidden',\r\n    '@media (max-width: 863px)': {\r\n      '& $conversationList, & $conversationDetails': {\r\n        flexBasis: '100%',\r\n        width: '100%',\r\n        maxWidth: 'none',\r\n        flexShrink: '0',\r\n        transform: 'translateX(0)'\r\n      }\r\n    }\r\n  },\r\n  openConversion: {\r\n    '@media (max-width: 863px)': {\r\n      '& $conversationList, & $conversationDetails': {\r\n        transform: 'translateX(-100%)'\r\n      }\r\n    }\r\n  },\r\n  conversationList: {\r\n    width: 300,\r\n    flexBasis: 300,\r\n    flexShrink: 0,\r\n    '@media (min-width: 864px)': {\r\n      borderRight: `1px solid ${theme.palette.divider}`\r\n    }\r\n  },\r\n  conversationDetails: {\r\n    flexGrow: 1\r\n  },\r\n  conversationPlaceholder: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst Chat = () => {\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const [conversations, setConversations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchConversations = () => {\r\n      axios.get('/api/chat/conversations').then(response => {\r\n        if (mounted) {\r\n          setConversations(response.data.conversations);\r\n        }\r\n      });\r\n    };\r\n\r\n    fetchConversations();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  let selectedConversation;\r\n\r\n  if (router.match.params.id) {\r\n    selectedConversation = conversations.find(\r\n      c => c.id === router.match.params.id\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      className={clsx({\r\n        [classes.root]: true,\r\n        [classes.openConversion]: selectedConversation\r\n      })}\r\n      title=\"Chat\"\r\n    >\r\n      <ConversationList\r\n        className={classes.conversationList}\r\n        conversations={conversations}\r\n      />\r\n      {selectedConversation ? (\r\n        <ConversationDetails\r\n          className={classes.conversationDetails}\r\n          conversation={selectedConversation}\r\n        />\r\n      ) : (\r\n        <ConversationPlaceholder className={classes.conversationPlaceholder} />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","export { default } from './Chat';\r\n"],"sourceRoot":""}