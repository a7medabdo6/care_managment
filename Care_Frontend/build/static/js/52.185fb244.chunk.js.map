{"version":3,"sources":["Hook/Auth/SignUpHook.js","views/Add-Worker/AddWorker.js","Hook/Worker/Use-Create-Worker-Hook.js","views/AllWorkers/components/Header/Header.js","views/AllWorkers/components/Results/Results.js","views/AllWorkers/list.js","views/AllWorkers/index.js"],"names":["__webpack_require__","d","__webpack_exports__","useSignUpApi","react_query__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_3__","utils_useRouter__WEBPACK_IMPORTED_MODULE_4__","Api_Requests_useInsertDataSignUp__WEBPACK_IMPORTED_MODULE_5__","Redux_Slices_auth_SignUpSlice__WEBPACK_IMPORTED_MODULE_6__","Hook_useNotifaction__WEBPACK_IMPORTED_MODULE_7__","data","dispatch","useDispatch","router","useRouter","useMutation","useInsertDataSignUp","onSuccess","res","result","status","statusText","headers","console","log","UserSignUp","notify","setTimeout","history","push","onError","err","_err$response","_err$response$data","errors","response","message","AddWorker","_ref","handleClose","_useState","useState","_useState2","Object","slicedToArray","email","setemail","_useState3","_useState4","password","setpassword","_useState5","_useState6","username","setusername","_useState7","_useState8","role","setrole","formdata","_useSignUpWorkerApi","WorkerUserSignUp","_err$response2","_err$response2$data","useSignUpWorkerApi","SubmitSignUp","isLoading","mutate","error","isError","_useSelector","refetch","useSelector","state","WorkerSignUpSlice","WorkerUserSignUpData","handleSubmit","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","stop","_x","apply","this","arguments","useEffect","map","item","react_default","createElement","class","className","id","style","width","type","name","onChange","e","target","value","placeholder","onClick","react_toastify_esm","useStyles","makeStyles","root","Header","props","AllUserData","rest","objectWithoutProperties","show","setShow","classes","assign","clsx","Modal","onHide","closeButton","Title","Body","Add_Worker_AddWorker","Footer","Grid","alignItems","container","justify","spacing","Typography","component","gutterBottom","variant","length","Button","color","theme","content","padding","inner","minWidth","nameCell","display","avatar","height","marginRight","actions","justifyContent","Results","customers","selectedCustomers","page","setPage","rowsPerPage","setRowsPerPage","Math","ceil","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","TableCell","align","TableBody","customer","index","hover","Link","to","RouterLink","worker","phone","sex","size","filter","GetProfileViewSliceInfo","handelview","CardActions","TablePagination","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","selected","defaultProps","results","marginTop","CustomerManagementList","useGetAllUserApi","GetAllUserSlice","components_Header_Header","onFilter","onSearch","components_Results_Results","list"],"mappings":"4FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAA,QAAAI,EAAAJ,EAAA,IAAAK,GAAAL,EAAA,GAAAA,EAAA,KAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAWaG,EAAe,SAAAO,GACxB,IAAMC,EAAWC,cACXC,EAASC,cAEf,OAAOC,sBAAYC,IAAqB,CACtCC,UAAW,SAAAC,GACT,IAAMC,EAAS,CACbC,OAAQF,EAAIE,OAAS,IAAMF,EAAIG,WAC/BC,QAASJ,EAAII,QACbZ,KAAMQ,EAAIR,MAEZa,QAAQC,IAAIL,EAAO,UAClBR,EAASc,YAAWN,EAAOT,OAMzBgB,YAAO,+BAA+B,WAEhDC,WAAW,WACRd,EAAOe,QAAQC,KAAK,gBACpB,MAGEC,QAAS,SAAAC,GAAO,IAAAC,EAAAC,EACRd,EAAS,CACbC,OAAQW,EAAIX,OAAS,IAAMW,EAAIV,WAC/BC,QAASS,EAAIT,QACbZ,KAAMqB,EAAIrB,MAEZC,EAASuB,YAAOf,EAAOT,OAEvBa,QAAQC,IAAIO,EAAII,SAASzB,KAAK0B,SAG9BV,YAAM,OAACK,QAAD,IAACA,OAAD,UAAAC,EAACD,EAAKI,gBAAN,IAAAH,OAAA,UAAAC,EAACD,EAAetB,YAAhB,IAAAuB,OAAA,EAACA,EAAqBG,QAAQ,kQCoG7BC,EAxIG,SAAAC,GAAmB,IAAjBC,EAAiBD,EAAjBC,YAAiBC,EACXC,qBADWC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3BK,EAD2BH,EAAA,GACrBI,EADqBJ,EAAA,GAAAK,EAELN,mBAAS,IAFJO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE3BE,EAF2BD,EAAA,GAElBE,EAFkBF,EAAA,GAAAG,EAGLV,mBAAS,IAHJW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAG3BE,EAH2BD,EAAA,GAGlBE,EAHkBF,EAAA,GAAAG,EAIbd,mBAAS,GAJIe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAI3BE,EAJ2BD,EAAA,GAItBE,EAJsBF,EAAA,GAKrCjC,QAAQC,IAAIqB,GACR,IAwBMc,EAAU,CAEZd,MAASA,EACTI,SAAYA,EACZI,SAAYA,EACZI,MAASA,GAnCoBG,ECAH,SAAAlD,GAC9B,IAAMC,EAAWC,cAGjB,OAFeE,cAERC,sBAAYC,IAAqB,CACtCC,UAAW,SAAAC,GACT,IAAMC,EAAS,CACbC,OAAQF,EAAIE,OAAS,IAAMF,EAAIG,WAC/BC,QAASJ,EAAII,QACbZ,KAAMQ,EAAIR,MAEZa,QAAQC,IAAIL,EAAO,UAClBR,EAASkD,YAAiB1C,EAAOT,OAM/BgB,YAAO,+BAA+B,YAK3CI,QAAS,SAAAC,GAAO,IAAAC,EAAAC,EAAA6B,EAAAC,EACR5C,EAAS,CACbC,OAAQW,EAAIX,OAAS,IAAMW,EAAIV,WAC/BC,QAASS,EAAIT,QACbZ,KAAI,OAAEqB,QAAF,IAAEA,OAAF,UAAAC,EAAED,EAAKI,gBAAP,IAAAH,OAAA,UAAAC,EAAED,EAAetB,YAAjB,IAAAuB,OAAA,EAAEA,EAAqBG,SAE7BzB,EAASuB,YAAOf,EAAOT,OAEvBa,QAAQC,IAAIO,EAAII,SAASzB,KAAK0B,SAG9BV,YAAM,OAACK,QAAD,IAACA,OAAD,UAAA+B,EAAC/B,EAAKI,gBAAN,IAAA2B,OAAA,UAAAC,EAACD,EAAepD,YAAhB,IAAAqD,OAAA,EAACA,EAAqB3B,QAAQ,YDKuB4B,GAAvCC,GAvCSL,EAuC1BM,UAvC0BN,EAuChBO,QAA4BC,GAvCZR,EAuCIS,QAvCJT,EAuCYQ,OAvCZE,GAAAV,EAuCkBW,QAGbC,YAAY,SAAAC,GAAK,OAAIA,EAAMC,qBAA1DC,EA1C0BL,EA0C1BK,qBAAqBzC,EA1CKoC,EA0CLpC,OAChCX,QAAQC,IAAIU,GACR,IAAM0C,EAAY,eAAAC,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,KAAV1C,GAA4B,KAAbI,GAA8B,KAAbI,GAA4B,KAATI,EACnD/B,YAAO,sBAAsB,SAG7BuC,EAAaN,GALA,wBAAA0B,EAAAG,SAAAN,MAAH,gBAAAO,GAAA,OAAAZ,EAAAa,MAAAC,KAAAC,YAAA,GAwCpB,OAtBIC,oBAAU,WACLlB,IACCpC,IACAb,YAAO,+BAA+B,aAI1C,CAACiD,IAGHkB,oBAAU,WACL3D,IACe,iBAAXA,EACCR,YAAO,eAAe,SAChB0C,IAAU,IAChBlC,EAAO4D,IAAI,SAACC,GAAD,OAAQrE,YAAOqE,EAAK,aAMvC,CAAC7D,IAEL8D,EAAAhB,EAAAiB,cAAA,WAEJD,EAAAhB,EAAAiB,cAAA,OAAKC,MAAM,mBACXF,EAAAhB,EAAAiB,cAAA,QAAME,UAAU,2BAA2BC,GAAG,eAAeC,MAAO,CAACC,MAAM,UAAU,YAErFN,EAAAhB,EAAAiB,cAAA,SAAOM,KAAK,OAAOC,KAAK,cAAcL,UAAU,iCAAiCM,SAzEvD,SAACC,GACvBnF,QAAQC,IAAIkF,EAAEC,OAAOC,OAErBtD,EAAYoD,EAAEC,OAAOC,QAsEoFC,YAAY,WAAWT,GAAG,iBAUvIJ,EAAAhB,EAAAiB,cAAA,OAAKC,MAAM,mBACXF,EAAAhB,EAAAiB,cAAA,QAAME,UAAU,2BAA2BC,GAAG,eAAeC,MAAO,CAACC,MAAM,UAAU,SAErFN,EAAAhB,EAAAiB,cAAA,SAAOM,KAAK,OAAOC,KAAK,cAAcL,UAAU,iCAAiCM,SAjG3D,SAACC,GAEf5D,EAAS4D,EAAEC,OAAOC,QA+F8EC,YAAY,QAAQT,GAAG,iBAM/HJ,EAAAhB,EAAAiB,cAAA,OAAKC,MAAM,mBACXF,EAAAhB,EAAAiB,cAAA,QAAME,UAAU,2BAA2BC,GAAG,eAAeC,MAAO,CAACC,MAAM,UAAU,YAErFN,EAAAhB,EAAAiB,cAAA,SAAOM,KAAK,OAAOC,KAAK,cAAcL,UAAU,iCAAiCM,SApGvD,SAACC,GACnBxD,EAAYwD,EAAEC,OAAOC,QAmG+EC,YAAY,WAAWT,GAAG,iBAOtIJ,EAAAhB,EAAAiB,cAAA,OAAKC,MAAM,mBACXF,EAAAhB,EAAAiB,cAAA,QAAME,UAAU,2BAA2BC,GAAG,eAAeC,MAAO,CAACC,MAAM,UAAU,QAErFN,EAAAhB,EAAAiB,cAAA,SAAOM,KAAK,SAASC,KAAK,cAAcL,UAAU,iCAAiCM,SAjG5D,SAACC,GAChBhD,EAAQgD,EAAEC,OAAOC,QAgGiFC,YAAY,OAAOT,GAAG,iBAKhIJ,EAAAhB,EAAAiB,cAAA,OAAKE,UAAU,kCACXH,EAAAhB,EAAAiB,cAAA,UAAQa,QAASlC,EAAcuB,UAAU,eAAc,SAE3DH,EAAAhB,EAAAiB,cAACc,EAAA,EAAD,QErIMC,EAAYC,YAAW,iBAAO,CAClCC,KAAM,MAsEOC,EAnEA,SAAAC,GAAS,IACdjB,EAAoCiB,EAApCjB,UAAUkB,EAA0BD,EAA1BC,YAAiBC,EADb3E,OAAA4E,EAAA,EAAA5E,CACsByE,EADtB,6BAAA5E,EAEEC,oBAAS,GAFXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEfgF,EAFe9E,EAAA,GAET+E,EAFS/E,EAAA,GAIhBH,EAAc,kBAAMkF,GAAQ,IAE5BC,EAAUV,IAEhB,OACEhB,EAAAhB,EAAAiB,cAAA,MAAAtD,OAAAgF,OAAA,GACML,EADN,CAEEnB,UAAWyB,YAAKF,EAAQR,KAAMf,KAGpCH,EAAAhB,EAAAiB,cAAC4B,EAAA,EAAD,CAAOL,KAAMA,EAAMM,OAAQvF,GACnByD,EAAAhB,EAAAiB,cAAC4B,EAAA,EAAMV,OAAP,CAAcY,aAAW,GACvB/B,EAAAhB,EAAAiB,cAAC4B,EAAA,EAAMG,MAAP,CAAa7B,UAAU,gBACvBH,EAAAhB,EAAAiB,cAAA,OAAKE,UAAU,IAAG,mBAGpBH,EAAAhB,EAAAiB,cAAC4B,EAAA,EAAMI,KAAP,KACEjC,EAAAhB,EAAAiB,cAACiC,EAAD,CAAW3F,YAAaA,KAE1ByD,EAAAhB,EAAAiB,cAAC4B,EAAA,EAAMM,OAAP,OAIFnC,EAAAhB,EAAAiB,cAACmC,EAAA,EAAD,CACEC,WAAW,WACXC,WAAS,EACTC,QAAQ,gBACRC,QAAS,GAETxC,EAAAhB,EAAAiB,cAACmC,EAAA,EAAD,CAAMrC,MAAI,GACRC,EAAAhB,EAAAiB,cAACwC,EAAA,EAAD,CACEC,UAAU,KACVC,cAAY,EACZC,QAAQ,YACT,cAGD5C,EAAAhB,EAAAiB,cAACwC,EAAA,EAAD,CACEC,UAAU,KACVE,QAAQ,MACT,WAHD,OAIUvB,QAJV,IAIUA,OAJV,EAIUA,EAAawB,OAAO,MAGhC7C,EAAAhB,EAAAiB,cAACmC,EAAA,EAAD,CAAMrC,MAAI,GAERC,EAAAhB,EAAAiB,cAAC6C,EAAA,EAAD,CACAhC,QA9CW,kBAAMW,GAAQ,IA+CvBsB,MAAM,UACNH,QAAQ,aACT,8LChCL5B,EAAYC,YAAW,SAAA+B,GAAK,MAAK,CACrC9B,KAAM,GACN+B,QAAS,CACPC,QAAS,GAEXC,MAAO,CACLC,SAAU,KAEZC,SAAU,CACRC,QAAS,OACTjB,WAAY,UAEdkB,OAAQ,CACNC,OAAQ,GACRlD,MAAO,GACPmD,YAAaT,EAAMR,QAAQ,IAE7BkB,QAAS,CACPR,QAASF,EAAMR,QAAQ,GACvBmB,eAAgB,eAIdC,EAAU,SAAAxC,GAId,IAAMvG,EAASC,cAGPqF,EAA8CiB,EAA9CjB,UAAW0D,EAAmCzC,EAAnCyC,UAAUxC,EAAyBD,EAAzBC,YAAgBC,EAPtB3E,OAAA4E,EAAA,EAAA5E,CAO+ByE,EAP/B,yCASjBzG,EAAWC,cAkBX8G,EAAUV,IA3BOxE,EA6B2BC,mBAAS,IA7BpCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GA6BhBsH,EA7BgBpH,EAAA,GAAAK,GAAAL,EAAA,GA8BCD,mBAAS,IA9BVO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GA8BhBgH,EA9BgB/G,EAAA,GA8BVgH,EA9BUhH,EAAA,GAAAG,EA+BeV,mBAAS,IA/BxBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GA+BhB8G,EA/BgB7G,EAAA,GA+BH8G,EA/BG9G,EAAA,GAyEvB,OACE4C,EAAAhB,EAAAiB,cAAA,MAAAtD,OAAAgF,OAAA,GACML,EADN,CAEEnB,UAAWyB,YAAKF,EAAQR,KAAMf,KAE9BH,EAAAhB,EAAAiB,cAACwC,EAAA,EAAD,CACEM,MAAM,gBACNJ,cAAY,EACZC,QAAQ,SAEPiB,EAAUhB,OAAO,wBAAsBkB,EAAO,EAAE,MAAI,IACpDI,KAAKC,KAAKP,EAAUhB,OAASoB,IAEhCjE,EAAAhB,EAAAiB,cAACoE,EAAA,EAAD,KACErE,EAAAhB,EAAAiB,cAACqE,EAAA,EAAD,CACEC,OAAQvE,EAAAhB,EAAAiB,cAACuE,EAAA,EAAD,MACRC,MAAM,kBAERzE,EAAAhB,EAAAiB,cAACyE,EAAA,EAAD,MACA1E,EAAAhB,EAAAiB,cAAC0E,EAAA,EAAD,CAAaxE,UAAWuB,EAAQuB,SAC9BjD,EAAAhB,EAAAiB,cAAC2E,EAAA5F,EAAD,KACEgB,EAAAhB,EAAAiB,cAAA,OAAKE,UAAWuB,EAAQyB,OACtBnD,EAAAhB,EAAAiB,cAAC4E,EAAA,EAAD,KACE7E,EAAAhB,EAAAiB,cAAC6E,EAAA,EAAD,KACE9E,EAAAhB,EAAAiB,cAAC8E,EAAA,EAAD,KAYE/E,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,KAAW,UACXhF,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,KAAW,QACXhF,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,KAAW,SACXhF,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,KAAW,SACXhF,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,KAAW,OAEXhF,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,CAAWC,MAAM,SAAQ,aAM/BjF,EAAAhB,EAAAiB,cAACiF,EAAA,EAAD,YACK7D,QADL,IACKA,OADL,EACKA,EAAavB,IAAI,SAACqF,EAASC,GAAV,OAChBpF,EAAAhB,EAAAiB,cAAC8E,EAAA,EAAD,CACEM,OAAK,GAIRrF,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,KAAYI,EAAQ,GAEhBpF,EAAAhB,EAAAiB,cAACqF,EAAA,EAAD,CAAMC,GAAG,iBACVvF,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,KACEhF,EAAAhB,EAAAiB,cAAA,OAAKE,UAAWuB,EAAQ2B,UAEtBrD,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAACqF,EAAA,EAAD,CACEvC,MAAM,UACNL,UAAW8C,IACXD,GAAG,0BACH3C,QAAQ,MAEPuC,EAAS9H,cAQlB2C,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,KAAYG,EAAStI,OACrBmD,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,KAEwB,OAApBG,EAASM,OACPN,EAASM,OAAOC,MACd,IAGR1F,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,KAEwB,OAApBG,EAASM,OACPN,EAASM,OAAOE,IACd,IAIR3F,EAAAhB,EAAAiB,cAAC+E,EAAA,EAAD,CAAWC,MAAM,SAEfjF,EAAAhB,EAAAiB,cAAC6C,EAAA,EAAD,CACEC,MAAM,UAEN6C,KAAK,QACL9E,QAAS,kBAhKf,SAACpG,GAIjB,IAAMQ,EAAMmG,EAAYwE,OAAO,SAAC9F,EAAKqF,GAAN,OAAgBA,IAAU1K,IAGzDa,QAAQC,IAAIN,GACZP,EAASmL,YAAwB5K,IAE/BL,EAAOe,QAAQC,KAAK,gBAsJckK,CAAWX,IACzBxC,QAAQ,YACT,QAKA5C,EAAAhB,EAAAiB,cAAC6C,EAAA,EAAD,CACA3C,UAAU,OACT4C,MAAM,UAEN6C,KAAK,QAELhD,QAAQ,YAER5C,EAAAhB,EAAAiB,cAAA,KAAGE,UAAU,6CAY/BH,EAAAhB,EAAAiB,cAAC+F,EAAA,EAAD,CAAa7F,UAAWuB,EAAQgC,SAC9B1D,EAAAhB,EAAAiB,cAACgG,EAAA,EAAD,CACEvD,UAAU,MACVwD,MAAOrC,EAAUhB,OACjBsD,aAzIe,SAAChH,EAAO4E,GAC/BC,EAAQD,IAyIAqC,oBAtIsB,SAAAjH,GAC9B+E,EAAe/E,EAAMwB,OAAOC,QAsIpBmD,KAAMA,EACNE,YAAaA,EACboC,mBAAoB,CAAC,EAAG,GAAI,QAIlCrG,EAAAhB,EAAAiB,cAACuE,EAAA,EAAD,CAAc8B,SAAUxC,MAU9BF,EAAQ2C,aAAe,CACrB1C,UAAW,IAGED,QCjRT5C,EAAYC,YAAW,SAAA+B,GAAK,MAAK,CACrC9B,KAAM,CACJgC,QAASF,EAAMR,QAAQ,IAEzBgE,QAAS,CACPC,UAAWzD,EAAMR,QAAQ,OAuDdkE,EAnDgB,WAC7B,IAAMhF,EAAUV,IADmBxE,EAGDC,mBAAS,CAAC,GAAG,KAHZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAG5BqH,EAH4BnH,EAAA,GA2B5B2E,GA3B4B3E,EAAA,GAyBtBiK,cAANjM,KAEc8D,YAAY,SAAAC,GAAK,OAAIA,EAAMmI,kBAAzCvF,aAGP,OAFA9F,QAAQC,IAAI6F,GAGVrB,EAAAhB,EAAAiB,cAACuE,EAAA,EAAD,CACErE,UAAWuB,EAAQR,KACnBuD,MAAM,4BAENzE,EAAAhB,EAAAiB,cAAC4G,EAAD,CAAQxF,YAAcA,IACtBrB,EAAAhB,EAAAiB,cAACuE,EAAA,EAAD,CACEsC,SAde,aAefC,SAde,eAgBhBlD,GACC7D,EAAAhB,EAAAiB,cAAC+G,EAAD,CACE7G,UAAWuB,EAAQ8E,QACnB3C,UAAWA,EACXxC,YAAcA,MC7DxBrH,EAAAC,EAAAC,EAAA,4BAAA+M","file":"static/js/52.185fb244.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { errors, UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\n\r\nimport notify from 'Hook/useNotifaction';\r\n\r\nexport const useSignUpApi = data => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useMutation(useInsertDataSignUp, {\r\n      onSuccess: res => {\r\n        const result = {\r\n          status: res.status + '-' + res.statusText,\r\n          headers: res.headers,\r\n          data: res.data\r\n        };\r\n        console.log(result,\"result\");\r\n         dispatch(UserSignUp(result.data));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n           notify(\"The account has been created\",\"success\")    \r\n\r\n setTimeout(() => {\r\n    router.history.push('/auth/login');\r\n }, 2000);\r\n  \r\n      },\r\n      onError: err => {\r\n        const result = {\r\n          status: err.status + '-' + err.statusText,\r\n          headers: err.headers,\r\n          data: err.data\r\n        };\r\n        dispatch(errors(result.data));\r\n\r\n        console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err?.response?.data?.message,\"error\")       \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n","\r\nimport React from 'react'\r\n\r\nimport { useSignUpApi } from 'Hook/Auth/SignUpHook'\r\nimport { useSelector } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { useSignUpWorkerApi } from 'Hook/Worker/Use-Create-Worker-Hook'\r\nimport { useEffect } from 'react'\r\nimport notify from 'Hook/useNotifaction'\r\nimport { ToastContainer } from 'react-toastify'\r\n\r\nconst AddWorker = ({handleClose}) => {\r\n    const[email,setemail]=useState()\r\n    const[password,setpassword]=useState(\"\")\r\n    const[username,setusername]=useState(\"\")\r\n    const[role,setrole]=useState(0)\r\nconsole.log(email);\r\n    const handelEmail=(e)=>{\r\n       \r\n        setemail(e.target.value)\r\n\r\n    }\r\n\r\n    const handel_PassWord=(e)=>{\r\n        setpassword(e.target.value)\r\n    }\r\n\r\n\r\n   const handel_UserName =(e)=>{\r\n    console.log(e.target.value);\r\n\r\n    setusername(e.target.value)\r\n   }\r\n   \r\n    \r\n\r\n    const handel_Role =(e)=>{\r\n        setrole(e.target.value)\r\n\r\n    }\r\n        \r\n    const formdata ={\r\n    \r\n        \"email\": email,\r\n        \"password\": password,\r\n        \"username\": username,\r\n        \"role\": +role\r\n      \r\n    }\r\n    \r\n    const {isLoading,mutate:SubmitSignUp,isError,error,refetch} =  useSignUpWorkerApi()\r\n    \r\n    \r\n    const {WorkerUserSignUpData,errors} = useSelector(state => state.WorkerSignUpSlice)\r\nconsole.log(errors);\r\n    const handleSubmit = async event => {\r\n        if (email === \"\"|| password === \"\"||username === \"\" || role === \"\"){\r\n            notify(\"Complete the fields\",\"error\")   \r\n\r\n        }else{\r\n            SubmitSignUp(formdata)\r\n\r\n        }\r\n      \r\n        // if(userSigbUpData.id){\r\n        //   notify(\"The account has been created\",\"success\")      \r\n  \r\n        // }\r\n  \r\n        // history.push('/');\r\n      };\r\n\r\n\r\n      useEffect(()=>{\r\n        if(WorkerUserSignUpData){\r\n            handleClose()\r\n            notify(\"The account has been created\",\"success\")   \r\n\r\n        }\r\n\r\n      },[WorkerUserSignUpData])\r\n\r\n\r\n      useEffect(()=>{\r\n        if(errors){\r\n            if(errors === \"email in use\"){\r\n                notify(\"email in use\",\"error\")\r\n            }else if (error !== []){\r\n                errors.map((item)=>notify(item,\"error\"))\r\n            }\r\n\r\n          \r\n        }\r\n\r\n      },[errors])\r\n  return (\r\n    <div>\r\n \r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>UserName</span>\r\n\r\n<input type=\"text\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handel_UserName}  placeholder=\"UserName\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>Email</span>\r\n\r\n<input type=\"text\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handelEmail} placeholder=\"Email\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>PassWord</span>\r\n\r\n<input type=\"text\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handel_PassWord} placeholder=\"PassWord\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>Role</span>\r\n\r\n<input type=\"number\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handel_Role} placeholder=\"Role\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n<div className='d-flex justify-content-end p-3'>\r\n    <button onClick={handleSubmit} className='p-2 saveBtn'>Save</button>\r\n</div>\r\n<ToastContainer></ToastContainer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddWorker","import axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\n\r\nimport notify from 'Hook/useNotifaction';\r\nimport { errors, WorkerUserSignUp } from \"Redux_Slices/Worker/WorkerSignUpSlice\";\r\n\r\nexport const useSignUpWorkerApi = data => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useMutation(useInsertDataSignUp, {\r\n      onSuccess: res => {\r\n        const result = {\r\n          status: res.status + '-' + res.statusText,\r\n          headers: res.headers,\r\n          data: res.data\r\n        };\r\n        console.log(result,\"result\");\r\n         dispatch(WorkerUserSignUp(result.data));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n           notify(\"The account has been created\",\"success\")    \r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        const result = {\r\n          status: err.status + '-' + err.statusText,\r\n          headers: err.headers,\r\n          data: err?.response?.data?.message\r\n        };\r\n        dispatch(errors(result.data));\r\n\r\n        console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err?.response?.data?.message,\"error\")       \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport Modal from 'react-bootstrap/Modal';\nimport AddWorker from 'views/Add-Worker/AddWorker';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className,AllUserData , ...rest } = props;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true); \n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n\n<Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title className='text-center '> \n          <div className=''>   Add Worker</div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AddWorker handleClose={handleClose}/>\n             </Modal.Body>\n        <Modal.Footer>\n         \n        </Modal.Footer>\n      </Modal>\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n           Workers({AllUserData?.length})\n          </Typography>\n        </Grid>\n        <Grid item>\n          \n          <Button\n          onClick={handleShow}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Add Worker\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  Button,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport getInitials from 'utils/getInitials';\r\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetProfileViewSliceInfo } from 'Redux_Slices/Profile/View-profile-Slice';\r\nimport useRouter from 'utils/useRouter';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  },\r\n  nameCell: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    height: 42,\r\n    width: 42,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n\r\n  \r\n\r\n  const router = useRouter();\r\n\r\n\r\n  const { className, customers,AllUserData, ...rest } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handelview =(data)=>{\r\n    \r\n\r\n  \r\n    const res = AllUserData.filter((item,index) => index === data)\r\n    \r\n\r\n    console.log(res);\r\n    dispatch(GetProfileViewSliceInfo(res));\r\n    \r\n      router.history.push('/ViewProfile');\r\n \r\n    // window.location.replace('/ViewProfile');\r\n\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedCustomers = event.target.checked\r\n      ? customers.map(customer => customer.id)\r\n      : [];\r\n\r\n    setSelectedCustomers(selectedCustomers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomers.indexOf(id);\r\n    let newSelectedCustomers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomers.length - 1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, selectedIndex),\r\n        selectedCustomers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomers(newSelectedCustomers);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {customers.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(customers.length / rowsPerPage)}\r\n      </Typography>\r\n      <Card>\r\n        <CardHeader\r\n          action={<GenericMoreButton />}\r\n          title=\"All customers\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          <PerfectScrollbar>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {/* <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedCustomers.length === customers.length}\r\n                        color=\"primary\"\r\n                        indeterminate={\r\n                          selectedCustomers.length > 0 &&\r\n                          selectedCustomers.length < customers.length\r\n                        }\r\n                        onChange={handleSelectAll}\r\n                      />\r\n                    </TableCell> */}\r\n                    <TableCell>Number</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>Phone</TableCell>\r\n                    <TableCell>Sex</TableCell>\r\n                    \r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n              \r\n             \r\n              <TableBody>\r\n                  {AllUserData?.map((customer,index) => (\r\n                    <TableRow\r\n                      hover\r\n                      // key={customer.id}\r\n                      // selected={selectedCustomers.indexOf(customer.id) !== -1}\r\n                    >\r\n                   <TableCell>{index + 1}</TableCell>\r\n\r\n                       <Link to=\"/service/user\">\r\n                      <TableCell>\r\n                        <div className={classes.nameCell}>\r\n                  \r\n                          <div>\r\n                            <Link\r\n                              color=\"inherit\"\r\n                              component={RouterLink}\r\n                              to=\"/management/customers/1\"\r\n                              variant=\"h6\"\r\n                            >\r\n                              {customer.username}\r\n                              {/* {customer.name} */}\r\n                            </Link>\r\n                            {/* <div>{\"customer.email\"}</div> */}\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                      </Link>\r\n                      <TableCell>{customer.email}</TableCell>\r\n                      <TableCell>\r\n                        {\r\n                          customer.worker !== null ? (\r\n                            customer.worker.phone\r\n                          ) : \"\"\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {\r\n                          customer.worker !== null ? (\r\n                            customer.worker.sex\r\n                          ) : \"\"\r\n                        }\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"right\">\r\n\r\n                        <Button\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          onClick={()=> handelview(index)}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n\r\n\r\n                         <Button\r\n                         className='ms-1'\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          \r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i className=\"fa-sharp fa-solid fa-trash p-1\"></i>\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n             \r\n                \r\n              </Table>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={customers.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      <TableEditBar selected={selectedCustomers} />\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  customers: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page, SearchBar } from 'components';\r\nimport { Header, Results } from './components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerManagementList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [customers, setCustomers] = useState([{},{}]);\r\n\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n\r\n  //   const fetchCustomers = () => {\r\n  //     axios.get('/api/management/customers').then(response => {\r\n  //       if (mounted) {\r\n  //         setCustomers(response.data.customers);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   fetchCustomers();\r\n\r\n  //   return () => {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  const handleFilter = () => {};\r\n  const handleSearch = () => {};\r\n  const {data}=useGetAllUserApi()\r\n\r\n  const {AllUserData} =useSelector(state => state.GetAllUserSlice)\r\n  console.log(AllUserData);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Management List\"\r\n    >\r\n      <Header AllUserData ={AllUserData} />\r\n      <SearchBar\r\n        onFilter={handleFilter}\r\n        onSearch={handleSearch}\r\n      />\r\n      {customers && (\r\n        <Results\r\n          className={classes.results}\r\n          customers={customers}\r\n          AllUserData ={AllUserData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerManagementList;\r\n","export { default } from './list';\r\n"],"sourceRoot":""}