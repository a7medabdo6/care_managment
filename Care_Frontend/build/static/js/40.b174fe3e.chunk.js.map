{"version":3,"sources":["Hook/AllUser/Get-All-user-Hook.js","Api_Requests/UseGetAllUser.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","views/AllServiceUser/components/Header/Header.js","Api_Requests/Service-user/Get-All-Service-UserData.js","Api_Requests/Service-user/Delet-One-Service-User.js","views/AllServiceUser/components/Results/Results.js","Hook/Service-user/Delet-Service-User-Hook.js","views/AllServiceUser/list.js","Hook/Service-user/GetALLServiceUserData-Hook.js","views/AllServiceUser/index.js","Api/baseURL.js","Hook/useNotifaction.js","Api_Requests/useInsertDataSignUp.js","Api_Requests/UseGetProfileData.js"],"names":["__webpack_require__","d","__webpack_exports__","useGetAllUserApi","Hook_useNotifaction__WEBPACK_IMPORTED_MODULE_0__","react_query__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_5__","utils_useRouter__WEBPACK_IMPORTED_MODULE_6__","Api_Requests_UseGetAllUser__WEBPACK_IMPORTED_MODULE_9__","Redux_Slices_AllUser_Get_All_user_Slice__WEBPACK_IMPORTED_MODULE_10__","formData","dispatch","useDispatch","useRouter","useQuery","UseGetAllUserData","onSuccess","res","GetAllUserSliceInfo","onError","err","notify","response","data","message","_ref2","Object","E_pk_work_care_management_Care_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_pk_work_care_management_Care_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee2","url","parmas","config","wrap","_context2","prev","next","headers","token","localStorage","getItem","baseUrl","get","sent","abrupt","stop","_x3","_x4","apply","this","arguments","_ref","react_default","createElement","KeyboardArrowRight","KeyboardArrowLeft","_ref3","_ref4","TablePagination_TablePaginationActions","forwardRef","props","ref","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","other","objectWithoutProperties","theme","useTheme","esm_extends","IconButton","onClick","event","disabled","color","direction","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","TablePagination_TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","classes","colSpanProp","_props$component","component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","className","root","Toolbar","toolbar","spacer","length","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","clsx_m","selectRoot","value","onChange","map","rowsPerPageOption","menuItem","key","min","actions","withStyles","palette","text","secondary","fontSize","typography","pxToRem","&:last-child","padding","height","minHeight","paddingRight","flex","flexShrink","marginRight","marginLeft","paddingLeft","textAlign","textAlignLast","top","name","useStyles","makeStyles","Header","AllServiceUserData","rest","assign","clsx","Grid","alignItems","container","justify","spacing","item","gutterBottom","Button","UseGetAllServiceUserData","asyncToGenerator","regenerator_default","UseDeletServiceUData","id","delete","content","inner","minWidth","nameCell","display","avatar","width","justifyContent","Results","customers","_useState","useState","_useState2","slicedToArray","selectedCustomers","_useState3","_useState4","setPage","_useState5","_useState6","setRowsPerPage","_useDeletServiceUserA","QueryClient","useQueryClient","useMutation","DeletServiceUserSliceInfo","invalidateQueries","useDeletServiceUserApi","SubmitDeletServiceUser","isLoading","mutate","isError","error","refetch","useSelector","state","DeletServiceUserSlice","DeletServiceUserData","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","align","TableBody","customer","index","hover","initials","lcds","age_ate_refferal","home_address","school_address","sex","start_date","end_date","qurdian_contact","qurdian","relationship","support_worker","assesment_date","disability","ethnicity","religion","compliment_of_the_household","size","CardActions","TablePagination","target","selected","defaultProps","results","marginTop","CustomerManagementList","GetAllServiceUserSliceInfo","useGetAllServiceUserApi","GetAllServiceUserSlice","console","log","components_Header_Header","onFilter","onSearch","components_Results_Results","list","axios__WEBPACK_IMPORTED_MODULE_0__","baseurl","n","axios","create","baseURL","react_toastify__WEBPACK_IMPORTED_MODULE_0__","msg","type","toast","warn","success","useInsertDataSignUp","_callee","_context","post","_x","UseGetProfileData"],"mappings":"4FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,KAAAK,GAAAL,EAAA,KAAAA,EAAA,KAAAA,EAAA,MAAAM,GAAAN,EAAA,GAAAA,EAAA,KAAAO,EAAAP,EAAA,IAAAQ,GAAAR,EAAA,KAAAA,EAAA,KAAAA,EAAA,OAAAS,EAAAT,EAAA,KAYaG,EAAmB,SAAAO,GAC5B,IAAMC,EAAWC,cACFC,cAEf,OAAOC,mBAAS,aAAaC,IAAmB,CAC9CC,UAAW,SAAAC,GAGRN,EAASO,YAAoBD,KAUhCE,QAAS,SAAAC,GAIPC,YAAOD,EAAIE,SAASC,KAAKC,QAAQ,wHC1BnCT,EAAiB,eAAAU,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAAKC,GAAZ,IAAAC,EAAAjB,EAAA,OAAAW,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChBJ,EAAS,CACXK,QAAS,CAAEC,MAAOC,aAAaC,QAAQ,WAFrBN,EAAAE,KAAA,EAIJK,IAAQC,IAAI,QAASV,GAJjB,cAIhBjB,EAJgBmB,EAAAS,KAAAT,EAAAU,OAAA,SAKf7B,EAAIM,MALW,wBAAAa,EAAAW,SAAAhB,MAAH,gBAAAiB,EAAAC,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,8KCIvBC,EAAWC,EAAAzB,EAAK0B,cAAeC,EAAA,EAAkB,MAEjD/B,EAAY6B,EAAAzB,EAAK0B,cAAeE,EAAA,EAAiB,MAEjDC,EAAYJ,EAAAzB,EAAK0B,cAAeE,EAAA,EAAiB,MAEjDE,EAAYL,EAAAzB,EAAK0B,cAAeC,EAAA,EAAkB,MAmEnCI,EAjEcN,EAAAzB,EAAKgC,WAAA,SAAAC,EAAAC,GAClC,IAAAC,EAAAF,EAAAE,oBACAC,EAAAH,EAAAG,MACAC,EAAAJ,EAAAI,oBACAC,EAAAL,EAAAK,aACAC,EAAAN,EAAAM,KACAC,EAAAP,EAAAO,YACAC,EAAc5C,OAAA6C,EAAA,EAAA7C,CAAwBoC,EAAA,2FAEtCU,EAAc9C,OAAA+C,EAAA,EAAA/C,GAUd,OAAS4B,EAAAzB,EAAK0B,cAAA,MAAsB7B,OAAAgD,EAAA,EAAAhD,CAAQ,CAC5CqC,OACGO,GAAUhB,EAAAzB,EAAK0B,cAAeoB,EAAA,EAAYjD,OAAAgD,EAAA,EAAAhD,CAAQ,CACrDkD,QAXA,SAAAC,GACAV,EAAAU,EAAAT,EAAA,IAWAU,SAAA,IAAAV,EACAW,MAAA,WACGf,GAAA,QAAAQ,EAAAQ,UAAA3B,EAAA5B,GAAmE6B,EAAAzB,EAAK0B,cAAeoB,EAAA,EAAYjD,OAAAgD,EAAA,EAAAhD,CAAQ,CAC9GkD,QAXA,SAAAC,GACAV,EAAAU,EAAAT,EAAA,IAWAU,SAAAV,GAAAa,KAAAC,KAAAjB,EAAAI,GAAA,EACAU,MAAA,WACGb,GAAA,QAAAM,EAAAQ,UAAAtB,EAAAC,MCiCHwB,EAAA,SAAA9B,GACA,IAAA+B,EAAA/B,EAAA+B,KACAC,EAAAhC,EAAAgC,GACApB,EAAAZ,EAAAY,MACA,SAAAqB,OAAAF,EAAA,KAAAE,OAAAD,EAAA,QAAAC,OAAArB,IAGAsB,EAAA,eAKIC,EAAkBlC,EAAAzB,EAAKgC,WAAA,SAAAC,EAAAC,GAC3B,IAuBA0B,EAvBAC,EAAA5B,EAAA6B,iBACAA,OAAA,IAAAD,EAA4D9B,EAAsB8B,EAClF1B,EAAAF,EAAAE,oBACA4B,EAAA9B,EAAA8B,QACAC,EAAA/B,EAAA2B,QACAK,EAAAhC,EAAAiC,UACAC,OAAA,IAAAF,EAAgDG,EAAA,EAASH,EACzD7B,EAAAH,EAAAG,MACAiC,EAAApC,EAAAqC,mBACAA,OAAA,IAAAD,EAAAf,EAAAe,EACAE,EAAAtC,EAAAuC,iBACAA,OAAA,IAAAD,EAAA,iBAAAA,EACAlC,EAAAJ,EAAAI,oBACAC,EAAAL,EAAAK,aACAmC,EAAAxC,EAAAwC,oBACAlC,EAAAN,EAAAM,KACAC,EAAAP,EAAAO,YACAkC,EAAAzC,EAAA0C,mBACAA,OAAA,IAAAD,EAAAhB,EAAAgB,EACAE,EAAA3C,EAAA4C,YACAA,OAAA,IAAAD,EAAA,GAAsDA,EACtDnC,EAAc5C,OAAA6C,EAAA,EAAA7C,CAAwBoC,EAAA,+OAItCkC,IAAoBC,EAAA,GAAS,OAAAD,IAC7BP,EAAAI,GAAA,KAGA,IAAAc,EAAAD,EAAAE,OAAA,SAA0DC,EAAA,EAC1D,OAASvD,EAAAzB,EAAK0B,cAAAyC,EAA0BtE,OAAAgD,EAAA,EAAAhD,CAAQ,CAChDoF,UAAAlB,EAAAmB,KACAtB,UACA1B,OACGO,GAAUhB,EAAAzB,EAAK0B,cAAeyD,EAAA,EAAO,CACxCF,UAAAlB,EAAAqB,SACK3D,EAAAzB,EAAK0B,cAAA,OACVuD,UAAAlB,EAAAsB,SACGV,EAAAW,OAAA,GAAoC7D,EAAAzB,EAAK0B,cAAe6D,EAAA,EAAU,CACrErC,MAAA,UACAsC,QAAA,UACAP,UAAAlB,EAAA0B,SACGjB,GAAAG,EAAAW,OAAA,GAAsD7D,EAAAzB,EAAK0B,cAAegE,EAAA,EAAQ7F,OAAAgD,EAAA,EAAAhD,CAAQ,CAC7FkE,QAAA,CACA4B,OAAA5B,EAAA4B,OACAC,KAAA7B,EAAA8B,YAEAC,MAAWrE,EAAAzB,EAAK0B,cAAeqE,EAAA,EAAS,CACxCd,UAAiBpF,OAAAmG,EAAA,EAAAnG,CAAIkE,EAAA+B,MAAA/B,EAAAkC,cAErBC,MAAA1D,EACA2D,SAAA1B,GACGI,GAAAF,EAAAyB,IAAA,SAAAC,GACH,OAAW5E,EAAAzB,EAAK0B,cAAAoD,EAAA,CAChBG,UAAAlB,EAAAuC,SACAC,IAAAF,EACAH,MAAAG,GACKA,MACE5E,EAAAzB,EAAK0B,cAAe6D,EAAA,EAAU,CACrCrC,MAAA,UACAsC,QAAA,UACAP,UAAAlB,EAAA0B,SACGnB,EAAA,CACHf,KAAA,IAAAnB,EAAA,EAAAG,EAAAC,EAAA,EACAgB,GAAAJ,KAAAoD,IAAApE,GAAAG,EAAA,GAAAC,GACAJ,QACAG,UACOd,EAAAzB,EAAK0B,cAAAoC,EAAA,CACZmB,UAAAlB,EAAA0C,QACAtE,sBACAC,QACAC,sBACAC,eACAC,OACAC,oBAoGenE,EAAA,EAAAwB,OAAA6G,EAAA,EAAA7G,CA/PR,SAAA8C,GACP,OAEAuC,KAAA,CACAhC,MAAAP,EAAAgE,QAAAC,KAAAC,UACAC,SAAAnE,EAAAoE,WAAAC,QAAA,IAEAC,eAAA,CACAC,QAAA,IAKA9B,QAAA,CACA+B,OAAA,GACAC,UAAA,GACAC,aAAA,GAIAhC,OAAA,CACAiC,KAAA,YAIA7B,QAAA,CACA8B,WAAA,GAIAtB,WAAA,CAEAuB,YAAA,GACAC,WAAA,GAIA9B,OAAA,CACA+B,YAAA,EACAL,aAAA,GACAM,UAAA,QACAC,cAAA,SAKA/B,WAAA,CACAgC,IAAA,GAIA/B,MAAA,CACA5C,MAAA,UACA4D,SAAA,UACAS,WAAA,GAIAjB,SAAA,GAGAG,QAAA,CACAc,WAAA,EACAE,WAAA,MAgMyB,CACzBK,KAAA,sBADe,CAEZnE,0ICzQGoE,EAAYC,YAAW,iBAAO,CAClC9C,KAAM,MAmDO+C,EAhDA,SAAAhG,GAAS,IACdgD,EAA2ChD,EAA3CgD,UAAUiD,EAAiCjG,EAAjCiG,mBAAwBC,EADpBtI,OAAA6C,EAAA,EAAA7C,CAC6BoC,EAD7B,oCAGhB8B,EAAUgE,IAEhB,OACEtG,EAAAzB,EAAA0B,cAAA,MAAA7B,OAAAuI,OAAA,GACMD,EADN,CAEElD,UAAWoD,YAAKtE,EAAQmB,KAAMD,KAE9BxD,EAAAzB,EAAA0B,cAAC4G,EAAA,EAAD,CACEC,WAAW,WACXC,WAAS,EACTC,QAAQ,gBACRC,QAAS,GAETjH,EAAAzB,EAAA0B,cAAC4G,EAAA,EAAD,CAAMK,MAAI,GACRlH,EAAAzB,EAAA0B,cAAC6D,EAAA,EAAD,CACErB,UAAU,KACV0E,cAAY,EACZpD,QAAQ,YACT,cAGD/D,EAAAzB,EAAA0B,cAAC6D,EAAA,EAAD,CACErB,UAAU,KACVsB,QAAQ,MACT,oBAHD,OAIoB0C,QAJpB,IAIoBA,OAJpB,EAIoBA,EAAoB5C,OAAO,MAGjD7D,EAAAzB,EAAA0B,cAAC4G,EAAA,EAAD,CAAMK,MAAI,GACRlH,EAAAzB,EAAA0B,cAACmH,EAAA,EAAD,CACE3F,MAAM,UACNsC,QAAQ,aACT,iSCpCLsD,EAAwB,eAAAlJ,EAAAC,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAhJ,EAAAC,KAAG,SAAAC,EAAOC,EAAKC,GAAZ,IAAAC,EAAAjB,EAAA,OAAA4J,EAAAhJ,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvBJ,EAAS,CACXK,QAAS,CAAEC,MAAOC,aAAaC,QAAQ,WAFdN,EAAAE,KAAA,EAIXK,IAAQC,IAAI,eAAgBV,GAJjB,cAIvBjB,EAJuBmB,EAAAS,KAAAT,EAAAU,OAAA,SAKtB7B,EAAIM,MALkB,wBAAAa,EAAAW,SAAAhB,MAAH,gBAAAiB,EAAAC,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GCAxB0H,EAAoB,eAAArJ,EAAAC,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAhJ,EAAAC,KAAG,SAAAC,EAAOgJ,EAAI9I,GAAX,IAAAC,EAAAjB,EAAA,OAAA4J,EAAAhJ,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnBJ,EAAS,CACXK,QAAS,CAAEC,MAAOC,aAAaC,QAAQ,WAFlBN,EAAAE,KAAA,EAIPK,IAAQqI,OAAR,gBAAA1F,OAA+ByF,GAAM7I,GAJ9B,cAInBjB,EAJmBmB,EAAAS,KAAAT,EAAAU,OAAA,SAKlB7B,EAAIM,MALc,wBAAAa,EAAAW,SAAAhB,MAAH,gBAAAiB,EAAAC,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,YC0BpBwG,EAAYC,YAAW,SAAArF,GAAK,MAAK,CACrCuC,KAAM,GACNkE,QAAS,CACPlC,QAAS,GAEXmC,MAAO,CACLC,SAAU,KAEZC,SAAU,CACRC,QAAS,OACTjB,WAAY,UAEdkB,OAAQ,CACNtC,OAAQ,GACRuC,MAAO,GACPlC,YAAa7E,EAAM+F,QAAQ,IAE7BjC,QAAS,CACPS,QAASvE,EAAM+F,QAAQ,GACvBiB,eAAgB,eAIdC,EAAU,SAAA3H,GAICjD,cAAf,IAGQiG,EAAqDhD,EAArDgD,UAAW4E,EAA0C5H,EAA1C4H,UAAU3B,EAAgCjG,EAAhCiG,mBAAuBC,EAP7BtI,OAAA6C,EAAA,EAAA7C,CAOsCoC,EAPtC,gDA2BjB8B,GAlBWhF,cAkBDgJ,KA3BO+B,EA6B2BC,mBAAS,IA7BpCC,EAAAnK,OAAAoK,EAAA,EAAApK,CAAAiK,EAAA,GA6BhBI,EA7BgBF,EAAA,GAAAG,GAAAH,EAAA,GA8BCD,mBAAS,IA9BVK,EAAAvK,OAAAoK,EAAA,EAAApK,CAAAsK,EAAA,GA8BhB5H,EA9BgB6H,EAAA,GA8BVC,EA9BUD,EAAA,GAAAE,EA+BeP,mBAAS,IA/BxBQ,EAAA1K,OAAAoK,EAAA,EAAApK,CAAAyK,EAAA,GA+BhB9H,EA/BgB+H,EAAA,GA+BHC,EA/BGD,EAAA,GAAAE,ECvCa,SAACvB,GACnC,IAAMpK,EAAWC,cAEX2L,GADS1L,cACK2L,4BACpB,OAAOC,sBAAY,SAAC1B,GAAD,OAAQD,EAAqBC,IAAM,CACpD/J,UAAW,SAAAC,GAGRN,EAAS+L,YAA0BzL,IAKpCsL,EAAYI,kBAAkB,sBAMhCxL,QAAS,SAAAC,GAIPC,YAAOD,EAAIE,SAASC,KAAKC,QAAQ,YDwFkCoL,GAAjDC,GAxEDP,EAwEhBQ,UAxEgBR,EAwENS,QAxEMT,EAwEwBU,QAxExBV,EAwEgCW,MAxEhCX,EAwEsCY,QAC9BC,YAAY,SAAAC,GAAK,OAAIA,EAAMC,wBAAnDC,qBAMP,OACEhK,EAAAzB,EAAA0B,cAAA,MAAA7B,OAAAuI,OAAA,GACMD,EADN,CAEElD,UAAWoD,YAAKtE,EAAQmB,KAAMD,KAE9BxD,EAAAzB,EAAA0B,cAAC6D,EAAA,EAAD,CACErC,MAAM,gBACN0F,cAAY,EACZpD,QAAQ,SAEPqE,EAAUvE,OAAO,wBAAsB/C,EAAO,EAAE,MAAI,IACpDa,KAAKC,KAAKwG,EAAUvE,OAAS9C,IAEhCf,EAAAzB,EAAA0B,cAACgK,EAAA,EAAD,KACEjK,EAAAzB,EAAA0B,cAACiK,EAAA,EAAD,CACEC,OAAQnK,EAAAzB,EAAA0B,cAACmK,EAAA,EAAD,MACRC,MAAM,kBAERrK,EAAAzB,EAAA0B,cAACqK,EAAA,EAAD,MACAtK,EAAAzB,EAAA0B,cAACsK,EAAA,EAAD,CAAa/G,UAAWlB,EAAQqF,SAC9B3H,EAAAzB,EAAA0B,cAACuK,EAAAjM,EAAD,KACEyB,EAAAzB,EAAA0B,cAAA,OAAKuD,UAAWlB,EAAQsF,OACtB5H,EAAAzB,EAAA0B,cAACwK,EAAA,EAAD,KACEzK,EAAAzB,EAAA0B,cAACyK,EAAA,EAAD,KACE1K,EAAAzB,EAAA0B,cAAC0K,EAAA,EAAD,KAYE3K,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,UACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,YACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,QACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,oBACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,gBACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,kBACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,OACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,cACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,YACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,mBACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,WACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,gBACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,kBACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,kBACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,cACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,aACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,YACX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAW,+BAEX3C,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,CAAWiI,MAAM,SAAQ,aAM/B5K,EAAAzB,EAAA0B,cAAC4K,EAAA,EAAD,YACKpE,QADL,IACKA,OADL,EACKA,EAAoB9B,IAAI,SAACmG,EAASC,GAAV,OACvB/K,EAAAzB,EAAA0B,cAAC0K,EAAA,EAAD,CACEK,OAAK,GAIRhL,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYoI,EAAQ,GAGjB/K,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASG,UACrBjL,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASI,MACrBlL,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASK,kBACrBnL,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASM,cACrBpL,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASO,gBACrBrL,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASQ,KACrBtL,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASS,YACrBvL,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASU,UACrBxL,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASW,iBACrBzL,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASY,SACrB1L,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASa,cACrB3L,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASc,gBACrB5L,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASe,gBACrB7L,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASgB,YACrB9L,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASiB,WACrB/L,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASkB,UAErBhM,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,KAAYmI,EAASmB,6BAErBjM,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,CAAWiI,MAAM,SAASpH,UAAU,UAElCxD,EAAAzB,EAAA0B,cAACmH,EAAA,EAAD,CACE3F,MAAM,UAENyK,KAAK,QACLnI,QAAQ,YACT,QAKA/D,EAAAzB,EAAA0B,cAACmH,EAAA,EAAD,CACA5D,UAAU,OACT/B,MAAM,UAENyK,KAAK,QACL5K,QAAS,kBAhHbmG,EAgH6BqD,EAASrD,QA9GtD8B,EAAuB9B,GAFR,IAACA,GAiHI1D,QAAQ,YAER/D,EAAAzB,EAAA0B,cAAA,KAAGuD,UAAU,6CAY/BxD,EAAAzB,EAAA0B,cAACkM,EAAA,EAAD,CAAa3I,UAAWlB,EAAQ0C,SAC9BhF,EAAAzB,EAAA0B,cAACmM,EAAA,EAAD,CACE3J,UAAU,MACV9B,MAAOyH,EAAUvE,OACjBhD,aA5Ie,SAACU,EAAOT,GAC/B8H,EAAQ9H,IA4IAkC,oBAzIsB,SAAAzB,GAC9BwH,EAAexH,EAAM8K,OAAO5H,QAyIpB3D,KAAMA,EACNC,YAAaA,EACbmC,mBAAoB,CAAC,EAAG,GAAI,QAIlClD,EAAAzB,EAAA0B,cAACmK,EAAA,EAAD,CAAckC,SAAU7D,MAU9BN,EAAQoE,aAAe,CACrBnE,UAAW,IAGED,QEpRT7B,EAAYC,YAAW,SAAArF,GAAK,MAAK,CACrCuC,KAAM,CACJgC,QAASvE,EAAM+F,QAAQ,IAEzBuF,QAAS,CACPC,UAAWvL,EAAM+F,QAAQ,OAuDdyF,EAnDgB,WAC7B,IAAMpK,EAAUgE,IADmB+B,EAGDC,mBAAS,CAAC,GAAG,KAHZC,EAAAnK,OAAAoK,EAAA,EAAApK,CAAAiK,EAAA,GAG5BD,EAH4BG,EAAA,GA2B5B9B,GA3B4B8B,EAAA,GCJE,SAAAnL,GACnC,IAAMC,EAAWC,cAGjB,OAFeC,cAERC,mBAAS,oBAAoB6J,EAA0B,CAC5D3J,UAAW,SAAAC,GAGRN,EAASsP,YAA2BhP,KAUvCE,QAAS,SAAAC,GAIPC,YAAOD,EAAIE,SAASC,KAAKC,QAAQ,YDO1B0O,GAAN3O,KAEqB4L,YAAY,SAAAC,GAAK,OAAIA,EAAM+C,yBAAhDpG,oBAGP,OAFAqG,QAAQC,IAAItG,GAGVzG,EAAAzB,EAAA0B,cAACmK,EAAA,EAAD,CACE5G,UAAWlB,EAAQmB,KACnB4G,MAAM,4BAENrK,EAAAzB,EAAA0B,cAAC+M,EAAD,CAAQvG,mBAAqBA,IAC7BzG,EAAAzB,EAAA0B,cAACmK,EAAA,EAAD,CACE6C,SAde,aAefC,SAde,eAgBhB9E,GACCpI,EAAAzB,EAAA0B,cAACkN,EAAD,CACE3J,UAAWlB,EAAQkK,QACnBpE,UAAWA,EACX3B,mBAAqBA,ME9D/B/J,EAAAC,EAAAC,EAAA,4BAAAwQ,sCCAA,IAAAC,EAAA3Q,EAAA,KAGM4Q,EAHN5Q,EAAA6Q,EAAAF,GAGgBG,EAAMC,OAAO,CAACC,QAAU,0BAEzBJ,wCCJf,IAAAK,EAAAjR,EAAA,KAAAA,EAAA,KAaeqB,IATA,SAAC6P,EAAKC,GACJ,SAATA,EACAC,IAAMC,KAAKH,GACE,YAARC,EACLC,IAAME,QAAQJ,GACD,UAARC,GACLC,IAAMnE,MAAMiE,8GCPPK,EAAmB,eAAAlO,EAAA3B,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA0P,EAAMjQ,GAAN,OAAAK,EAAAC,EAAAM,KAAA,SAAAsP,GAAA,cAAAA,EAAApP,KAAAoP,EAAAnP,MAAA,cAAAmP,EAAAnP,KAAA,EAEnBK,IAAQ+O,KACnB,eAAenQ,GAHe,cAAAkQ,EAAA3O,OAAA,SAAA2O,EAAA5O,MAAA,wBAAA4O,EAAA1O,SAAAyO,MAAJ,gBAAAG,GAAA,OAAAtO,EAAAH,MAAAC,KAAAC,YAAA,6GCK1BwO,EAAiB,eAAAnQ,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAAKC,GAAZ,IAAAC,EAAAjB,EAAA,OAAAW,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChBJ,EAAS,CACXK,QAAS,CAAEC,MAAOC,aAAaC,QAAQ,WAFrBN,EAAAE,KAAA,EAIJK,IAAQC,IAAI,mBAAoBV,GAJ5B,cAIhBjB,EAJgBmB,EAAAS,KAAAT,EAAAU,OAAA,SAKf7B,EAAIM,MALW,wBAAAa,EAAAW,SAAAhB,MAAH,gBAAAiB,EAAAC,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA","file":"static/js/40.b174fe3e.chunk.js","sourcesContent":["import notify from 'Hook/useNotifaction';\r\nimport { UseGetProfileData } from \"Api_Requests/UseGetProfileData\";\r\nimport axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\nimport { UseGetAllUserData } from 'Api_Requests/UseGetAllUser';\r\nimport { GetAllUserSliceInfo } from 'Redux_Slices/AllUser/Get-All-user-Slice';\r\nexport const useGetAllUserApi = formData => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useQuery(\"getprofile\",UseGetAllUserData, {\r\n      onSuccess: res => {\r\n        \r\n        \r\n         dispatch(GetAllUserSliceInfo(res));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err.response.data.message,\"error\")      \r\n\r\n      }\r\n    });\r\n  };\r\n","import baseUrl from '../Api/baseURL'\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseGetAllUserData = async (url, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.get(\"users\", config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseGetAllUserData };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className,AllServiceUserData , ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Currnt Care Plan({AllServiceUserData?.length})\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Add customer\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import baseUrl from '../../Api/baseURL'\r\n\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseGetAllServiceUserData = async (url, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.get(\"service-user\", config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseGetAllServiceUserData };","import baseUrl from '../../Api/baseURL'\r\n\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseDeletServiceUData = async (id, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.delete(`service-user/${id}`, config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseDeletServiceUData };","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  Button,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport getInitials from 'utils/getInitials';\r\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetProfileViewSliceInfo } from 'Redux_Slices/Profile/View-profile-Slice';\r\nimport useRouter from 'utils/useRouter';\r\nimport { useEffect } from 'react';\r\nimport { useDeletServiceUserApi } from 'Hook/Service-user/Delet-Service-User-Hook';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  },\r\n  nameCell: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    height: 42,\r\n    width: 42,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n\r\n  \r\n\r\n  const router = useRouter();\r\n\r\n\r\n  const { className, customers,AllServiceUserData, ...rest } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const handelview =(data)=>{\r\n    \r\n\r\n  \r\n  //   const res = AllUserData.filter((item,index) => index === data)\r\n    \r\n\r\n  //   console.log(res);\r\n  //   dispatch(GetProfileViewSliceInfo(res));\r\n    \r\n  //     router.history.push('/ViewProfile');\r\n \r\n  //   // window.location.replace('/ViewProfile');\r\n\r\n  // }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedCustomers = event.target.checked\r\n      ? customers.map(customer => customer.id)\r\n      : [];\r\n\r\n    setSelectedCustomers(selectedCustomers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomers.indexOf(id);\r\n    let newSelectedCustomers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomers.length - 1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, selectedIndex),\r\n        selectedCustomers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomers(newSelectedCustomers);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  const {isLoading,mutate:SubmitDeletServiceUser,isError,error,refetch} =  useDeletServiceUserApi()\r\n  const {DeletServiceUserData} = useSelector(state => state.DeletServiceUserSlice)\r\n   const handeldelet=(id)=>{\r\n  \r\n      SubmitDeletServiceUser(id)\r\n   }\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {customers.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(customers.length / rowsPerPage)}\r\n      </Typography>\r\n      <Card>\r\n        <CardHeader\r\n          action={<GenericMoreButton />}\r\n          title=\"All customers\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          <PerfectScrollbar>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {/* <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedCustomers.length === customers.length}\r\n                        color=\"primary\"\r\n                        indeterminate={\r\n                          selectedCustomers.length > 0 &&\r\n                          selectedCustomers.length < customers.length\r\n                        }\r\n                        onChange={handleSelectAll}\r\n                      />\r\n                    </TableCell> */}\r\n                    <TableCell>Number</TableCell>\r\n                    <TableCell>initials</TableCell>\r\n                    <TableCell>lcds</TableCell>\r\n                    <TableCell>age_ate_refferal</TableCell>\r\n                    <TableCell>home_address</TableCell>\r\n                    <TableCell>school_address</TableCell>\r\n                    <TableCell>Sex</TableCell>\r\n                    <TableCell>start_date</TableCell>\r\n                    <TableCell>end_date</TableCell>\r\n                    <TableCell>qurdian_contact</TableCell>\r\n                    <TableCell>qurdian</TableCell>\r\n                    <TableCell>relationship</TableCell>\r\n                    <TableCell>support_worker</TableCell>\r\n                    <TableCell>assesment_date</TableCell>\r\n                    <TableCell>disability</TableCell>\r\n                    <TableCell>ethnicity</TableCell>\r\n                    <TableCell>religion</TableCell>\r\n                    <TableCell>compliment_of_the_household</TableCell>\r\n\r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n              \r\n             \r\n              <TableBody>\r\n                  {AllServiceUserData?.map((customer,index) => (\r\n                    <TableRow\r\n                      hover\r\n                      // key={customer.id}\r\n                      // selected={selectedCustomers.indexOf(customer.id) !== -1}\r\n                    >\r\n                   <TableCell>{index + 1}</TableCell>\r\n\r\n                     \r\n                      <TableCell>{customer.initials}</TableCell>\r\n                      <TableCell>{customer.lcds}</TableCell>\r\n                      <TableCell>{customer.age_ate_refferal}</TableCell>\r\n                      <TableCell>{customer.home_address}</TableCell>\r\n                      <TableCell>{customer.school_address}</TableCell>\r\n                      <TableCell>{customer.sex}</TableCell>\r\n                      <TableCell>{customer.start_date}</TableCell>\r\n                      <TableCell>{customer.end_date}</TableCell>\r\n                      <TableCell>{customer.qurdian_contact}</TableCell>\r\n                      <TableCell>{customer.qurdian}</TableCell>\r\n                      <TableCell>{customer.relationship}</TableCell>\r\n                      <TableCell>{customer.support_worker}</TableCell>\r\n                      <TableCell>{customer.assesment_date}</TableCell>\r\n                      <TableCell>{customer.disability}</TableCell>\r\n                      <TableCell>{customer.ethnicity}</TableCell>\r\n                      <TableCell>{customer.religion}</TableCell>\r\n\r\n                      <TableCell>{customer.compliment_of_the_household}</TableCell>\r\n                      \r\n                      <TableCell align=\"right \" className='d-flex'>\r\n\r\n                        <Button\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n\r\n\r\n                         <Button\r\n                         className='ms-1'\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          onClick={()=>handeldelet(customer.id)}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i className=\"fa-sharp fa-solid fa-trash p-1\"></i>\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n             \r\n                \r\n              </Table>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={customers.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      <TableEditBar selected={selectedCustomers} />\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  customers: []\r\n};\r\n\r\nexport default Results;\r\n","import notify from 'Hook/useNotifaction';\r\nimport { UseGetProfileData } from \"Api_Requests/UseGetProfileData\";\r\nimport axios from \"axios\"\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\nimport { UseGetAllUserData } from 'Api_Requests/UseGetAllUser';\r\nimport { GetAllUserSliceInfo } from 'Redux_Slices/AllUser/Get-All-user-Slice';\r\nimport { GetAllServiceUserSliceInfo } from 'Redux_Slices/Service-User/Get-All-service-user-Slice';\r\nimport { UseGetAllServiceUserData } from 'Api_Requests/Service-user/Get-All-Service-UserData';\r\nimport { UseDeletServiceUData } from 'Api_Requests/Service-user/Delet-One-Service-User';\r\nimport { DeletServiceUserSliceInfo } from 'Redux_Slices/Service-User/Delet-Service-user-Hook';\r\n\r\n\r\n\r\nexport const useDeletServiceUserApi = (id) => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const QueryClient = useQueryClient();\r\n    return useMutation((id)=> (UseDeletServiceUData(id)), {\r\n      onSuccess: res => {\r\n        \r\n        \r\n         dispatch(DeletServiceUserSliceInfo(res));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n        QueryClient.invalidateQueries('GetAllServiceUser');\r\n\r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err.response.data.message,\"error\")      \r\n\r\n      }\r\n    });\r\n  };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page, SearchBar } from 'components';\r\nimport { Header, Results } from './components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useGetAllServiceUserApi } from 'Hook/Service-user/GetALLServiceUserData-Hook';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerManagementList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [customers, setCustomers] = useState([{},{}]);\r\n\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n\r\n  //   const fetchCustomers = () => {\r\n  //     axios.get('/api/management/customers').then(response => {\r\n  //       if (mounted) {\r\n  //         setCustomers(response.data.customers);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   fetchCustomers();\r\n\r\n  //   return () => {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  const handleFilter = () => {};\r\n  const handleSearch = () => {};\r\n  const {data}=useGetAllServiceUserApi()\r\n\r\n  const {AllServiceUserData} =useSelector(state => state.GetAllServiceUserSlice )\r\n  console.log(AllServiceUserData);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Management List\"\r\n    >\r\n      <Header AllServiceUserData ={AllServiceUserData} />\r\n      <SearchBar\r\n        onFilter={handleFilter}\r\n        onSearch={handleSearch}\r\n      />\r\n      {customers && (\r\n        <Results\r\n          className={classes.results}\r\n          customers={customers}\r\n          AllServiceUserData ={AllServiceUserData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerManagementList;\r\n","import notify from 'Hook/useNotifaction';\r\nimport { UseGetProfileData } from \"Api_Requests/UseGetProfileData\";\r\nimport axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\nimport { UseGetAllUserData } from 'Api_Requests/UseGetAllUser';\r\nimport { GetAllUserSliceInfo } from 'Redux_Slices/AllUser/Get-All-user-Slice';\r\nimport { GetAllServiceUserSliceInfo } from 'Redux_Slices/Service-User/Get-All-service-user-Slice';\r\nimport { UseGetAllServiceUserData } from 'Api_Requests/Service-user/Get-All-Service-UserData';\r\nexport const useGetAllServiceUserApi = formData => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useQuery(\"GetAllServiceUser\",UseGetAllServiceUserData, {\r\n      onSuccess: res => {\r\n        \r\n        \r\n         dispatch(GetAllServiceUserSliceInfo(res));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err.response.data.message,\"error\")      \r\n\r\n      }\r\n    });\r\n  };\r\n","export { default } from './list';\r\n","import axios from \"axios\";\r\n\r\n\r\nconst baseurl = axios.create({baseURL : \"http://localhost:5000\"})\r\n\r\nexport default baseurl","\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n//to make notifactio to any componentet\r\nconst notify = (msg, type) => {\r\n    if (type === \"warn\")\r\n        toast.warn(msg)\r\n    else if (type ===\"success\")\r\n        toast.success(msg)\r\n    else if (type ===\"error\")\r\n        toast.error(msg)\r\n};\r\n\r\nexport default notify;","\r\nimport baseUrl from '../Api/baseURL'\r\n\r\n\r\nexport const useInsertDataSignUp  = async data => {\r\n    \r\n    return await baseUrl.post(\r\n      'users/signup',data );\r\n  };","import baseUrl from '../Api/baseURL'\r\n\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseGetProfileData = async (url, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.get(\"users/my-profile\", config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseGetProfileData };"],"sourceRoot":""}