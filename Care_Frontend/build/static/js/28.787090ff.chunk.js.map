{"version":3,"sources":["views/Calendar/components/AddEditEvent/AddEditEvent.js","views/Calendar/components/Toolbar/Toolbar.js","views/Calendar/Calendar.js","views/Calendar/index.js"],"names":["useStyles","makeStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","field","marginTop","spacing","cancelButton","marginLeft","confirmButton","color","palette","white","backgroundColor","colors","green","&:hover","AddEditEvent","forwardRef","props","ref","event","onDelete","onCancel","onAdd","onEdit","className","rest","Object","objectWithoutProperties","classes","defaultEvent","title","desc","allDay","start","moment","toDate","end","_useState","useState","_useState2","slicedToArray","values","setValues","mode","handleFieldChange","e","persist","objectSpread","defineProperty","target","name","type","checked","value","react_default","a","createElement","Card","assign","clsx","CardContent","Typography","align","gutterBottom","variant","TextField","fullWidth","label","onChange","FormControlLabel","control","Switch","defaultValue","format","disabled","Divider","CardActions","IconButton","edge","onClick","DeleteOutlined_default","Button","id","uuid","Toolbar","date","view","onDatePrev","onDateNext","onEventAdd","onViewChange","onDateToday","viewOptions","icon","ViewConfigIcon","ViewWeekIcon","ViewDayIcon","ViewAgendaIcon","Grid","alignItems","container","justify","item","component","ButtonGroup","Hidden","smDown","map","viewOption","Icon","Tooltip","key","height","padding","& .fc-unthemed td","borderColor","divider","& .fc-widget-header","grey","& .fc-axis","typography","body2","& .fc-list-item-time","& .fc-list-item-title","body1","& .fc-list-heading-main","h6","& .fc-list-heading-alt","& .fc th","& .fc-day-header","subtitle2","fontWeight","text","secondary","& .fc-day-top","& .fc-highlight","blueGrey","& .fc-event","primary","main","contrastText","borderWidth","opacity","& .fc-time","& .fc-title","& .fc-list-empty","subtitle1","card","Calendar","calendarRef","useRef","useTheme","mobileDevice","useMediaQuery","breakpoints","down","setView","_useState3","_useState4","setDate","_useState5","_useState6","events","setEvents","_useState7","open","_useState8","eventModal","setEventModal","useEffect","mounted","axios","get","then","response","data","calendarApi","current","getApi","newView","changeView","handleModalClose","components","components_Toolbar_Toolbar","next","getDate","prev","today","main_esm","allDayMaintainDuration","defaultDate","defaultView","droppable","editable","eventClick","info","selected","find","eventResizableFromStart","header","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","timelinePlugin","rerenderDelay","selectable","weekends","Modal","onClose","AddEditEvent_AddEditEvent","concat","toConsumableArray","filter","__webpack_require__","d","__webpack_exports__","views_Calendar_Calendar"],"mappings":"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","file":"static/js/28.787090ff.chunk.js","sourcesContent":["/* eslint-disable react/display-name */\r\nimport React, { useState, forwardRef } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport uuid from 'uuid/v1';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  Divider,\r\n  FormControlLabel,\r\n  Switch,\r\n  colors\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    outline: 'none',\r\n    boxShadow: theme.shadows[20],\r\n    width: 700,\r\n    maxHeight: '100%',\r\n    overflowY: 'auto',\r\n    maxWidth: '100%'\r\n  },\r\n  field: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  cancelButton: {\r\n    marginLeft: 'auto'\r\n  },\r\n  confirmButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst AddEditEvent = forwardRef((props, ref) => {\r\n  const {\r\n    event,\r\n    onDelete,\r\n    onCancel,\r\n    onAdd,\r\n    onEdit,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const defaultEvent = {\r\n    title: 'Event title',\r\n    desc: 'Event description',\r\n    allDay: false,\r\n    start: moment().toDate(),\r\n    end: moment().toDate()\r\n  };\r\n\r\n  const [values, setValues] = useState(event || defaultEvent);\r\n\r\n  const mode = event ? 'edit' : 'add';\r\n\r\n  const handleFieldChange = e => {\r\n    e.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [e.target.name]:\r\n        e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n    }));\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    onDelete && onDelete(event);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    if (!values.title || !values.desc) {\r\n      return;\r\n    }\r\n\r\n    onAdd({ ...values, id: uuid() });\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    if (!values.title || !values.desc) {\r\n      return;\r\n    }\r\n\r\n    onEdit(values);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      ref={ref}\r\n    >\r\n      <form>\r\n        <CardContent>\r\n          <Typography\r\n            align=\"center\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {mode === 'add' ? 'Add Event' : 'Edit Event'}\r\n          </Typography>\r\n          <TextField\r\n            className={classes.field}\r\n            fullWidth\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            onChange={handleFieldChange}\r\n            value={values.title}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            className={classes.field}\r\n            fullWidth\r\n            label=\"Description\"\r\n            name=\"desc\"\r\n            onChange={handleFieldChange}\r\n            value={values.desc}\r\n            variant=\"outlined\"\r\n          />\r\n          <FormControlLabel\r\n            className={classes.field}\r\n            control={\r\n              <Switch\r\n                checked={values.allDay}\r\n                name=\"allDay\"\r\n                onChange={handleFieldChange}\r\n              />\r\n            }\r\n            label=\"All day\"\r\n          />\r\n          <TextField\r\n            className={classes.field}\r\n            defaultValue={moment(values.start).format('YYYY-MM-DDThh:mm:ss')}\r\n            fullWidth\r\n            label=\"Start date\"\r\n            name=\"start\"\r\n            onChange={handleFieldChange}\r\n            type=\"datetime-local\"\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            className={classes.field}\r\n            defaultValue={moment(values.end).format('YYYY-MM-DDThh:mm:ss')}\r\n            disabled={values.allDay}\r\n            fullWidth\r\n            label=\"End date\"\r\n            name=\"end\"\r\n            onChange={handleFieldChange}\r\n            type=\"datetime-local\"\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <IconButton\r\n            edge=\"start\"\r\n            onClick={handleDelete}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <Button\r\n            className={classes.cancelButton}\r\n            onClick={onCancel}\r\n            variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          {mode === 'add' ? (\r\n            <Button\r\n              className={classes.confirmButton}\r\n              onClick={handleAdd}\r\n              variant=\"contained\"\r\n            >\r\n              Add\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              className={classes.confirmButton}\r\n              onClick={handleEdit}\r\n              variant=\"contained\"\r\n            >\r\n              Save\r\n            </Button>\r\n          )}\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n});\r\n\r\nAddEditEvent.propTypes = {\r\n  className: PropTypes.string,\r\n  event: PropTypes.object,\r\n  onAdd: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n  onDelete: PropTypes.func,\r\n  onEdit: PropTypes.func\r\n};\r\n\r\nexport default AddEditEvent;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Hidden,\r\n  Typography,\r\n  Tooltip,\r\n  ButtonGroup,\r\n  IconButton,\r\n  Button\r\n} from '@material-ui/core';\r\nimport ViewConfigIcon from '@material-ui/icons/ViewComfyOutlined';\r\nimport ViewWeekIcon from '@material-ui/icons/ViewWeekOutlined';\r\nimport ViewDayIcon from '@material-ui/icons/ViewDayOutlined';\r\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgendaOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Toolbar = props => {\r\n  const {\r\n    date,\r\n    view,\r\n    onDatePrev,\r\n    onDateNext,\r\n    onEventAdd,\r\n    onViewChange,\r\n    onDateToday,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const viewOptions = [\r\n    {\r\n      label: 'Month',\r\n      value: 'dayGridMonth',\r\n      icon: ViewConfigIcon\r\n    },\r\n    {\r\n      label: 'Week',\r\n      value: 'timeGridWeek',\r\n      icon: ViewWeekIcon\r\n    },\r\n    {\r\n      label: 'Day',\r\n      value: 'timeGridDay',\r\n      icon: ViewDayIcon\r\n    },\r\n    {\r\n      label: 'Agenda',\r\n      value: 'listWeek',\r\n      icon: ViewAgendaIcon\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Calendar\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Here's what you planned\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={onEventAdd}\r\n            variant=\"contained\"\r\n          >\r\n            Add event\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        alignItems=\"center\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <ButtonGroup>\r\n            <Button onClick={onDatePrev}>Prev</Button>\r\n            <Button onClick={onDateToday}>Today</Button>\r\n            <Button onClick={onDateNext}>Next</Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        <Hidden smDown>\r\n          <Grid item>\r\n            <Typography variant=\"h3\">\r\n              {moment(date).format('MMMM YYYY')}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            {viewOptions.map(viewOption => {\r\n              const Icon = viewOption.icon;\r\n\r\n              return (\r\n                <Tooltip\r\n                  key={viewOption.value}\r\n                  title={viewOption.label}\r\n                >\r\n                  <IconButton\r\n                    color={viewOption.value === view ? 'primary' : 'default'}\r\n                    onClick={() => onViewChange(viewOption.value)}\r\n                  >\r\n                    <Icon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Hidden>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  date: PropTypes.any.isRequired,\r\n  onDateNext: PropTypes.func,\r\n  onDatePrev: PropTypes.func,\r\n  onDateToday: PropTypes.func,\r\n  onEventAdd: PropTypes.func,\r\n  onViewChange: PropTypes.func,\r\n  view: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport timelinePlugin from '@fullcalendar/timeline';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Modal,\r\n  Card,\r\n  CardContent,\r\n  colors,\r\n  useTheme,\r\n  useMediaQuery\r\n} from '@material-ui/core';\r\nimport '@fullcalendar/core/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\nimport '@fullcalendar/timegrid/main.css';\r\nimport '@fullcalendar/list/main.css';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page } from 'components';\r\nimport { AddEditEvent, Toolbar } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    padding: theme.spacing(3),\r\n    '& .fc-unthemed td': {\r\n      borderColor: theme.palette.divider\r\n    },\r\n    '& .fc-widget-header': {\r\n      backgroundColor: colors.grey[50]\r\n    },\r\n    '& .fc-axis': {\r\n      ...theme.typography.body2\r\n    },\r\n    '& .fc-list-item-time': {\r\n      ...theme.typography.body2\r\n    },\r\n    '& .fc-list-item-title': {\r\n      ...theme.typography.body1\r\n    },\r\n    '& .fc-list-heading-main': {\r\n      ...theme.typography.h6\r\n    },\r\n    '& .fc-list-heading-alt': {\r\n      ...theme.typography.h6\r\n    },\r\n    '& .fc th': {\r\n      borderColor: theme.palette.divider\r\n    },\r\n    '& .fc-day-header': {\r\n      ...theme.typography.subtitle2,\r\n      fontWeight: 500,\r\n      color: theme.palette.text.secondary,\r\n      padding: theme.spacing(1),\r\n      backgroundColor: colors.grey[50]\r\n    },\r\n    '& .fc-day-top': {\r\n      ...theme.typography.body2\r\n    },\r\n    '& .fc-highlight': {\r\n      backgroundColor: colors.blueGrey[50]\r\n    },\r\n    '& .fc-event': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.primary.contrastText,\r\n      borderWidth: 2,\r\n      opacity: 0.9,\r\n      '& .fc-time': {\r\n        ...theme.typography.h6,\r\n        color: 'inherit'\r\n      },\r\n      '& .fc-title': {\r\n        ...theme.typography.body1,\r\n        color: 'inherit'\r\n      }\r\n    },\r\n    '& .fc-list-empty': {\r\n      ...theme.typography.subtitle1\r\n    }\r\n  },\r\n  card: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Calendar = () => {\r\n  const classes = useStyles();\r\n  const calendarRef = useRef(null);\r\n  const theme = useTheme();\r\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [view, setView] = useState(mobileDevice ? 'listWeek' : 'dayGridMonth');\r\n  const [date, setDate] = useState(moment('2019-07-30 08:00:00').toDate());\r\n  const [events, setEvents] = useState([]);\r\n  const [eventModal, setEventModal] = useState({\r\n    open: false,\r\n    event: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchEvents = () => {\r\n      if (mounted) {\r\n        axios\r\n          .get('/api/calendar')\r\n          .then(response => setEvents(response.data.events));\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const calendarApi = calendarRef.current.getApi();\r\n    const newView = mobileDevice ? 'listWeek' : 'dayGridMonth';\r\n\r\n    calendarApi.changeView(newView);\r\n    setView(newView);\r\n  }, [mobileDevice]);\r\n\r\n  const handleEventClick = info => {\r\n    const selected = events.find(event => event.id === info.event.id);\r\n\r\n    setEventModal({\r\n      open: true,\r\n      event: selected\r\n    });\r\n  };\r\n\r\n  const handleEventNew = () => {\r\n    setEventModal({\r\n      open: true,\r\n      event: null\r\n    });\r\n  };\r\n\r\n  const handleEventDelete = event => {\r\n    setEvents(events => events.filter(e => e.id !== event.id));\r\n    setEventModal({\r\n      open: false,\r\n      event: null\r\n    });\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setEventModal({\r\n      open: false,\r\n      event: null\r\n    });\r\n  };\r\n\r\n  const handleEventAdd = event => {\r\n    setEvents(events => [...events, event]);\r\n    setEventModal({\r\n      open: false,\r\n      event: null\r\n    });\r\n  };\r\n\r\n  const handleEventEdit = event => {\r\n    setEvents(events => events.map(e => (e.id === event.id ? event : e)));\r\n    setEventModal({\r\n      open: false,\r\n      event: null\r\n    });\r\n  };\r\n\r\n  const handleDateToday = () => {\r\n    const calendarApi = calendarRef.current.getApi();\r\n\r\n    calendarApi.today();\r\n    setDate(calendarApi.getDate());\r\n  };\r\n\r\n  const handleViewChange = view => {\r\n    const calendarApi = calendarRef.current.getApi();\r\n\r\n    calendarApi.changeView(view);\r\n    setView(view);\r\n  };\r\n\r\n  const handleDatePrev = () => {\r\n    const calendarApi = calendarRef.current.getApi();\r\n\r\n    calendarApi.prev();\r\n    setDate(calendarApi.getDate());\r\n  };\r\n\r\n  const handleDateNext = () => {\r\n    const calendarApi = calendarRef.current.getApi();\r\n\r\n    calendarApi.next();\r\n    setDate(calendarApi.getDate());\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Calendar\"\r\n    >\r\n      <Toolbar\r\n        date={date}\r\n        onDateNext={handleDateNext}\r\n        onDatePrev={handleDatePrev}\r\n        onDateToday={handleDateToday}\r\n        onEventAdd={handleEventNew}\r\n        onViewChange={handleViewChange}\r\n        view={view}\r\n      />\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <FullCalendar\r\n            allDayMaintainDuration\r\n            defaultDate={date}\r\n            defaultView={view}\r\n            droppable\r\n            editable\r\n            eventClick={handleEventClick}\r\n            eventResizableFromStart\r\n            events={events}\r\n            header={false}\r\n            height={800}\r\n            plugins={[\r\n              dayGridPlugin,\r\n              timeGridPlugin,\r\n              interactionPlugin,\r\n              listPlugin,\r\n              timelinePlugin\r\n            ]}\r\n            ref={calendarRef}\r\n            rerenderDelay={10}\r\n            selectable\r\n            weekends\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        onClose={handleModalClose}\r\n        open={eventModal.open}\r\n      >\r\n        <AddEditEvent\r\n          event={eventModal.event}\r\n          onAdd={handleEventAdd}\r\n          onCancel={handleModalClose}\r\n          onDelete={handleEventDelete}\r\n          onEdit={handleEventEdit}\r\n        />\r\n      </Modal>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","export { default } from './Calendar';\r\n"],"sourceRoot":""}