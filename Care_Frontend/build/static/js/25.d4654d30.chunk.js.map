{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","views/OrderManagementList/components/Header/Header.js","views/OrderManagementList/components/Results/Results.js","views/OrderManagementList/OrderManagementList.js","views/OrderManagementList/index.js"],"names":["CheckBoxOutlineBlank","Object","createSvgIcon","react_default","a","createElement","d","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","other","objectWithoutProperties","SwitchBase","esm_extends","type","root","clsx_m","concat","helpers","checked","disabled","data-indeterminate","__webpack_exports__","withStyles","theme","palette","text","secondary","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary","name","useStyles","makeStyles","Header","className","rest","assign","clsx","Grid","alignItems","container","justify","spacing","item","Typography","component","gutterBottom","variant","Button","filterButton","marginRight","content","padding","inner","minWidth","actions","justifyContent","Results","orders","_useState","useState","_useState2","slicedToArray","selectedOrders","setSelectedOrders","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","paymentStatusColors","canceled","colors","grey","pending","orange","completed","green","rejected","red","length","Math","ceil","Card","CardHeader","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","TableCell","Checkbox","onChange","event","target","map","order","id","align","TableBody","slice","key","selected","indexOf","selectedIndex","newSelectedOrders","handleSelectOne","value","payment","moment","created_at","format","customer","method","currency","total","status","RouterLink","size","to","CardActions","TablePagination","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","defaultProps","results","marginTop","OrderManagementList","setOrders","useEffect","mounted","axios","get","then","response","data","components_Header_Header","components_Results_Results","__webpack_require__","views_OrderManagementList_OrderManagementList"],"mappings":"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","file":"static/js/25.d4654d30.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Orders\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Add order\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, GenericMoreButton, TableEditBar } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography>\r\n      <Card>\r\n        <CardHeader\r\n          action={<GenericMoreButton />}\r\n          title=\"Orders\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          <PerfectScrollbar>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedOrders.length === orders.length}\r\n                        color=\"primary\"\r\n                        indeterminate={\r\n                          selectedOrders.length > 0 &&\r\n                          selectedOrders.length < orders.length\r\n                        }\r\n                        onChange={handleSelectAll}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>Ref</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell>Method</TableCell>\r\n                    <TableCell>Total</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(0, rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      key={order.id}\r\n                      selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={selectedOrders.indexOf(order.id) !== -1}\r\n                          color=\"primary\"\r\n                          onChange={event => handleSelectOne(event, order.id)}\r\n                          value={selectedOrders.indexOf(order.id) !== -1}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {order.payment.ref}\r\n                        <Typography variant=\"body2\">\r\n                          {moment(order.created_at).format(\r\n                            'DD MMM YYYY | hh:mm'\r\n                          )}\r\n                        </Typography>\r\n                      </TableCell>\r\n\r\n                      <TableCell>{order.customer.name}</TableCell>\r\n                      <TableCell>{order.payment.method}</TableCell>\r\n                      <TableCell>\r\n                        {order.payment.currency}\r\n                        {order.payment.total}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={paymentStatusColors[order.payment.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {order.payment.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/orders/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      <TableEditBar selected={selectedOrders} />\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page, SearchBar } from 'components';\r\nimport { Header, Results } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst OrderManagementList = () => {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchOrders = () => {\r\n      axios.get('/api/orders').then(response => {\r\n        if (mounted) {\r\n          setOrders(response.data.orders);\r\n        }\r\n      });\r\n    };\r\n\r\n    fetchOrders();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Orders Management List\"\r\n    >\r\n      <Header />\r\n      <SearchBar />\r\n      <Results\r\n        className={classes.results}\r\n        orders={orders} //\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default OrderManagementList;\r\n","export { default } from './OrderManagementList';\r\n"],"sourceRoot":""}