{"version":3,"sources":["../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","views/AllServiceUser/components/Header/Header.js","views/AllServiceUser/components/Results/Results.js","Hook/Service-user/Delet-Service-User-Hook.js","views/AllServiceUser/list.js","Hook/Service-user/GetALLServiceUserData-Hook.js","views/AllServiceUser/index.js","Hook/AllUser/Get-All-user-Hook.js"],"names":["_ref","react_default","a","createElement","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePagination_TablePaginationActions","forwardRef","props","ref","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","other","Object","objectWithoutProperties","theme","useTheme","esm_extends","IconButton","onClick","event","disabled","color","direction","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","TablePagination_TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","classes","colSpanProp","_props$component","component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","className","root","Toolbar","toolbar","spacer","length","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","clsx_m","selectRoot","value","onChange","map","rowsPerPageOption","menuItem","key","min","actions","__webpack_exports__","withStyles","palette","text","secondary","fontSize","typography","pxToRem","&:last-child","padding","height","minHeight","paddingRight","flex","flexShrink","marginRight","marginLeft","paddingLeft","textAlign","textAlignLast","top","name","useStyles","makeStyles","Header","AllServiceUserData","rest","assign","clsx","Grid","alignItems","container","justify","spacing","item","gutterBottom","Button","content","inner","minWidth","nameCell","display","avatar","width","justifyContent","Results","_useState","useState","_useState2","slicedToArray","showEdite","setshowEdite","handleCloseEdite","_useState3","_useState4","show","setShow","handleClose","_useState5","_useState6","prameter","setprameter","useRouter","customers","dispatch","useDispatch","ShowEditeServiceUserSliceInfoData","useSelector","state","ShowEditeServiceUserSlice","console","log","_useState7","_useState8","selectedCustomers","_useState9","_useState10","setPage","_useState11","_useState12","setRowsPerPage","_useDeletServiceUserA","id","QueryClient","useQueryClient","useMutation","UseDeletServiceUData","onSuccess","res","DeletServiceUserSliceInfo","invalidateQueries","notify","onError","err","_err$response","_err$response$data","response","data","message","useDeletServiceUserApi","SubmitDeletServiceUser","isLoading","mutate","isError","error","refetch","DeletServiceUserSlice","DeletServiceUserData","Modal","onHide","closeButton","Title","Body","Footer","EditeServiceUser","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","align","TableBody","customer","index","hover","initials","lcds","age_ate_refferal","home_address","school_address","sex","start_date","end_date","qurdian_contact","qurdian","relationship","support_worker","assesment_date","disability","ethnicity","religion","compliment_of_the_household","size","filter","ShowEditeServiceUserSliceInfo","handelEdite","class","CardActions","TablePagination","target","selected","react_toastify_esm","defaultProps","results","marginTop","CustomerManagementList","formData","useQuery","UseGetAllServiceUserData","GetAllServiceUserSliceInfo","useGetAllServiceUserApi","GetAllServiceUserSlice","components_Header_Header","onFilter","onSearch","components_Results_Results","__webpack_require__","d","list","useGetAllUserApi","Hook_useNotifaction__WEBPACK_IMPORTED_MODULE_0__","react_query__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_5__","utils_useRouter__WEBPACK_IMPORTED_MODULE_6__","Api_Requests_UseGetAllUser__WEBPACK_IMPORTED_MODULE_9__","Redux_Slices_AllUser_Get_All_user_Slice__WEBPACK_IMPORTED_MODULE_10__","UseGetAllUserData","GetAllUserSliceInfo"],"mappings":"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","file":"static/js/51.580dc579.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className,AllServiceUserData , ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Currnt Care Plan({AllServiceUserData?.length})\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Add customer\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  Button,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport getInitials from 'utils/getInitials';\r\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetProfileViewSliceInfo } from 'Redux_Slices/Profile/View-profile-Slice';\r\nimport useRouter from 'utils/useRouter';\r\nimport { useEffect } from 'react';\r\nimport { useDeletServiceUserApi } from 'Hook/Service-user/Delet-Service-User-Hook';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport EditeServiceUser from 'views/EditeServiceUser';\r\nimport { ShowEditeServiceUserSliceInfo } from 'Redux_Slices/Service-User/ShowEditeServiceUserSlice';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  },\r\n  nameCell: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    height: 42,\r\n    width: 42,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n\r\n  const [showEdite, setshowEdite] = useState(false);\r\n\r\n  const handleCloseEdite = () => setshowEdite(false);\r\n  const handleShowEdite = () => setshowEdite(true);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n const [prameter,setprameter] =useState(\"\")\r\n  const router = useRouter();\r\n\r\n\r\n  const { className, customers,AllServiceUserData, ...rest } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const handelview =(data)=>{\r\n    \r\n\r\n  \r\n  //   const res = AllUserData.filter((item,index) => index === data)\r\n    \r\n\r\n  //   console.log(res);\r\n  //   dispatch(GetProfileViewSliceInfo(res));\r\n    \r\n  //     router.history.push('/ViewProfile');\r\n \r\n  //   // window.location.replace('/ViewProfile');\r\n\r\n  // }\r\n\r\n  const {ShowEditeServiceUserSliceInfoData} =useSelector(state => state.ShowEditeServiceUserSlice)\r\nconsole.log(ShowEditeServiceUserSliceInfoData);\r\n  const handelEdite =(data)=>{\r\n    \r\n\r\n  \r\n    const res = AllServiceUserData.filter((item,index) => index === data)\r\n    \r\n\r\n    console.log(res);\r\n    dispatch(ShowEditeServiceUserSliceInfo(res));\r\n    \r\n      // router.history.push('/ViewProfile');\r\n \r\n    // window.location.replace('/ViewProfile');\r\n\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedCustomers = event.target.checked\r\n      ? customers.map(customer => customer.id)\r\n      : [];\r\n\r\n    setSelectedCustomers(selectedCustomers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomers.indexOf(id);\r\n    let newSelectedCustomers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomers.length - 1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, selectedIndex),\r\n        selectedCustomers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomers(newSelectedCustomers);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  const {isLoading,mutate:SubmitDeletServiceUser,isError,error,refetch} =  useDeletServiceUserApi()\r\n  const {DeletServiceUserData} = useSelector(state => state.DeletServiceUserSlice)\r\n\r\n \r\n   const handeldelet=(id)=>{\r\n  \r\n      SubmitDeletServiceUser(id)\r\n      handleClose()\r\n   }\r\n\r\n  return (\r\n    <div>\r\n   <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className='text-center justify-content-center d-flex align-items-center '> \r\n          <div className=' titlemodel   text-center bg-info bg-gradient'>Alert</div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className='d-flex justify-content-center align-items-center '>\r\n           \r\n           <h3>Are You Sure ?</h3>\r\n          \r\n             </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>handeldelet(prameter)} >\r\n            Delet\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n      <Modal show={showEdite} onHide={handleCloseEdite}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className='text-center justify-content-center d-flex align-items-center '> \r\n          <div className=' titlemodel   text-center '>Edite ServiceUser</div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=''>\r\n           \r\n           <EditeServiceUser ShowEditeServiceUserSliceInfoData={ShowEditeServiceUserSliceInfoData} handleCloseEdite={handleCloseEdite}/>\r\n          \r\n             </Modal.Body>\r\n        <Modal.Footer>\r\n         \r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {customers.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(customers.length / rowsPerPage)}\r\n      </Typography>\r\n      <Card>\r\n        <CardHeader\r\n          action={<GenericMoreButton />}\r\n          title=\"All customers\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          <PerfectScrollbar>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {/* <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedCustomers.length === customers.length}\r\n                        color=\"primary\"\r\n                        indeterminate={\r\n                          selectedCustomers.length > 0 &&\r\n                          selectedCustomers.length < customers.length\r\n                        }\r\n                        onChange={handleSelectAll}\r\n                      />\r\n                    </TableCell> */}\r\n                    <TableCell>Number</TableCell>\r\n                    <TableCell>initials</TableCell>\r\n                    <TableCell>lcds</TableCell>\r\n                    <TableCell>age_ate_refferal</TableCell>\r\n                    <TableCell>home_address</TableCell>\r\n                    <TableCell>school_address</TableCell>\r\n                    <TableCell>Sex</TableCell>\r\n                    <TableCell>start_date</TableCell>\r\n                    <TableCell>end_date</TableCell>\r\n                    <TableCell>qurdian_contact</TableCell>\r\n                    <TableCell>qurdian</TableCell>\r\n                    <TableCell>relationship</TableCell>\r\n                    <TableCell>support_worker</TableCell>\r\n                    <TableCell>assesment_date</TableCell>\r\n                    <TableCell>disability</TableCell>\r\n                    <TableCell>ethnicity</TableCell>\r\n                    <TableCell>religion</TableCell>\r\n                    <TableCell>compliment_of_the_household</TableCell>\r\n\r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n              \r\n             \r\n              <TableBody>\r\n                  {AllServiceUserData?.map((customer,index) => (\r\n                    <TableRow\r\n                      hover\r\n                      // key={customer.id}\r\n                      // selected={selectedCustomers.indexOf(customer.id) !== -1}\r\n                    >\r\n                   <TableCell>{index + 1}</TableCell>\r\n\r\n                     \r\n                      <TableCell>{customer.initials}</TableCell>\r\n                      <TableCell>{customer.lcds}</TableCell>\r\n                      <TableCell>{customer.age_ate_refferal}</TableCell>\r\n                      <TableCell>{customer.home_address}</TableCell>\r\n                      <TableCell>{customer.school_address}</TableCell>\r\n                      <TableCell>{customer.sex}</TableCell>\r\n                      <TableCell>{customer.start_date}</TableCell>\r\n                      <TableCell>{customer.end_date}</TableCell>\r\n                      <TableCell>{customer.qurdian_contact}</TableCell>\r\n                      <TableCell>{customer.qurdian}</TableCell>\r\n                      <TableCell>{customer.relationship}</TableCell>\r\n                      <TableCell>{customer.support_worker}</TableCell>\r\n                      <TableCell>{customer.assesment_date}</TableCell>\r\n                      <TableCell>{customer.disability}</TableCell>\r\n                      <TableCell>{customer.ethnicity}</TableCell>\r\n                      <TableCell>{customer.religion}</TableCell>\r\n\r\n                      <TableCell>{customer.compliment_of_the_household}</TableCell>\r\n                      \r\n                      <TableCell align=\"right \" className='d-flex'>\r\n\r\n                        <Button\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n\r\n                        <Button\r\n                          color=\"primary\"\r\n                          onClick={()=> {return(handelEdite(index),handleShowEdite()) }}\r\n                          \r\n                          className='ms-1'\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i class=\"fa-solid fa-pen-to-square\"></i>\r\n                        </Button>\r\n                         <Button\r\n                         className='ms-1'\r\n                          color=\"error\"\r\n                          \r\n                          size=\"small\"\r\n                          onClick={() => { return (handleShow(),setprameter(customer.id))}}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i className=\"fa-sharp fa-solid fa-trash p-1 text-danger\" ></i>\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n             \r\n                \r\n              </Table>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={customers.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      <TableEditBar selected={selectedCustomers} />\r\n\r\n      <ToastContainer></ToastContainer>\r\n\r\n    </div>\r\n\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  customers: []\r\n};\r\n\r\nexport default Results;\r\n","import notify from 'Hook/useNotifaction';\r\nimport { UseGetProfileData } from \"Api_Requests/UseGetProfileData\";\r\nimport axios from \"axios\"\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\nimport { UseGetAllUserData } from 'Api_Requests/UseGetAllUser';\r\nimport { GetAllUserSliceInfo } from 'Redux_Slices/AllUser/Get-All-user-Slice';\r\nimport { GetAllServiceUserSliceInfo } from 'Redux_Slices/Service-User/Get-All-service-user-Slice';\r\nimport { UseGetAllServiceUserData } from 'Api_Requests/Service-user/Get-All-Service-UserData';\r\nimport { UseDeletServiceUData } from 'Api_Requests/Service-user/Delet-One-Service-User';\r\nimport { DeletServiceUserSliceInfo } from 'Redux_Slices/Service-User/Delet-Service-user-Hook';\r\n\r\n\r\n\r\nexport const useDeletServiceUserApi = (id) => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const QueryClient = useQueryClient();\r\n    return useMutation((id)=> (UseDeletServiceUData(id)), {\r\n      onSuccess: res => {\r\n        \r\n        \r\n         dispatch(DeletServiceUserSliceInfo(res));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n        QueryClient.invalidateQueries('GetAllServiceUser');\r\n\r\n        notify(\"The Service User  has been Deleted\",\"success\")    \r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err?.response?.data?.message,\"error\")      \r\n\r\n      }\r\n    });\r\n  };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page, SearchBar } from 'components';\r\nimport { Header, Results } from './components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useGetAllServiceUserApi } from 'Hook/Service-user/GetALLServiceUserData-Hook';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerManagementList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [customers, setCustomers] = useState([{},{}]);\r\n\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n\r\n  //   const fetchCustomers = () => {\r\n  //     axios.get('/api/management/customers').then(response => {\r\n  //       if (mounted) {\r\n  //         setCustomers(response.data.customers);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   fetchCustomers();\r\n\r\n  //   return () => {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  const handleFilter = () => {};\r\n  const handleSearch = () => {};\r\n  const {data}=useGetAllServiceUserApi()\r\n\r\n  const {AllServiceUserData} =useSelector(state => state.GetAllServiceUserSlice )\r\n  console.log(AllServiceUserData);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Management List\"\r\n    >\r\n      <Header AllServiceUserData ={AllServiceUserData} />\r\n      <SearchBar\r\n        onFilter={handleFilter}\r\n        onSearch={handleSearch}\r\n      />\r\n      {customers && (\r\n        <Results\r\n          className={classes.results}\r\n          customers={customers}\r\n          AllServiceUserData ={AllServiceUserData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerManagementList;\r\n","import notify from 'Hook/useNotifaction';\r\nimport { UseGetProfileData } from \"Api_Requests/UseGetProfileData\";\r\nimport axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\nimport { UseGetAllUserData } from 'Api_Requests/UseGetAllUser';\r\nimport { GetAllUserSliceInfo } from 'Redux_Slices/AllUser/Get-All-user-Slice';\r\nimport { GetAllServiceUserSliceInfo } from 'Redux_Slices/Service-User/Get-All-service-user-Slice';\r\nimport { UseGetAllServiceUserData } from 'Api_Requests/Service-user/Get-All-Service-UserData';\r\nexport const useGetAllServiceUserApi = formData => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useQuery(\"GetAllServiceUser\",UseGetAllServiceUserData, {\r\n      onSuccess: res => {\r\n        \r\n        \r\n         dispatch(GetAllServiceUserSliceInfo(res));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err.response.data.message,\"error\")      \r\n\r\n      }\r\n    });\r\n  };\r\n","export { default } from './list';\r\n","import notify from 'Hook/useNotifaction';\r\nimport { UseGetProfileData } from \"Api_Requests/UseGetProfileData\";\r\nimport axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\nimport { UseGetAllUserData } from 'Api_Requests/UseGetAllUser';\r\nimport { GetAllUserSliceInfo } from 'Redux_Slices/AllUser/Get-All-user-Slice';\r\nexport const useGetAllUserApi = formData => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useQuery(\"getprofile\",UseGetAllUserData, {\r\n      onSuccess: res => {\r\n        \r\n        \r\n         dispatch(GetAllUserSliceInfo(res));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err.response.data.message,\"error\")      \r\n\r\n      }\r\n    });\r\n  };\r\n"],"sourceRoot":""}