{"version":3,"sources":["Hook/Profile-Hook/EditeProfileHook.js","Api_Requests/UseGreateProfileData.js","Hook/Profile-Hook/GreateProfileHook.js","views/GreateProfileAdminWorker/GreateProfileAdminWorker.js","views/GreateProfileAdminWorker/index.js","Hook/Auth/SignUpHook.js","views/Add-Worker/AddWorker.js","Hook/Worker/Use-Create-Worker-Hook.js","views/AllWorkers/components/Header/Header.js","views/AllWorkers/components/Results/Results.js","views/AllWorkers/list.js","views/AllWorkers/index.js"],"names":["__webpack_require__","d","__webpack_exports__","useEditeProfileApi","react_query__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_3__","utils_useRouter__WEBPACK_IMPORTED_MODULE_4__","Hook_useNotifaction__WEBPACK_IMPORTED_MODULE_7__","Api_Requests_UseInsertDataEditeProfile__WEBPACK_IMPORTED_MODULE_8__","Redux_Slices_Profile_EditeProfileSlice__WEBPACK_IMPORTED_MODULE_9__","formData","dispatch","useDispatch","router","useRouter","useMutation","useInsertDataEditeProfile","onSuccess","res","result","status","statusText","headers","data","console","log","EditeProfileSliceInfo","notify","setTimeout","history","push","onError","err","_err$response","_err$response$data","response","message","UseGreateProfileData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","wrap","_context","prev","next","Content-Type","token","localStorage","getItem","baseUrl","post","abrupt","sent","stop","_x","apply","this","arguments","GreateProfileHook_GreateProfileApi","GreateProfileApi","FormData","QueryClient","useQueryClient","GreateProfileSliceInfo","invalidateQueries","GreateProfileAdminWorker","id","handleCloseMODL","_useState","useState","_useState2","slicedToArray","bod","setbod","_useState3","_useState4","NI_Number","setNI_Number","_useState5","_useState6","Adress","setAdress","_useState7","_useState8","Phone","setPhone","_useState9","_useState10","NEXT_OF_KIN","setNEXT_OF_KIN","_useState11","_useState12","NEXT_OF_KIN_CONTACT","setNEXT_OF_KIN_CONTACT","_useState13","_useState14","SEX","setSEX","_useState15","_useState16","Application","setApplication","_useState17","_useState18","_useState19","_useState20","JSON","parse","useGetAllUserApi","AllUserData","useSelector","state","GetAllUserSlice","_GreateProfileApi","CraetProfileData","SubmitEditeProfile","mutate","GreateProfileData","isError","error","refetch","GreateProfileSlice","useEffect","react_default","createElement","className","novalidate","for","type","onChange","e","target","value","required","files","onClick","preventDefault","filter","item","append","react_toastify_esm","views_GreateProfileAdminWorker_GreateProfileAdminWorker","useSignUpApi","Api_Requests_useInsertDataSignUp__WEBPACK_IMPORTED_MODULE_5__","Redux_Slices_auth_SignUpSlice__WEBPACK_IMPORTED_MODULE_6__","useInsertDataSignUp","UserSignUp","errors","AddWorker","handleClose","email","setemail","password","setpassword","username","setusername","role","setrole","formdata","_useSignUpWorkerApi","WorkerUserSignUp","_err$response2","_err$response2$data","useSignUpWorkerApi","SubmitSignUp","isLoading","_useSelector","WorkerSignUpSlice","WorkerUserSignUpData","handleSubmit","_ref2","event","map","class","style","width","name","placeholder","useStyles","makeStyles","root","Header","props","rest","objectWithoutProperties","show","setShow","classes","assign","clsx","Modal","onHide","closeButton","Title","Body","Footer","Grid","alignItems","container","justify","spacing","Typography","component","gutterBottom","variant","length","Button","color","theme","content","padding","inner","minWidth","nameCell","display","avatar","height","marginRight","actions","justifyContent","Results","showModl","setshowModl","setid","customers","selectedCustomers","page","setPage","rowsPerPage","setRowsPerPage","Math","ceil","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","TableCell","align","TableBody","customer","index","hover","react_router_dom","to","RouterLink","worker","phone","sex","pathname","cursor","size","_customer$worker","GetProfileViewSliceInfo","handelview","CardActions","TablePagination","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","selected","defaultProps","results","marginTop","CustomerManagementList","components_Header_Header","onFilter","onSearch","components_Results_Results","list"],"mappings":"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","file":"static/js/46.ad6c395f.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\n\r\nimport notify from 'Hook/useNotifaction';\r\nimport { useInsertDataEditeProfile } from \"Api_Requests/UseInsertDataEditeProfile\";\r\nimport { EditeProfileSliceInfo } from \"Redux_Slices/Profile/EditeProfileSlice\";\r\n\r\nexport const useEditeProfileApi = formData => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useMutation(useInsertDataEditeProfile, {\r\n      onSuccess: res => {\r\n        const result = {\r\n          status: res.status + '-' + res.statusText,\r\n          headers: res.headers,\r\n          data: res.data\r\n        };\r\n        console.log(result,\"result\");\r\n         dispatch(EditeProfileSliceInfo(result.data));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n           notify(\"The Profile Edite has been created\",\"success\")    \r\n\r\n setTimeout(() => {\r\n    router.history.push('/');\r\n }, 2000);\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err?.response?.data?.message,\"error\")       \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n","import baseUrl from '../Api/baseURL'\r\n\r\n\r\nexport const UseGreateProfileData  = async formData => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            token: localStorage.getItem(\"token\")\r\n        }\r\n    }\r\n    return await baseUrl.post(\r\n      'worker/create',formData,config );\r\n  };","import React from 'react'\nimport axios from \"axios\"\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport useRouter from 'utils/useRouter';\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\n\nimport notify from 'Hook/useNotifaction';\nimport { useInsertDataEditeProfile } from \"Api_Requests/UseInsertDataEditeProfile\";\nimport { EditeProfileSliceInfo } from \"Redux_Slices/Profile/EditeProfileSlice\";\nimport { UseGreateProfileData } from 'Api_Requests/UseGreateProfileData';\nimport { GreateProfileSliceInfo } from 'Redux_Slices/Profile/GreateProfileSlice';\n\n\nexport const GreateProfileApi = FormData =>{\n    const dispatch = useDispatch();\n    const router = useRouter();\n    const QueryClient = useQueryClient();\n\n    return(useMutation(UseGreateProfileData,{\n        onSuccess: res => {\n          const result = {\n            status: res.status + '-' + res.statusText,\n            headers: res.headers,\n            data: res.data\n          };\n          console.log(result,\"result\");\n           dispatch(GreateProfileSliceInfo(result.data));\n          // localStorage.setItem('user', JSON.stringify(result.data));\n          // localStorage.setItem('token', JSON.stringify(result.data.token));\n          //  window.location.replace('/');\n          // router.history.push('/');\n          QueryClient.invalidateQueries('getworker');\n\n             notify(\"The Profile Edite has been created\",\"success\")    \n  \n  //  setTimeout(() => {\n  //     router.history.push('/');\n  //  }, 2000);\n    \n        },\n        onError: err => {\n          // console.log(err.response.data.message);\n          //   dispatch(errorAtLogin(err.response.data.detail));\n          //  return err;\n          notify(err?.response?.data?.message,\"error\")       \n  \n        }\n      }))\n\n} \n","import { useEditeProfileApi } from 'Hook/Profile-Hook/EditeProfileHook'\nimport { GreateProfileApi } from 'Hook/Profile-Hook/GreateProfileHook'\nimport notify from 'Hook/useNotifaction'\nimport React from 'react'\nimport { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\nimport useRouter from 'utils/useRouter'\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook'\nimport { useEffect } from 'react'\n\nconst GreateProfileAdminWorker = ({id,handleCloseMODL}) => {\n  console.log(id);\nconst [bod,setbod] = useState(\"\")\nconst [NI_Number,setNI_Number] = useState(\"\")\nconst [Adress,setAdress] = useState(\"\")\nconst [Phone,setPhone] = useState(\"\")\nconst [NEXT_OF_KIN,setNEXT_OF_KIN] = useState(\"\")\nconst [NEXT_OF_KIN_CONTACT,setNEXT_OF_KIN_CONTACT] = useState(\"\")\nconst [SEX,setSEX] = useState(\"\")\nconst [Application,setApplication] = useState(\"\")\nconst [USER,setUSER] = useState(\"\")\nconst [training,settraining] = useState(\"\")\n\n\nconst router = useRouter();\n\nconst onchangebod =(e)=>{\n  \n  setbod(e.target.value)\n}\nconst onchangeNI_Number =(e)=>{\n  \n  setNI_Number(e.target.value)\n}\nconst onchangeAdress =(e)=>{\n  \n  setAdress(e.target.value)\n}\nconst onchangePhone =(e)=>{\n  \n  setPhone(e.target.value)\n}\n\nconst onchangeNEXT_OF_KIN =(e)=>{\n  setNEXT_OF_KIN(e.target.value)\n\n}\nconst onchangeNEXT_OF_KIN_CONTACT =(e)=>{\n  setNEXT_OF_KIN_CONTACT(e.target.value)\n\n}\nconst onchangeApplication =(e)=>{\n  if(e.target.files && e.target.files[0]){\n\n\n    \n    setApplication(e.target.files[0])\n    // setselctedfile(e.target.files[0])\n\n}\n  // setApplication(e.target.value)\n\n}\nconst onchangeSEX =(e)=>{\n  \n  setSEX(e.target.value)\n}\nconst onchangeUSER =(e)=>{\n  setUSER(e.target.value)\n}\nconst onchangetraining =(e)=>{\n\n  if(e.target.files && e.target.files[0]){\n\n    settraining(e.target.files[0])\n\n    // settraining(URL.createObjectURL(e.target.files[0]))\n    // setselctedfile(e.target.files[0])\n\n}\n  // settraining(e.target.value)\n\n}\n\nlet data ={}\n    if(localStorage.getItem(\"user\")){\n      \n      data = JSON.parse(localStorage.getItem(\"user\"))\n  \n    \n     console.log(data.id);\n    }\n    const {data:dataallworker}=useGetAllUserApi()\n\n    const {AllUserData} =useSelector(state => state.GetAllUserSlice)\nconst {data:CraetProfileData,mutate:SubmitEditeProfile,isError,error,refetch} =  GreateProfileApi()\nconst {GreateProfileData} = useSelector(state => state.GreateProfileSlice)\n\nconst handelSubmit = (e) => {\n  e.preventDefault()\n \n  \nconst userId=AllUserData?.filter((item)=>item)\n      if(bod === \"\" || Application === \"\" || NI_Number === \"\" || SEX === \"\" || Adress === \"\" || NEXT_OF_KIN_CONTACT === \"\" ||  NEXT_OF_KIN === \"\" || Phone === \"\"  ){\n        notify(\"Please complete the fields\",\"warn\")    \n\n      }else{\n        const formData = new FormData();\n        formData.append(\"Ni_Number\" , NI_Number)\n        formData.append(\"BOD\" , bod)\n        // formData.append(\"user\" , 24)\n        formData.append(\"sex\" , SEX)\n        formData.append(\"Adress\" , Adress)\n        formData.append(\"next_of_kin_Contact\" , NEXT_OF_KIN_CONTACT)\n        formData.append(\"next_of_kin\" , NEXT_OF_KIN)\n        formData.append(\"phone\" , Phone)\n         formData.append(\"user_email\" , id)\n        formData.append(\"Application\" , Application)\n  \n        \n        SubmitEditeProfile(formData)\n      }\n\n      \n  \n\n}\n\n\nconsole.log(GreateProfileData);\nuseEffect(()=>{\n  if(CraetProfileData){\n    handleCloseMODL()\n  }\n},[CraetProfileData])\n  return (\n    <div className='text-center'>\n      <div className='m-5'>\n        \n      </div>\n      <form className=\"row g-3 bg-white needs-validation m-5\" novalidate>\n    <div className=\"col-md-6\">\n      <label for=\"validationCustom01\" className=\"form-label fw-bold\">BOD</label>\n      <input type=\"date\" onChange={onchangebod} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n      <label for=\"validationCustom02\" className=\"form-label fw-bold\">NI Number</label>\n      <input type=\"number\" onChange={onchangeNI_Number} className=\"form-control\" id=\"validationCustom02\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">Adress</label>\n      <input type=\"text\" onChange={onchangeAdress} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">Phone</label>\n      <input type=\"number\" onChange={onchangePhone} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">NEXT OF KIN</label>\n      <input type=\"text\" onChange={onchangeNEXT_OF_KIN} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">SEX</label>\n      <input type=\"text\" onChange={onchangeSEX} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">NEXT OF KIN CONTACT</label>\n      <input type=\"text\" onChange={onchangeNEXT_OF_KIN_CONTACT} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n\n    \n\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">Application</label>\n    <input className=\"form-control\" onChange={onchangeApplication} type=\"file\" id=\"validationCustom01\"  required/>\n\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n\n    {/* <div className=\"col-md-12\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">training</label>\n    <input className=\"form-control\" onChange={onchangetraining} type=\"file\" id=\"validationCustom01\"  required/>\n\n      \n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div> */}\n    \n    <div className=\"col-12\">\n      <button className=\"btn btn-primary\" type=\"submit\" onClick={handelSubmit} >Create</button>\n    </div>\n  </form>\n  <ToastContainer></ToastContainer>\n\n  </div>\n  )\n}\n\nexport default GreateProfileAdminWorker\n","export { default } from './GreateProfileAdminWorker';\r\n","import axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { errors, UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\n\r\nimport notify from 'Hook/useNotifaction';\r\n\r\nexport const useSignUpApi = data => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useMutation(useInsertDataSignUp, {\r\n      onSuccess: res => {\r\n        const result = {\r\n          status: res.status + '-' + res.statusText,\r\n          headers: res.headers,\r\n          data: res.data\r\n        };\r\n        console.log(result,\"result\");\r\n         dispatch(UserSignUp(result.data));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n           notify(\"The account has been created\",\"success\")    \r\n\r\n setTimeout(() => {\r\n    router.history.push('/auth/login');\r\n }, 2000);\r\n  \r\n      },\r\n      onError: err => {\r\n        const result = {\r\n          status: err.status + '-' + err.statusText,\r\n          headers: err.headers,\r\n          data: err.data\r\n        };\r\n        dispatch(errors(result.data));\r\n\r\n        console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err?.response?.data?.message,\"error\")       \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n","\r\nimport React from 'react'\r\n\r\nimport { useSignUpApi } from 'Hook/Auth/SignUpHook'\r\nimport { useSelector } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { useSignUpWorkerApi } from 'Hook/Worker/Use-Create-Worker-Hook'\r\nimport { useEffect } from 'react'\r\nimport notify from 'Hook/useNotifaction'\r\nimport { ToastContainer } from 'react-toastify'\r\n\r\nimport GreateProfileAdminWorker from 'views/GreateProfileAdminWorker'\r\nimport { DataUsageOutlined } from '@material-ui/icons'\r\nconst AddWorker = ({handleClose}) => {\r\n    \r\n \r\n\r\n    const[email,setemail]=useState()\r\n    const[password,setpassword]=useState(\"\")\r\n    const[username,setusername]=useState(\"\")\r\n    const[role,setrole]=useState(0)\r\nconsole.log(email);\r\n    const handelEmail=(e)=>{\r\n       \r\n        setemail(e.target.value)\r\n\r\n    }\r\n\r\n    const handel_PassWord=(e)=>{\r\n        setpassword(e.target.value)\r\n    }\r\n\r\n\r\n   const handel_UserName =(e)=>{\r\n    console.log(e.target.value);\r\n\r\n    setusername(e.target.value)\r\n   }\r\n   \r\n    \r\n\r\n    const handel_Role =(e)=>{\r\n        setrole(e.target.value)\r\n\r\n    }\r\n        \r\n    const formdata ={\r\n    \r\n        \"email\": email,\r\n        \"password\": password,\r\n        \"username\": username,\r\n        \"role\": +role\r\n      \r\n    }\r\n    \r\n    const {isLoading,mutate:SubmitSignUp,data,error,refetch} =  useSignUpWorkerApi()\r\n    \r\n    \r\n    const {WorkerUserSignUpData,errors} = useSelector(state => state.WorkerSignUpSlice)\r\nconsole.log(errors);\r\n    const handleSubmit = async event => {\r\n        if (email === \"\"|| password === \"\"||username === \"\" || role === \"\"){\r\n            notify(\"Complete the fields\",\"error\")   \r\n\r\n        }else{\r\n            SubmitSignUp(formdata)\r\n\r\n        }\r\n      \r\n        // if(userSigbUpData.id){\r\n        //   notify(\"The account has been created\",\"success\")      \r\n  \r\n        // }\r\n  \r\n        // history.push('/');\r\n      };\r\n\r\n\r\n      useEffect(()=>{\r\n        if(data){\r\n            handleClose()\r\n            notify(\"The account has been created\",\"success\") \r\n\r\n        }\r\n\r\n      },[data])\r\n\r\n\r\n      useEffect(()=>{\r\n        if(errors){\r\n            if(errors === \"email in use\"){\r\n                notify(\"email in use\",\"error\")\r\n            }else if (error !== []){\r\n                errors.map((item)=>notify(item,\"error\"))\r\n            }\r\n\r\n          \r\n        }\r\n\r\n      },[errors])\r\n  return (\r\n    <div>\r\n \r\n \r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>UserName</span>\r\n\r\n<input type=\"text\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handel_UserName}  placeholder=\"UserName\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>Email</span>\r\n\r\n<input type=\"text\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handelEmail} placeholder=\"Email\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>PassWord</span>\r\n\r\n<input type=\"text\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handel_PassWord} placeholder=\"PassWord\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>Role</span>\r\n\r\n<input type=\"number\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handel_Role} placeholder=\"Role\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n<div className='d-flex justify-content-end p-3'>\r\n    <button onClick={handleSubmit} className='p-2 saveBtn'>Save</button>\r\n</div>\r\n<ToastContainer></ToastContainer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddWorker","import axios from \"axios\"\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\n\r\nimport notify from 'Hook/useNotifaction';\r\nimport { errors, WorkerUserSignUp } from \"Redux_Slices/Worker/WorkerSignUpSlice\";\r\n\r\nexport const useSignUpWorkerApi = data => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const QueryClient = useQueryClient();\r\n\r\n    return useMutation(useInsertDataSignUp, {\r\n      onSuccess: res => {\r\n        const result = {\r\n          status: res.status + '-' + res.statusText,\r\n          headers: res.headers,\r\n          data: res.data\r\n        };\r\n        console.log(result,\"result\");\r\n         dispatch(WorkerUserSignUp(result.data));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/ProfilWorker');\r\n\r\n           notify(\"The account has been created\",\"success\")    \r\n           QueryClient.invalidateQueries('getprofile');\r\n           \r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        const result = {\r\n          status: err.status + '-' + err.statusText,\r\n          headers: err.headers,\r\n          data: err?.response?.data?.message\r\n        };\r\n        dispatch(errors(result.data));\r\n\r\n        console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err?.response?.data?.message,\"error\")       \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport Modal from 'react-bootstrap/Modal';\nimport AddWorker from 'views/Add-Worker/AddWorker';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className,AllUserData , ...rest } = props;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true); \n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n\n<Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title className='text-center '> \n          <div className=''>   Add Worker</div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AddWorker handleClose={handleClose}/>\n             </Modal.Body>\n        <Modal.Footer>\n         \n        </Modal.Footer>\n      </Modal>\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n           Workers({AllUserData?.length})\n          </Typography>\n        </Grid>\n        <Grid item>\n          \n          <Button\n          onClick={handleShow}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Add Worker\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link, Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetProfileViewSliceInfo } from 'Redux_Slices/Profile/View-profile-Slice';\nimport useRouter from 'utils/useRouter';\nimport { useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport GreateProfileAdminWorker from 'views/GreateProfileAdminWorker';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n\n  const [showModl, setshowModl] = useState(false);\n\n  const handleCloseMODL = () => setshowModl(false);\n  const handleShowModl = () => setshowModl(true);\n const [id,setid]=useState()\n  const router = useRouter();\n\n\n  const { className, customers,AllUserData, ...rest } = props;\nconsole.log(AllUserData);\n  const dispatch = useDispatch();\n\n  const handelview =(data)=>{\n    \n\n  \n    const res = AllUserData.filter((item,index) => index === data)\n    \n  \n    console.log(res);\n    dispatch(GetProfileViewSliceInfo(res));\n    \n      // router.history.push(\"/ViewProfile\");\n \n    // window.location.replace('/ViewProfile');\n\n  }\n\n  const classes = useStyles();\n\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedCustomers = event.target.checked\n      ? customers.map(customer => customer.id)\n      : [];\n\n    setSelectedCustomers(selectedCustomers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomers.indexOf(id);\n    let newSelectedCustomers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(1)\n      );\n    } else if (selectedIndex === selectedCustomers.length - 1) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, -1)\n      );\n    } else if (selectedIndex > 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, selectedIndex),\n        selectedCustomers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomers(newSelectedCustomers);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n\n<Modal show={showModl} onHide={handleCloseMODL}>\n        <Modal.Header closeButton>\n          <Modal.Title className='text-center justify-content-center d-flex align-items-center '> \n          <div className=' titlemodel   text-center '>Create Profile Worker</div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className='d-flex justify-content-center align-items-center '>\n           \n           <GreateProfileAdminWorker handleCloseMODL={handleCloseMODL} id={id}/>\n          \n             </Modal.Body>\n      \n      </Modal>\n\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {customers.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(customers.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"All customers\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {/* <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedCustomers.length === customers.length}\n                        color=\"primary\"\n                        indeterminate={\n                          selectedCustomers.length > 0 &&\n                          selectedCustomers.length < customers.length\n                        }\n                        onChange={handleSelectAll}\n                      />\n                    </TableCell> */}\n                    <TableCell>Number</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Phone</TableCell>\n                    <TableCell>Sex</TableCell>\n                    \n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                \n              \n             \n              <TableBody>\n                  {AllUserData?.map((customer,index) => (\n                    <TableRow\n                      hover\n                      // key={customer.id}\n                      // selected={selectedCustomers.indexOf(customer.id) !== -1}\n                    >\n                   <TableCell>{index + 1}</TableCell>\n\n                       <Link to=\"/service/user\">\n                      <TableCell>\n                        <div className={classes.nameCell}>\n                  \n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to=\"/management/customers/1\"\n                              variant=\"h6\"\n                            >\n                              {customer.username}\n                              {/* {customer.name} */}\n                            </Link>\n                            {/* <div>{\"customer.email\"}</div> */}\n                          </div>\n                        </div>\n                      </TableCell>\n                      </Link>\n                      <TableCell>{customer.email}</TableCell>\n                      <TableCell>\n                        {\n                          customer.worker !== null ? (\n                            customer.worker.phone\n                          ) : \"\"\n                        }\n                      </TableCell>\n                      <TableCell>\n                      {\n                          customer.worker !== null ? (\n                            customer.worker.sex\n                          ) : \"\"\n                        }\n                      </TableCell>\n                      \n                      <TableCell align=\"right\">\n   \n\n                          {\n                            customer?.worker !== null ? (\n                              <Link to={{\n                                pathname: \"/ViewProfile\",\n                                state: customer // your data array of objects\n                              }} >\n                        <Button\n                          color=\"primary\"\n                          style={{width:\"125px\",cursor:\"pointer\"}}\n                          size=\"small\"\n                          onClick={()=> {return(handelview(index),setid(customer?.worker?.id))}}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                        </Link>\n\n                            ):null\n                          }\n                        \n\n                       \n\n\n                        \n                        {\n                          customer.worker === null ? ( <Button\n                            color=\"primary\"\n                            \n                            size=\"small\"\n                            onClick={()=>{return(handleShowModl(index),setid(customer?.email))} }\n                            variant=\"outlined\"\n                          >\n                            Create Profile\n                          </Button>):null\n                        }\n\n                        {/* <Button\n                          color=\"primary\"\n                          \n                          size=\"small\"\n                          onClick={()=>{return(handleShowModl(index),setid(customer?.email))} }\n                          variant=\"outlined\"\n                        >\n                          Create Profile\n                        </Button> */}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n             \n                \n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={customers.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      <TableEditBar selected={selectedCustomers} />\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  customers: []\n};\n\nexport default Results;\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page, SearchBar } from 'components';\r\nimport { Header, Results } from './components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerManagementList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [customers, setCustomers] = useState([{},{}]);\r\n\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n\r\n  //   const fetchCustomers = () => {\r\n  //     axios.get('/api/management/customers').then(response => {\r\n  //       if (mounted) {\r\n  //         setCustomers(response.data.customers);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   fetchCustomers();\r\n\r\n  //   return () => {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  const handleFilter = () => {};\r\n  const handleSearch = () => {};\r\n  const {data}=useGetAllUserApi()\r\n\r\n  const {AllUserData} =useSelector(state => state.GetAllUserSlice)\r\n  console.log(AllUserData);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Management List\"\r\n    >\r\n      <Header AllUserData ={AllUserData} />\r\n      <SearchBar\r\n        onFilter={handleFilter}\r\n        onSearch={handleSearch}\r\n      />\r\n      {customers && (\r\n        <Results\r\n          className={classes.results}\r\n          customers={customers}\r\n          AllUserData ={AllUserData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerManagementList;\r\n","export { default } from './list';\r\n"],"sourceRoot":""}