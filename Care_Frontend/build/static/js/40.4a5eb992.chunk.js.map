{"version":3,"sources":["Hook/Profile-Hook/EditeProfileHook.js","Api_Requests/UseGreateProfileData.js","Hook/Profile-Hook/GreateProfileHook.js","views/GreateProfileAdminWorker/GreateProfileAdminWorker.js","views/GreateProfileAdminWorker/index.js","Hook/Auth/SignUpHook.js","views/AddTraining/AddTraining.js","views/AddTraining/index.js","Api_Requests/Training/Use-Create-Training-Data.js","Hook/Training/Create-Training-Hook.js","views/Add-Worker/AddWorker.js","Hook/Worker/Use-Create-Worker-Hook.js","views/TrainigView/components/Header/Header.js","Api_Requests/Training/Use-Get-Training-Data.js","views/TrainigView/components/Results/Results.js","Hook/Training/Get-Training-Hook.js","views/TrainigView/list.js","views/TrainigView/index.js"],"names":["__webpack_require__","d","__webpack_exports__","useEditeProfileApi","react_query__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_3__","utils_useRouter__WEBPACK_IMPORTED_MODULE_4__","Hook_useNotifaction__WEBPACK_IMPORTED_MODULE_7__","Api_Requests_UseInsertDataEditeProfile__WEBPACK_IMPORTED_MODULE_8__","Redux_Slices_Profile_EditeProfileSlice__WEBPACK_IMPORTED_MODULE_9__","formData","dispatch","useDispatch","router","useRouter","useMutation","useInsertDataEditeProfile","onSuccess","res","result","status","statusText","headers","data","console","log","EditeProfileSliceInfo","notify","setTimeout","history","push","onError","err","_err$response","_err$response$data","response","message","UseGreateProfileData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","wrap","_context","prev","next","Content-Type","token","localStorage","getItem","baseUrl","post","abrupt","sent","stop","_x","apply","this","arguments","GreateProfileHook_GreateProfileApi","GreateProfileApi","FormData","QueryClient","useQueryClient","GreateProfileSliceInfo","invalidateQueries","GreateProfileAdminWorker","id","handleCloseMODL","_useState","useState","_useState2","slicedToArray","bod","setbod","_useState3","_useState4","NI_Number","setNI_Number","_useState5","_useState6","Adress","setAdress","_useState7","_useState8","Phone","setPhone","_useState9","_useState10","NEXT_OF_KIN","setNEXT_OF_KIN","_useState11","_useState12","NEXT_OF_KIN_CONTACT","setNEXT_OF_KIN_CONTACT","_useState13","_useState14","SEX","setSEX","_useState15","_useState16","Application","setApplication","_useState17","_useState18","_useState19","_useState20","JSON","parse","useGetAllUserApi","AllUserData","useSelector","state","GetAllUserSlice","_GreateProfileApi","CraetProfileData","SubmitEditeProfile","mutate","GreateProfileData","isError","error","refetch","GreateProfileSlice","useEffect","react_default","createElement","className","novalidate","for","type","onChange","e","target","value","required","files","onClick","preventDefault","filter","item","append","react_toastify_esm","views_GreateProfileAdminWorker_GreateProfileAdminWorker","useSignUpApi","Api_Requests_useInsertDataSignUp__WEBPACK_IMPORTED_MODULE_5__","Redux_Slices_auth_SignUpSlice__WEBPACK_IMPORTED_MODULE_6__","useInsertDataSignUp","UserSignUp","errors","AddTraining","idTOtraining","handleClose","name","setname","proof_of_training","setproof_of_training","expiry_date","setexpiry_date","setstatus","comment","setcomment","_CreateTrainingApi","CreateTrainingApi","SubmitCreateTRaining","_useSelector","CreateTrainingSlice","CreateTrainingrData","class","aria-label","selected","views_AddTraining_AddTraining","UseCreateTrainingData","Create_Training_Hook_CreateTrainingApi","CreateTrainingSliceInfo","_err$response2","_err$response2$data","AddWorker","email","setemail","password","setpassword","username","setusername","role","setrole","formdata","_useSignUpWorkerApi","WorkerUserSignUp","useSignUpWorkerApi","SubmitSignUp","isLoading","WorkerSignUpSlice","WorkerUserSignUpData","handleSubmit","_ref2","event","map","style","width","placeholder","useStyles","makeStyles","root","Header","props","handleShow","rest","objectWithoutProperties","classes","assign","clsx","Grid","alignItems","container","justify","spacing","Button","color","variant","UseGetOneTrainingData","_ref3","_callee2","queryKey","_queryKey","_context2","get","concat","_x3","theme","content","padding","inner","minWidth","nameCell","display","avatar","height","marginRight","actions","justifyContent","Results","showModl","setshowModl","customers","selectedCustomers","page","setPage","rowsPerPage","setRowsPerPage","OneTrainingData","useQuery","GetOneTrainingSliceInfo","useGetOneTrainingApi","GetOneTrainingeSlice","Modal","show","onHide","closeButton","Title","Body","Typography","gutterBottom","length","Math","ceil","Card","CardHeader","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","TableCell","align","TableBody","customer","index","hover","size","CardActions","TablePagination","component","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","components","defaultProps","results","marginTop","CustomerManagementList","location","setShow","components_Header_Header","onFilter","onSearch","components_Results_Results","list"],"mappings":"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","file":"static/js/40.4a5eb992.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\n\r\nimport notify from 'Hook/useNotifaction';\r\nimport { useInsertDataEditeProfile } from \"Api_Requests/UseInsertDataEditeProfile\";\r\nimport { EditeProfileSliceInfo } from \"Redux_Slices/Profile/EditeProfileSlice\";\r\n\r\nexport const useEditeProfileApi = formData => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useMutation(useInsertDataEditeProfile, {\r\n      onSuccess: res => {\r\n        const result = {\r\n          status: res.status + '-' + res.statusText,\r\n          headers: res.headers,\r\n          data: res.data\r\n        };\r\n        console.log(result,\"result\");\r\n         dispatch(EditeProfileSliceInfo(result.data));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n           notify(\"The Profile Edite has been created\",\"success\")    \r\n\r\n setTimeout(() => {\r\n    router.history.push('/');\r\n }, 2000);\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err?.response?.data?.message,\"error\")       \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n","import baseUrl from '../Api/baseURL'\r\n\r\n\r\nexport const UseGreateProfileData  = async formData => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            token: localStorage.getItem(\"token\")\r\n        }\r\n    }\r\n    return await baseUrl.post(\r\n      'worker/create',formData,config );\r\n  };","import React from 'react'\nimport axios from \"axios\"\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport useRouter from 'utils/useRouter';\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\n\nimport notify from 'Hook/useNotifaction';\nimport { useInsertDataEditeProfile } from \"Api_Requests/UseInsertDataEditeProfile\";\nimport { EditeProfileSliceInfo } from \"Redux_Slices/Profile/EditeProfileSlice\";\nimport { UseGreateProfileData } from 'Api_Requests/UseGreateProfileData';\nimport { GreateProfileSliceInfo } from 'Redux_Slices/Profile/GreateProfileSlice';\n\n\nexport const GreateProfileApi = FormData =>{\n    const dispatch = useDispatch();\n    const router = useRouter();\n    const QueryClient = useQueryClient();\n\n    return(useMutation(UseGreateProfileData,{\n        onSuccess: res => {\n          const result = {\n            status: res.status + '-' + res.statusText,\n            headers: res.headers,\n            data: res.data\n          };\n          console.log(result,\"result\");\n           dispatch(GreateProfileSliceInfo(result.data));\n          // localStorage.setItem('user', JSON.stringify(result.data));\n          // localStorage.setItem('token', JSON.stringify(result.data.token));\n          //  window.location.replace('/');\n          // router.history.push('/');\n          QueryClient.invalidateQueries('getworker');\n\n             notify(\"The Profile Edite has been created\",\"success\")    \n  \n  //  setTimeout(() => {\n  //     router.history.push('/');\n  //  }, 2000);\n    \n        },\n        onError: err => {\n          // console.log(err.response.data.message);\n          //   dispatch(errorAtLogin(err.response.data.detail));\n          //  return err;\n          notify(err?.response?.data?.message,\"error\")       \n  \n        }\n      }))\n\n} \n","import { useEditeProfileApi } from 'Hook/Profile-Hook/EditeProfileHook'\nimport { GreateProfileApi } from 'Hook/Profile-Hook/GreateProfileHook'\nimport notify from 'Hook/useNotifaction'\nimport React from 'react'\nimport { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\nimport useRouter from 'utils/useRouter'\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook'\nimport { useEffect } from 'react'\n\nconst GreateProfileAdminWorker = ({id,handleCloseMODL}) => {\n  console.log(id);\nconst [bod,setbod] = useState(\"\")\nconst [NI_Number,setNI_Number] = useState(\"\")\nconst [Adress,setAdress] = useState(\"\")\nconst [Phone,setPhone] = useState(\"\")\nconst [NEXT_OF_KIN,setNEXT_OF_KIN] = useState(\"\")\nconst [NEXT_OF_KIN_CONTACT,setNEXT_OF_KIN_CONTACT] = useState(\"\")\nconst [SEX,setSEX] = useState(\"\")\nconst [Application,setApplication] = useState(\"\")\nconst [USER,setUSER] = useState(\"\")\nconst [training,settraining] = useState(\"\")\n\n\nconst router = useRouter();\n\nconst onchangebod =(e)=>{\n  \n  setbod(e.target.value)\n}\nconst onchangeNI_Number =(e)=>{\n  \n  setNI_Number(e.target.value)\n}\nconst onchangeAdress =(e)=>{\n  \n  setAdress(e.target.value)\n}\nconst onchangePhone =(e)=>{\n  \n  setPhone(e.target.value)\n}\n\nconst onchangeNEXT_OF_KIN =(e)=>{\n  setNEXT_OF_KIN(e.target.value)\n\n}\nconst onchangeNEXT_OF_KIN_CONTACT =(e)=>{\n  setNEXT_OF_KIN_CONTACT(e.target.value)\n\n}\nconst onchangeApplication =(e)=>{\n  if(e.target.files && e.target.files[0]){\n\n\n    \n    setApplication(e.target.files[0])\n    // setselctedfile(e.target.files[0])\n\n}\n  // setApplication(e.target.value)\n\n}\nconst onchangeSEX =(e)=>{\n  \n  setSEX(e.target.value)\n}\nconst onchangeUSER =(e)=>{\n  setUSER(e.target.value)\n}\nconst onchangetraining =(e)=>{\n\n  if(e.target.files && e.target.files[0]){\n\n    settraining(e.target.files[0])\n\n    // settraining(URL.createObjectURL(e.target.files[0]))\n    // setselctedfile(e.target.files[0])\n\n}\n  // settraining(e.target.value)\n\n}\n\nlet data ={}\n    if(localStorage.getItem(\"user\")){\n      \n      data = JSON.parse(localStorage.getItem(\"user\"))\n  \n    \n     console.log(data.id);\n    }\n    const {data:dataallworker}=useGetAllUserApi()\n\n    const {AllUserData} =useSelector(state => state.GetAllUserSlice)\nconst {data:CraetProfileData,mutate:SubmitEditeProfile,isError,error,refetch} =  GreateProfileApi()\nconst {GreateProfileData} = useSelector(state => state.GreateProfileSlice)\n\nconst handelSubmit = (e) => {\n  e.preventDefault()\n \n  \nconst userId=AllUserData?.filter((item)=>item)\n      if(bod === \"\" || Application === \"\" || NI_Number === \"\" || SEX === \"\" || Adress === \"\" || NEXT_OF_KIN_CONTACT === \"\" ||  NEXT_OF_KIN === \"\" || Phone === \"\"  ){\n        notify(\"Please complete the fields\",\"warn\")    \n\n      }else{\n        const formData = new FormData();\n        formData.append(\"Ni_Number\" , NI_Number)\n        formData.append(\"BOD\" , bod)\n        // formData.append(\"user\" , 24)\n        formData.append(\"sex\" , SEX)\n        formData.append(\"Adress\" , Adress)\n        formData.append(\"next_of_kin_Contact\" , NEXT_OF_KIN_CONTACT)\n        formData.append(\"next_of_kin\" , NEXT_OF_KIN)\n        formData.append(\"phone\" , Phone)\n         formData.append(\"user_email\" , id)\n        formData.append(\"Application\" , Application)\n  \n        \n        SubmitEditeProfile(formData)\n      }\n\n      \n  \n\n}\n\n\nconsole.log(GreateProfileData);\nuseEffect(()=>{\n  if(CraetProfileData){\n    handleCloseMODL()\n  }\n},[CraetProfileData])\n  return (\n    <div className='text-center'>\n      <div className='m-5'>\n        \n      </div>\n      <form className=\"row g-3 bg-white needs-validation m-5\" novalidate>\n    <div className=\"col-md-6\">\n      <label for=\"validationCustom01\" className=\"form-label fw-bold\">BOD</label>\n      <input type=\"date\" onChange={onchangebod} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n      <label for=\"validationCustom02\" className=\"form-label fw-bold\">NI Number</label>\n      <input type=\"number\" onChange={onchangeNI_Number} className=\"form-control\" id=\"validationCustom02\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">Adress</label>\n      <input type=\"text\" onChange={onchangeAdress} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">Phone</label>\n      <input type=\"number\" onChange={onchangePhone} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">NEXT OF KIN</label>\n      <input type=\"text\" onChange={onchangeNEXT_OF_KIN} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">SEX</label>\n      <input type=\"text\" onChange={onchangeSEX} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">NEXT OF KIN CONTACT</label>\n      <input type=\"text\" onChange={onchangeNEXT_OF_KIN_CONTACT} className=\"form-control\" id=\"validationCustom01\"  required/>\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n\n    \n\n    <div className=\"col-md-6\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">Application</label>\n    <input className=\"form-control\" onChange={onchangeApplication} type=\"file\" id=\"validationCustom01\"  required/>\n\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div>\n\n    {/* <div className=\"col-md-12\">\n    <label for=\"validationCustom01\" className=\"form-label fw-bold\">training</label>\n    <input className=\"form-control\" onChange={onchangetraining} type=\"file\" id=\"validationCustom01\"  required/>\n\n      \n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n    </div> */}\n    \n    <div className=\"col-12\">\n      <button className=\"btn btn-primary\" type=\"submit\" onClick={handelSubmit} >Create</button>\n    </div>\n  </form>\n  <ToastContainer></ToastContainer>\n\n  </div>\n  )\n}\n\nexport default GreateProfileAdminWorker\n","export { default } from './GreateProfileAdminWorker';\r\n","import axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { errors, UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\n\r\nimport notify from 'Hook/useNotifaction';\r\n\r\nexport const useSignUpApi = data => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useMutation(useInsertDataSignUp, {\r\n      onSuccess: res => {\r\n        const result = {\r\n          status: res.status + '-' + res.statusText,\r\n          headers: res.headers,\r\n          data: res.data\r\n        };\r\n        console.log(result,\"result\");\r\n         dispatch(UserSignUp(result.data));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n           notify(\"The account has been created\",\"success\")    \r\n\r\n setTimeout(() => {\r\n    router.history.push('/auth/login');\r\n }, 2000);\r\n  \r\n      },\r\n      onError: err => {\r\n        const result = {\r\n          status: err.status + '-' + err.statusText,\r\n          headers: err.headers,\r\n          data: err.data\r\n        };\r\n        dispatch(errors(result.data));\r\n\r\n        console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err?.response?.data?.message,\"error\")       \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\nimport { CreateTrainingApi } from '../../Hook/Training/Create-Training-Hook'\n\nconst AddTraining = ({idTOtraining,handleClose}) => {\n    const[name,setname]=useState()\n    const[proof_of_training,setproof_of_training]=useState()\n    const[expiry_date,setexpiry_date]=useState()\n    const[status,setstatus]=useState()\n    const[comment,setcomment]=useState()\n    const[workerId,setworkerId]=useState()\n const handelName=(e)=>{\n    setname(e.target.value)\n }\n\n const handelproof_of_training=(e)=>{\n     if(e.target.files && e.target.files[0]){\n\n        setproof_of_training(e.target.files[0])\n\n    // settraining(URL.createObjectURL(e.target.files[0]))\n    // setselctedfile(e.target.files[0])\n\n}\n    // setproof_of_training(e.target.value)\n }\n\n const handelexpiry_date=(e)=>{\n    setexpiry_date(e.target.value)\n }\n\n const handelstatus=(e)=>{\n    setstatus(e.target.value)\n }\n\n const handelcomment=(e)=>{\n    setcomment(e.target.value)\n }\n\n const handelworkerId=(e)=>{\n    setworkerId(e.target.value)\n }\n const {data,mutate:SubmitCreateTRaining,isError,error:handelerror,refetch} =  CreateTrainingApi()\n const {CreateTrainingrData,error} = useSelector(state => state.CreateTrainingSlice)\nconst handelsave=()=>{\n    const formData = new FormData();\n    formData.append(\"name\" , name)\n    formData.append(\"proof_of_training\" , proof_of_training)\n    formData.append(\"expiry_date\" , expiry_date)\n    formData.append(\"status\" , status)\n    formData.append(\"comment\" , comment)\n    formData.append(\"workerId\" , idTOtraining)\n\n    SubmitCreateTRaining(formData)\n\n   \n}\n\n\nuseEffect(()=>{\n  if(data){\n    handleClose()\n  }\n},[data])\n  return (\n    <div>\n<div class=\"mb-3 row\">\n    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Name</label>\n    <div class=\"col-sm-10\">\n    <input onChange={handelName} type=\"text\" class=\"form-control\" id=\"inputPassword\"/>\n    </div>\n  </div>   \n\n  <div class=\"mb-3 row\">\n    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">expiry date</label>\n    <div class=\"col-sm-10\">\n    <input onChange={handelexpiry_date} type=\"date\" class=\"form-control\" id=\"inputPassword\"/>\n    </div>\n  </div> \n  <div class=\"mb-3 row\">\n    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">status</label>\n    <div class=\"col-sm-10\">\n    <select onChange={handelstatus} class=\"form-select\" aria-label=\"Default select example\">\n         <option selected>Open this select menu</option>\n          <option value=\"1\">One</option>\n          <option value=\"2\">Two</option>\n          </select>    </div>\n  </div> \n  <div class=\"mb-3 row\">\n    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Comment</label>\n    <div class=\"col-sm-10\">\n    <input onChange={handelcomment} type=\"text\" class=\"form-control\" id=\"inputPassword\"/>\n    </div>\n  </div> \n  <div class=\"mb-3 row\">\n    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">proof of training</label>\n    <div class=\"col-sm-10\">\n    <input onChange={handelproof_of_training} type=\"file\" class=\"form-control\" id=\"inputPassword\"/>\n    </div>\n  </div> \n        <div> <button onClick={handelsave} type=\"button\" class=\"btn btn-primary\">Create</button>\n </div>\n        <ToastContainer></ToastContainer>\n\n    </div>\n  )\n}\n\nexport default AddTraining\n","export { default } from './AddTraining';\r\n","import baseUrl from '../../Api/baseURL'\r\n\r\n\r\nexport const UseCreateTrainingData  = async data => {\r\n    const config = {\r\n        headers: {\r\n            \r\n            token: localStorage.getItem(\"token\")\r\n        }\r\n    }\r\n    return await baseUrl.post(\r\n      'training',data,config );\r\n  };","import React from 'react'\n\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport useRouter from 'utils/useRouter';\n\n\n\nimport notify from 'Hook/useNotifaction';\nimport { CreateTrainingSliceInfo,errors } from 'Redux_Slices/Training/Create-Training-Slice';\nimport { UseCreateTrainingData } from 'Api_Requests/Training/Use-Create-Training-Data';\n\n\n\n\nexport const CreateTrainingApi = data =>{\n    const dispatch = useDispatch();\n    const router = useRouter();\n    const QueryClient = useQueryClient();\n\n    return(useMutation((data)=>{return (UseCreateTrainingData(data))},{\n        onSuccess: res => {\n          const result = {\n            status: res.status + '-' + res.statusText,\n            headers: res.headers,\n            data: res.data\n          };\n          console.log(result,\"result\");\n           dispatch(CreateTrainingSliceInfo(result.data));\n          // localStorage.setItem('user', JSON.stringify(result.data));\n          // localStorage.setItem('token', JSON.stringify(result.data.token));\n          //  window.location.replace('/');\n          // router.history.push('/');\n          QueryClient.invalidateQueries('GetAOneworker');\n\n             notify(\"The Training  has been created\",\"success\")    \n  \n//    setTimeout(() => {\n//       router.history.push('/');\n//    }, 2000);\n    \n        },\n        onError: err => {\n\n          const result = {\n            status: err.status + '-' + err.statusText,\n            headers: err.headers,\n            data: err?.response?.data?.message\n          };\n\n          console.log(result.data);\n          dispatch(errors(result?.data));\n          // console.log(err.response.data.message);\n          //   dispatch(errorAtLogin(err.response.data.detail));\n          //  return err;\n          notify(err?.response?.data?.message,\"error\")       \n  \n        }\n      }))\n\n} \n","\r\nimport React from 'react'\r\n\r\nimport { useSignUpApi } from 'Hook/Auth/SignUpHook'\r\nimport { useSelector } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { useSignUpWorkerApi } from 'Hook/Worker/Use-Create-Worker-Hook'\r\nimport { useEffect } from 'react'\r\nimport notify from 'Hook/useNotifaction'\r\nimport { ToastContainer } from 'react-toastify'\r\n\r\nimport GreateProfileAdminWorker from 'views/GreateProfileAdminWorker'\r\nimport { DataUsageOutlined } from '@material-ui/icons'\r\nconst AddWorker = ({handleClose}) => {\r\n    \r\n \r\n\r\n    const[email,setemail]=useState()\r\n    const[password,setpassword]=useState(\"\")\r\n    const[username,setusername]=useState(\"\")\r\n    const[role,setrole]=useState(0)\r\nconsole.log(email);\r\n    const handelEmail=(e)=>{\r\n       \r\n        setemail(e.target.value)\r\n\r\n    }\r\n\r\n    const handel_PassWord=(e)=>{\r\n        setpassword(e.target.value)\r\n    }\r\n\r\n\r\n   const handel_UserName =(e)=>{\r\n    console.log(e.target.value);\r\n\r\n    setusername(e.target.value)\r\n   }\r\n   \r\n    \r\n\r\n    const handel_Role =(e)=>{\r\n        setrole(e.target.value)\r\n\r\n    }\r\n        \r\n    const formdata ={\r\n    \r\n        \"email\": email,\r\n        \"password\": password,\r\n        \"username\": username,\r\n        \"role\": +role\r\n      \r\n    }\r\n    \r\n    const {isLoading,mutate:SubmitSignUp,data,error,refetch} =  useSignUpWorkerApi()\r\n    \r\n    \r\n    const {WorkerUserSignUpData,errors} = useSelector(state => state.WorkerSignUpSlice)\r\nconsole.log(errors);\r\n    const handleSubmit = async event => {\r\n        if (email === \"\"|| password === \"\"||username === \"\" || role === \"\"){\r\n            notify(\"Complete the fields\",\"error\")   \r\n\r\n        }else{\r\n            SubmitSignUp(formdata)\r\n\r\n        }\r\n      \r\n        // if(userSigbUpData.id){\r\n        //   notify(\"The account has been created\",\"success\")      \r\n  \r\n        // }\r\n  \r\n        // history.push('/');\r\n      };\r\n\r\n\r\n      useEffect(()=>{\r\n        if(data){\r\n            handleClose()\r\n            notify(\"The account has been created\",\"success\") \r\n\r\n        }\r\n\r\n      },[data])\r\n\r\n\r\n      useEffect(()=>{\r\n        if(errors){\r\n            if(errors === \"email in use\"){\r\n                notify(\"email in use\",\"error\")\r\n            }else if (error !== []){\r\n                errors.map((item)=>notify(item,\"error\"))\r\n            }\r\n\r\n          \r\n        }\r\n\r\n      },[errors])\r\n  return (\r\n    <div>\r\n \r\n \r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>UserName</span>\r\n\r\n<input type=\"text\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handel_UserName}  placeholder=\"UserName\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>Email</span>\r\n\r\n<input type=\"text\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handelEmail} placeholder=\"Email\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>PassWord</span>\r\n\r\n<input type=\"text\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handel_PassWord} placeholder=\"PassWord\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n<div class=\"input-group m-2\">\r\n<span className=\"input-group-text spantxt\" id=\"basic-addon1\" style={{width:\"200px\"}}>Role</span>\r\n\r\n<input type=\"number\" name=\"dateofbirth\" className=\"form-control inputshadowGender\" onChange={handel_Role} placeholder=\"Role\" id=\"dateofbirth\"/>\r\n\r\n\r\n</div>\r\n\r\n<div className='d-flex justify-content-end p-3'>\r\n    <button onClick={handleSubmit} className='p-2 saveBtn'>Save</button>\r\n</div>\r\n<ToastContainer></ToastContainer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddWorker","import axios from \"axios\"\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\n\r\nimport notify from 'Hook/useNotifaction';\r\nimport { errors, WorkerUserSignUp } from \"Redux_Slices/Worker/WorkerSignUpSlice\";\r\n\r\nexport const useSignUpWorkerApi = data => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const QueryClient = useQueryClient();\r\n\r\n    return useMutation(useInsertDataSignUp, {\r\n      onSuccess: res => {\r\n        const result = {\r\n          status: res.status + '-' + res.statusText,\r\n          headers: res.headers,\r\n          data: res.data\r\n        };\r\n        console.log(result,\"result\");\r\n         dispatch(WorkerUserSignUp(result.data));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/ProfilWorker');\r\n\r\n           notify(\"The account has been created\",\"success\")    \r\n           QueryClient.invalidateQueries('getprofile');\r\n           \r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        const result = {\r\n          status: err.status + '-' + err.statusText,\r\n          headers: err.headers,\r\n          data: err?.response?.data?.message\r\n        };\r\n        dispatch(errors(result.data));\r\n\r\n        console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err?.response?.data?.message,\"error\")       \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport Modal from 'react-bootstrap/Modal';\nimport AddWorker from 'views/Add-Worker/AddWorker';\nimport AddTraining from '../../../AddTraining';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className,AllUserData,handleShow , ...rest } = props;\n \n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n\n\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        {/* <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n           Workers({AllUserData?.length})\n          </Typography>\n        </Grid> */}\n        <Grid item>\n          \n          <Button\n          onClick={handleShow}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Add training\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import baseUrl from '.././../Api/baseURL'\r\n\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseGetOneTrainingData = async ({ queryKey })  => {\r\n    const [_, id] = queryKey\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.get(`training/${id}`, config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseGetOneTrainingData };","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  Button,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport getInitials from 'utils/getInitials';\r\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetProfileViewSliceInfo } from 'Redux_Slices/Profile/View-profile-Slice';\r\nimport useRouter from 'utils/useRouter';\r\nimport { useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport GreateProfileAdminWorker from 'views/GreateProfileAdminWorker';\r\nimport AddTraining from '../../../AddTraining';\r\nimport { CreateTrainingApi } from '../../../../Hook/Training/Create-Training-Hook';\r\nimport { useGetOneTrainingApi, useGetTrainingApi } from '../../../../Hook/Training/Get-Training-Hook';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  },\r\n  nameCell: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    height: 42,\r\n    width: 42,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n\r\n  const [showModl, setshowModl] = useState(false);\r\n\r\n  const handleCloseMODL = () => setshowModl(false);\r\n  const handleShowModl = () => setshowModl(true);\r\n const [id,setid]=useState()\r\n  const router = useRouter();\r\n\r\n\r\n  const { className, customers,AllUserData,state, ...rest } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handelview =(data)=>{\r\n    \r\n\r\n  \r\n    const res = AllUserData.filter((item,index) => index === data)\r\n    \r\n  \r\n    console.log(res);\r\n    dispatch(GetProfileViewSliceInfo(res));\r\n    \r\n      router.history.push('/ViewProfile');\r\n \r\n    // window.location.replace('/ViewProfile');\r\n\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedCustomers = event.target.checked\r\n      ? customers.map(customer => customer.id)\r\n      : [];\r\n\r\n    setSelectedCustomers(selectedCustomers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomers.indexOf(id);\r\n    let newSelectedCustomers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomers.length - 1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, selectedIndex),\r\n        selectedCustomers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomers(newSelectedCustomers);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true); \r\n  const [idTOtraining,setidTOtraining] =useState()\r\n  const {data}=CreateTrainingApi(id)\r\n  const {data:getOneTraining}=useGetOneTrainingApi(state)\r\n\r\n  \r\n  const {OneTrainingData} =useSelector(state => state.GetOneTrainingeSlice)\r\n  console.log(OneTrainingData);\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n<Modal show={showModl} onHide={handleCloseMODL}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className='text-center justify-content-center d-flex align-items-center '> \r\n          <div className=' titlemodel   text-center '>Alert</div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className='d-flex justify-content-center align-items-center '>\r\n           \r\n           <GreateProfileAdminWorker id={id}/>\r\n          \r\n             </Modal.Body>\r\n      \r\n      </Modal>\r\n\r\n      \r\n\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {customers.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(customers.length / rowsPerPage)}\r\n      </Typography>\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Training\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          <PerfectScrollbar>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {/* <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedCustomers.length === customers.length}\r\n                        color=\"primary\"\r\n                        indeterminate={\r\n                          selectedCustomers.length > 0 &&\r\n                          selectedCustomers.length < customers.length\r\n                        }\r\n                        onChange={handleSelectAll}\r\n                      />\r\n                    </TableCell> */}\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>expiry date</TableCell>\r\n                    <TableCell>status</TableCell>\r\n                    <TableCell>Cooment</TableCell>\r\n                    \r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n              \r\n             \r\n              <TableBody>\r\n                  {OneTrainingData?.map((customer,index) => (\r\n                    \r\n                    <TableRow\r\n                      hover\r\n                      // key={customer.id}\r\n                      // selected={selectedCustomers.indexOf(customer.id) !== -1}\r\n                    >\r\n\r\n                      \r\n                      <TableCell>{customer.name}</TableCell>\r\n                      <TableCell>\r\n                      {customer.expiry_date}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {customer.status}\r\n\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {customer.comment}\r\n\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n\r\n                       \r\n\r\n\r\n                         <Button\r\n                         className='ms-1'\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          \r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i className=\"fa-sharp fa-solid fa-trash p-1\"></i>\r\n                        </Button>\r\n\r\n                        <Button\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        >\r\n                          Edite\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n             \r\n                \r\n              </Table>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={customers.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      <TableEditBar selected={selectedCustomers} />\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  customers: []\r\n};\r\n\r\nexport default Results;\r\n","import axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\n\r\nimport notify from 'Hook/useNotifaction';\r\n\r\nimport { UseGetOneTrainingData } from \"../../Api_Requests/Training/Use-Get-Training-Data\";\r\nimport { GetOneTrainingSliceInfo } from \"../../Redux_Slices/Training/Get-One-Training-Slice\";\r\n\r\n\r\n\r\nexport const useGetOneTrainingApi = id => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useQuery([\"GetAOneTraining\",id],UseGetOneTrainingData, {\r\n      onSuccess: res => {\r\n        \r\n        \r\n         dispatch(GetOneTrainingSliceInfo(res));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err?.response?.data?.message,\"error\")       \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page, SearchBar } from 'components';\r\nimport { Header, Results } from './components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AddTraining from '../AddTraining';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerManagementList = ({location}) => {\r\n  const classes = useStyles();\r\n\r\n  const [customers, setCustomers] = useState([{},{}]);\r\n  const state = location.state\r\nconsole.log(state);\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n\r\n  //   const fetchCustomers = () => {\r\n  //     axios.get('/api/management/customers').then(response => {\r\n  //       if (mounted) {\r\n  //         setCustomers(response.data.customers);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   fetchCustomers();\r\n\r\n  //   return () => {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  const handleFilter = () => {};\r\n  const handleSearch = () => {};\r\n  const {data}=useGetAllUserApi()\r\n\r\n  const {AllUserData} =useSelector(state => state.GetAllUserSlice)\r\n  console.log(AllUserData);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true); \r\n  const [id,setid] =useState()\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Management List\"\r\n    >\r\n\r\n\r\n      <Header AllUserData ={AllUserData} handleShow={handleShow} />\r\n      <SearchBar\r\n        onFilter={handleFilter}\r\n        onSearch={handleSearch}\r\n      />\r\n      {customers && (\r\n        <Results\r\n          className={classes.results}\r\n          customers={customers}\r\n          AllUserData ={AllUserData}\r\n          state={state}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerManagementList;\r\n","export { default } from './list';\r\n"],"sourceRoot":""}