{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","views/ProjectCreate/components/AboutAuthor/AboutAuthor.js","views/ProjectCreate/components/AboutProject/AboutProject.js","views/ProjectCreate/components/Header/Header.js","views/ProjectCreate/components/Preferences/Preferences.js","views/ProjectCreate/components/ProjectCover/ProjectCover.js","views/ProjectCreate/components/ProjectDetails/ProjectDetails.js","views/ProjectCreate/ProjectCreate.js","views/ProjectCreate/index.js"],"names":["CheckBoxOutlineBlank","Object","createSvgIcon","react_default","a","createElement","d","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","other","objectWithoutProperties","SwitchBase","esm_extends","type","root","clsx_m","concat","helpers","checked","disabled","data-indeterminate","__webpack_exports__","withStyles","theme","palette","text","secondary","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary","name","useStyles","makeStyles","option","border","divider","display","alignItems","padding","spacing","maxWidth","& + &","marginTop","selectedOption","colors","grey","optionRadio","margin","optionDetails","marginLeft","AboutAuthor","className","rest","_useState","useState","_useState2","slicedToArray","selected","setSelected","Card","assign","clsx","CardHeader","title","CardContent","value","description","map","defineProperty","key","Radio","onClick","event","handleChange","Typography","gutterBottom","variant","alert","marginBottom","formGroup","fieldGroup","fieldHint","tags","& > * + *","flexGrow","dateField","AboutProject","initialValues","tag","startDate","moment","endDate","add","objectSpread","values","setValues","_useState3","_useState4","calendarTrigger","setCalendarTrigger","handleFieldChange","field","persist","handleCalendarOpen","trigger","calendarOpen","Boolean","calendarMinDate","calendarValue","components","message","TextField","fullWidth","label","onChange","target","Button","addButton","newValues","includes","toConsumableArray","push","size","Add_default","addIcon","Chip","deleteIcon","Close_default","onDelete","filter","t","handleTagDelete","format","material_ui_pickers_esm","minDate","onAccept","date","onClose","open","style","Header","component","options","flexDirection","Preferences","FormControlLabel","control","Checkbox","defaultChecked","ProjectCover","ProjectDetails","placeholder","width","breakpoints","lg","aboutAuthor","aboutProject","projectCover","projectDetails","preferences","actions","ProjectCreate","components_Header_Header","components_AboutAuthor_AboutAuthor","components_AboutProject_AboutProject","components_ProjectCover_ProjectCover","components_ProjectDetails_ProjectDetails","components_Preferences_Preferences","__webpack_require__","views_ProjectCreate_ProjectCreate"],"mappings":"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","file":"static/js/26.d7beb3a3.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Radio,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    padding: theme.spacing(2),\r\n    maxWidth: 560,\r\n    '& + &': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[50]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  optionDetails: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AboutAuthor = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState('freelancer');\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option.value);\r\n  };\r\n\r\n  const options = [\r\n    {\r\n      value: 'freelancer',\r\n      title: 'I\\'m a freelancer',\r\n      description: 'I\\'m looking for teamates to join in a personal project'\r\n    },\r\n    {\r\n      value: 'projectOwner',\r\n      title: 'I’m a project owner',\r\n      description:\r\n        'I\\'m looking for freelancer or contractors to take care of my project'\r\n    },\r\n    {\r\n      value: 'affiliate',\r\n      title: 'I want to join affiliate',\r\n      description:\r\n        'I\\'m looking for freelancer or contractors to take care of my project'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Who are you exactly?\" />\r\n      <CardContent>\r\n        {options.map(option => (\r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option.value\r\n            })}\r\n            key={option.value}\r\n          >\r\n            <Radio\r\n              checked={selected === option.value}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              onClick={event => handleChange(event, option)}\r\n            />\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option.title}\r\n              </Typography>\r\n              <Typography variant=\"body1\">{option.description}</Typography>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutAuthor.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutAuthor;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  Chip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { DatePicker } from '@material-ui/pickers';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Alert } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  alert: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  formGroup: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  fieldGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  fieldHint: {\r\n    margin: theme.spacing(1, 0)\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1),\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  dateField: {\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst AboutProject = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const initialValues = {\r\n    name: '',\r\n    tag: '',\r\n    tags: ['Full-Time', 'ReactJS'],\r\n    startDate: moment(),\r\n    endDate: moment().add(1, 'day')\r\n  };\r\n\r\n  const [values, setValues] = useState({ ...initialValues });\r\n  const [calendarTrigger, setCalendarTrigger] = useState(null);\r\n\r\n  const handleFieldChange = (event, field, value) => {\r\n    event.persist && event.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleTagAdd = () => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\r\n        newValues.tags = [...newValues.tags];\r\n        newValues.tags.push(newValues.tag);\r\n      }\r\n\r\n      newValues.tag = '';\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  const handleTagDelete = tag => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      newValues.tags = newValues.tags.filter(t => t !== tag);\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  const handleCalendarOpen = trigger => {\r\n    setCalendarTrigger(trigger);\r\n  };\r\n\r\n  const handleCalendarChange = () => {};\r\n\r\n  const handleCalendarAccept = date => {\r\n    setValues(values => ({\r\n      ...values,\r\n      [calendarTrigger]: date\r\n    }));\r\n  };\r\n\r\n  const handleCalendarClose = () => {\r\n    setCalendarTrigger(false);\r\n  };\r\n\r\n  const calendarOpen = Boolean(calendarTrigger);\r\n  const calendarMinDate =\r\n    calendarTrigger === 'startDate'\r\n      ? moment()\r\n      : moment(values.startDate).add(1, 'day');\r\n  const calendarValue = values[calendarTrigger];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"About this project\" />\r\n      <CardContent>\r\n        <form>\r\n          <Alert\r\n            className={classes.alert}\r\n            message=\"Once you choose the project name you can’t change it unless you contact customer support.\"\r\n          />\r\n          <div className={classes.formGroup}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Project Name\"\r\n              name=\"name\"\r\n              onChange={event =>\r\n                handleFieldChange(event, 'name', event.target.value)\r\n              }\r\n              value={values.name}\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className={classes.formGroup}>\r\n            <div className={classes.fieldGroup}>\r\n              <TextField\r\n                className={classes.flexGrow}\r\n                label=\"Project Tags\"\r\n                name=\"tag\"\r\n                onChange={event =>\r\n                  handleFieldChange(event, 'tag', event.target.value)\r\n                }\r\n                value={values.tag}\r\n                variant=\"outlined\"\r\n              />\r\n              <Button\r\n                className={classes.addButton}\r\n                onClick={handleTagAdd}\r\n                size=\"small\"\r\n              >\r\n                <AddIcon className={classes.addIcon} />\r\n                Add\r\n              </Button>\r\n            </div>\r\n            <Typography\r\n              className={classes.fieldHint}\r\n              variant=\"body2\"\r\n            >\r\n              Tags will be colored depending the technology if the system\r\n              recognises.\r\n            </Typography>\r\n            <div className={classes.tags}>\r\n              {values.tags.map(tag => (\r\n                <Chip\r\n                  deleteIcon={<CloseIcon />}\r\n                  key={tag}\r\n                  label={tag}\r\n                  onDelete={() => handleTagDelete(tag)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className={classes.formGroup}>\r\n            <div className={classes.fieldGroup}>\r\n              <TextField\r\n                className={classes.dateField}\r\n                label=\"Start Date\"\r\n                name=\"startDate\"\r\n                onClick={() => handleCalendarOpen('startDate')}\r\n                value={moment(values.startDate).format('DD/MM/YYYY')}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                className={classes.dateField}\r\n                label=\"End Date\"\r\n                name=\"endDate\"\r\n                onClick={() => handleCalendarOpen('endDate')}\r\n                value={moment(values.endDate).format('DD/MM/YYYY')}\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n      <DatePicker\r\n        minDate={calendarMinDate}\r\n        onAccept={handleCalendarAccept}\r\n        onChange={handleCalendarChange}\r\n        onClose={handleCalendarClose}\r\n        open={calendarOpen}\r\n        style={{ display: 'none' }} // Temporal fix to hide the input element\r\n        value={calendarValue}\r\n        variant=\"dialog\"\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutProject.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutProject;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        component=\"h2\"\r\n        gutterBottom\r\n        variant=\"overline\"\r\n      >\r\n        New Project\r\n      </Typography>\r\n      <Typography\r\n        component=\"h1\"\r\n        variant=\"h3\"\r\n      >\r\n        Apply for listing project\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  options: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Preferences = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Preferences\" />\r\n      <CardContent>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h6\"\r\n        >\r\n          Privacy\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          You will recieve emails in your business email address\r\n        </Typography>\r\n        <div className={classes.options}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                defaultChecked //\r\n              />\r\n            }\r\n            label=\"Allow teamates invite others\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                defaultChecked //\r\n              />\r\n            }\r\n            label=\"Private Project\"\r\n          />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPreferences.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Preferences;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\n\r\nimport { FilesDropzone } from 'components';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProjectCover = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Project cover\" />\r\n      <CardContent>\r\n        <FilesDropzone />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProjectCover.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProjectCover;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\n\r\nimport { RichEditor } from 'components';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProjectDetails = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Project details\" />\r\n      <CardContent>\r\n        <RichEditor placeholder=\"Say something about the product...\" />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProjectDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProjectDetails;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { Page } from 'components';\r\nimport {\r\n  Header,\r\n  AboutAuthor,\r\n  AboutProject,\r\n  Preferences,\r\n  ProjectCover,\r\n  ProjectDetails\r\n} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3, 3, 6, 3)\r\n  },\r\n  aboutAuthor: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  aboutProject: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  projectCover: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  projectDetails: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  preferences: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  actions: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst ProjectCreate = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Project Create\"\r\n    >\r\n      <Header />\r\n      <AboutAuthor className={classes.aboutAuthor} />\r\n      <AboutProject className={classes.aboutProject} />\r\n      <ProjectCover className={classes.projectCover} />\r\n      <ProjectDetails className={classes.projectDetails} />\r\n      <Preferences className={classes.preferences} />\r\n      <div className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Create project\r\n        </Button>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProjectCreate;\r\n","export { default } from './ProjectCreate';\r\n"],"sourceRoot":""}