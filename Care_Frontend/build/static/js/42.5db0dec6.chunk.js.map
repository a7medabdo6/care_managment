{"version":3,"sources":["Api_Requests/UseGetAllUser.js","Hook/AllUser/Get-All-user-Hook.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","views/AllWorkers/components/Header/Header.js","views/AllWorkers/components/Results/Results.js","views/AllWorkers/list.js","views/AllWorkers/index.js","Api/baseURL.js","Hook/useNotifaction.js","Api_Requests/useInsertDataSignUp.js","Api_Requests/UseGetProfileData.js"],"names":["UseGetAllUserData","_ref2","Object","D_care_managment_Care_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_care_managment_Care_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee2","url","parmas","config","res","wrap","_context2","prev","next","headers","token","localStorage","getItem","baseUrl","get","sent","abrupt","data","stop","_x3","_x4","apply","this","arguments","__webpack_require__","d","__webpack_exports__","useGetAllUserApi","Hook_useNotifaction__WEBPACK_IMPORTED_MODULE_0__","react_query__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_5__","utils_useRouter__WEBPACK_IMPORTED_MODULE_6__","Api_Requests_UseGetAllUser__WEBPACK_IMPORTED_MODULE_9__","Redux_Slices_AllUser_Get_All_user_Slice__WEBPACK_IMPORTED_MODULE_10__","formData","dispatch","useDispatch","useRouter","useQuery","onSuccess","GetAllUserSliceInfo","onError","err","notify","response","message","_ref","react_default","createElement","KeyboardArrowRight","KeyboardArrowLeft","_ref3","_ref4","TablePagination_TablePaginationActions","forwardRef","props","ref","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","other","objectWithoutProperties","theme","useTheme","esm_extends","IconButton","onClick","event","disabled","color","direction","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","TablePagination_TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","classes","colSpanProp","_props$component","component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","className","root","Toolbar","toolbar","spacer","length","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","clsx_m","selectRoot","value","onChange","map","rowsPerPageOption","menuItem","key","min","actions","withStyles","palette","text","secondary","fontSize","typography","pxToRem","&:last-child","padding","height","minHeight","paddingRight","flex","flexShrink","marginRight","marginLeft","paddingLeft","textAlign","textAlignLast","top","name","useStyles","makeStyles","Header","AllUserData","rest","assign","clsx","Grid","alignItems","container","justify","spacing","item","gutterBottom","Button","content","inner","minWidth","nameCell","display","avatar","width","justifyContent","Results","router","customers","_useState","useState","_useState2","slicedToArray","selectedCustomers","_useState3","_useState4","setPage","_useState5","_useState6","setRowsPerPage","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","align","TableBody","customer","index","hover","Link","RouterLink","username","email","worker","phone","sex","size","filter","console","log","GetProfileViewSliceInfo","history","push","handelview","CardActions","TablePagination","target","selected","defaultProps","results","marginTop","CustomerManagementList","useSelector","state","GetAllUserSlice","components_Header_Header","onFilter","onSearch","components_Results_Results","list","axios__WEBPACK_IMPORTED_MODULE_0__","baseurl","n","axios","create","baseURL","react_toastify__WEBPACK_IMPORTED_MODULE_0__","msg","type","toast","warn","success","error","useInsertDataSignUp","_callee","_context","post","_x","UseGetProfileData"],"mappings":"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","file":"static/js/42.5db0dec6.chunk.js","sourcesContent":["import baseUrl from '../Api/baseURL'\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseGetAllUserData = async (url, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.get(\"users\", config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseGetAllUserData };","import notify from 'Hook/useNotifaction';\r\nimport { UseGetProfileData } from \"Api_Requests/UseGetProfileData\";\r\nimport axios from \"axios\"\r\nimport { useMutation, useQuery } from \"react-query\"\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport { useInsertDataSignUp } from \"Api_Requests/useInsertDataSignUp\";\r\nimport SignUpSlice, { UserSignUp } from \"Redux_Slices/auth/SignUpSlice\";\r\nimport { UseGetAllUserData } from 'Api_Requests/UseGetAllUser';\r\nimport { GetAllUserSliceInfo } from 'Redux_Slices/AllUser/Get-All-user-Slice';\r\nexport const useGetAllUserApi = formData => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    return useQuery(\"getprofile\",UseGetAllUserData, {\r\n      onSuccess: res => {\r\n        \r\n        \r\n         dispatch(GetAllUserSliceInfo(res));\r\n        // localStorage.setItem('user', JSON.stringify(result.data));\r\n        // localStorage.setItem('token', JSON.stringify(result.data.token));\r\n        //  window.location.replace('/');\r\n        // router.history.push('/');\r\n\r\n\r\n\r\n  \r\n      },\r\n      onError: err => {\r\n        // console.log(err.response.data.message);\r\n        //   dispatch(errorAtLogin(err.response.data.detail));\r\n        //  return err;\r\n        notify(err.response.data.message,\"error\")      \r\n\r\n      }\r\n    });\r\n  };\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className,AllUserData , ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Currnt Care Plan({AllUserData?.length})\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Add customer\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  Button,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport getInitials from 'utils/getInitials';\r\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetProfileViewSliceInfo } from 'Redux_Slices/Profile/View-profile-Slice';\r\nimport useRouter from 'utils/useRouter';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  },\r\n  nameCell: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    height: 42,\r\n    width: 42,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n\r\n  \r\n\r\n  const router = useRouter();\r\n\r\n\r\n  const { className, customers,AllUserData, ...rest } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handelview =(data)=>{\r\n    \r\n\r\n  \r\n    const res = AllUserData.filter((item,index) => index === data)\r\n    \r\n\r\n    console.log(res);\r\n    dispatch(GetProfileViewSliceInfo(res));\r\n    \r\n      router.history.push('/ViewProfile');\r\n \r\n    // window.location.replace('/ViewProfile');\r\n\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedCustomers = event.target.checked\r\n      ? customers.map(customer => customer.id)\r\n      : [];\r\n\r\n    setSelectedCustomers(selectedCustomers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomers.indexOf(id);\r\n    let newSelectedCustomers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomers.length - 1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, selectedIndex),\r\n        selectedCustomers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomers(newSelectedCustomers);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {customers.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(customers.length / rowsPerPage)}\r\n      </Typography>\r\n      <Card>\r\n        <CardHeader\r\n          action={<GenericMoreButton />}\r\n          title=\"All customers\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          <PerfectScrollbar>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {/* <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedCustomers.length === customers.length}\r\n                        color=\"primary\"\r\n                        indeterminate={\r\n                          selectedCustomers.length > 0 &&\r\n                          selectedCustomers.length < customers.length\r\n                        }\r\n                        onChange={handleSelectAll}\r\n                      />\r\n                    </TableCell> */}\r\n                    <TableCell>Number</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>Phone</TableCell>\r\n                    <TableCell>Sex</TableCell>\r\n                    \r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n              \r\n             \r\n              <TableBody>\r\n                  {AllUserData?.map((customer,index) => (\r\n                    <TableRow\r\n                      hover\r\n                      // key={customer.id}\r\n                      // selected={selectedCustomers.indexOf(customer.id) !== -1}\r\n                    >\r\n                   <TableCell>{index + 1}</TableCell>\r\n\r\n                       <Link to=\"/service/user\">\r\n                      <TableCell>\r\n                        <div className={classes.nameCell}>\r\n                  \r\n                          <div>\r\n                            <Link\r\n                              color=\"inherit\"\r\n                              component={RouterLink}\r\n                              to=\"/management/customers/1\"\r\n                              variant=\"h6\"\r\n                            >\r\n                              {customer.username}\r\n                              {/* {customer.name} */}\r\n                            </Link>\r\n                            {/* <div>{\"customer.email\"}</div> */}\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                      </Link>\r\n                      <TableCell>{customer.email}</TableCell>\r\n                      <TableCell>\r\n                        {\r\n                          customer.worker !== null ? (\r\n                            customer.worker.phone\r\n                          ) : \"\"\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {\r\n                          customer.worker !== null ? (\r\n                            customer.worker.sex\r\n                          ) : \"\"\r\n                        }\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"right\">\r\n\r\n                        <Button\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          onClick={()=> handelview(index)}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n\r\n\r\n                         <Button\r\n                         className='ms-1'\r\n                          color=\"primary\"\r\n                          \r\n                          size=\"small\"\r\n                          \r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i className=\"fa-sharp fa-solid fa-trash p-1\"></i>\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n             \r\n                \r\n              </Table>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={customers.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      <TableEditBar selected={selectedCustomers} />\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  customers: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page, SearchBar } from 'components';\r\nimport { Header, Results } from './components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerManagementList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [customers, setCustomers] = useState([{},{}]);\r\n\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n\r\n  //   const fetchCustomers = () => {\r\n  //     axios.get('/api/management/customers').then(response => {\r\n  //       if (mounted) {\r\n  //         setCustomers(response.data.customers);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   fetchCustomers();\r\n\r\n  //   return () => {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  const handleFilter = () => {};\r\n  const handleSearch = () => {};\r\n  const {data}=useGetAllUserApi()\r\n\r\n  const {AllUserData} =useSelector(state => state.GetAllUserSlice)\r\n  console.log(AllUserData);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Management List\"\r\n    >\r\n      <Header AllUserData ={AllUserData} />\r\n      <SearchBar\r\n        onFilter={handleFilter}\r\n        onSearch={handleSearch}\r\n      />\r\n      {customers && (\r\n        <Results\r\n          className={classes.results}\r\n          customers={customers}\r\n          AllUserData ={AllUserData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerManagementList;\r\n","export { default } from './list';\r\n","import axios from \"axios\";\r\n\r\n\r\nconst baseurl = axios.create({baseURL : \"http://137.184.12.206/api/\"})\r\n//http://137.184.12.206/api/\r\n\r\nexport default baseurl","\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n//to make notifactio to any componentet\r\nconst notify = (msg, type) => {\r\n    if (type === \"warn\")\r\n        toast.warn(msg)\r\n    else if (type ===\"success\")\r\n        toast.success(msg)\r\n    else if (type ===\"error\")\r\n        toast.error(msg)\r\n};\r\n\r\nexport default notify;","\r\nimport baseUrl from '../Api/baseURL'\r\n\r\n\r\nexport const useInsertDataSignUp  = async data => {\r\n    \r\n    return await baseUrl.post(\r\n      'users/signup',data );\r\n  };","import baseUrl from '../Api/baseURL'\r\n\r\nconst useGetData = async (url, parmas) => {\r\n    const res = await baseUrl.get(url, parmas);\r\n    return res;\r\n}\r\n\r\n\r\n\r\nconst UseGetProfileData = async (url, parmas) => {\r\n    const config = {\r\n        headers: { token: localStorage.getItem(\"token\") }\r\n    }\r\n    const res = await baseUrl.get(\"users/my-profile\", config);\r\n    return res.data;\r\n}\r\n\r\nexport { useGetData, UseGetProfileData };"],"sourceRoot":""}