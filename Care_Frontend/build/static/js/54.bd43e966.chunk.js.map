{"version":3,"sources":["views/AllCarePlan/components/Header/Header.js","views/AllCarePlan/components/Results/Results.js","views/AllCarePlan/list.js","views/AllCarePlan/index.js"],"names":["useStyles","makeStyles","root","Header","props","className","rest","CarePlanData","Object","objectWithoutProperties","classes","react_default","a","createElement","assign","clsx","Grid","alignItems","container","justify","spacing","item","react_router_dom","to","Button","color","variant","theme","content","padding","inner","minWidth","nameCell","display","avatar","height","width","marginRight","actions","justifyContent","Results","_useState","useState","_useState2","slicedToArray","_DeletCarePlanApi","DeletCarePlanApi","SubmitDeletCarePlan","isLoading","mutate","DeletCarePlanData","isError","error","refetch","useSelector","state","DeletCarePlanSlice","console","log","_useState3","_useState4","Id","setId","_useState5","_useState6","show","setShow","handleClose","_useState7","_useState8","showEdite","setShowEdite","_useState9","_useState10","setIdEdite","_useState11","_useState12","custmerData","setcustmerData","handleCloseEdite","useRouter","customers","useDispatch","_useState13","_useState14","selectedCustomers","_useState15","_useState16","page","setPage","_useState17","_useState18","rowsPerPage","setRowsPerPage","Modal","onHide","closeButton","Title","Body","Footer","onClick","handelDeletCarePlan","Edite_Care_Plan","Typography","gutterBottom","length","Math","ceil","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","TableCell","align","TableBody","map","customer","index","hover","comunication","date","frequency","created_at","pathname","size","id","CardActions","TablePagination","component","count","onChangePage","event","onChangeRowsPerPage","target","value","rowsPerPageOptions","selected","defaultProps","results","marginTop","CustomerManagementList","useGetCarePlanApi","data","GetAllCAREplaneSlice","components_Header_Header","onFilter","onSearch","components_Results_Results","handleShow","__webpack_require__","d","__webpack_exports__","list"],"mappings":"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","file":"static/js/54.bd43e966.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className,CarePlanData , ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Currnt Care Plan({CarePlanData?.length})\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n          <Link to=\"/addCarePlan\">\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Add carePlan\r\n          </Button>\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link, Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport getInitials from 'utils/getInitials';\r\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetProfileViewSliceInfo } from 'Redux_Slices/Profile/View-profile-Slice';\r\nimport useRouter from 'utils/useRouter';\r\nimport { useEffect } from 'react';\r\nimport { DeletCarePlanApi } from 'Hook/CarePlan/Get-Delet-CarePlan-Hook';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useEditeCarePlanApi } from 'Hook/CarePlan/Get-Edite-CarePlan-Hook';\r\nimport EditeCarePlan from 'views/Edite-Care-Plan';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  },\r\n  nameCell: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    height: 42,\r\n    width: 42,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n\r\n\r\n\r\n\r\n  const [dataEdite,setdataEdite] =useState()\r\n const {isLoading,mutate:SubmitDeletCarePlan,isError,error,refetch} =  DeletCarePlanApi()\r\n  const {DeletCarePlanData} = useSelector(state => state.DeletCarePlanSlice)\r\nconsole.log(DeletCarePlanData)\r\nconst [Id,setId] =useState()\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true); \r\n\r\n  const handelDeletCarePlan =(Id)=>{\r\n    SubmitDeletCarePlan(Id)\r\n    handleClose()\r\n  }\r\n \r\n  \r\n\r\nconst handelcrossDataTOedite=()=>{\r\n  setdataEdite()\r\n}\r\n\r\n//   const {isLoading,mutate:SubmitDeletCarePlan,isError,error,refetch} =  DeletCarePlanApi()\r\n//   const {DeletCarePlanData} = useSelector(state => state.DeletCarePlanSlice)\r\n// console.log(DeletCarePlanData)\r\n\r\n\r\n  const [showEdite, setShowEdite] = useState(false);\r\n  const [IdEdite,setIdEdite] =useState()\r\n\r\nconst [custmerData,setcustmerData]=useState()\r\n\r\n  const handleCloseEdite = () => setShowEdite(false);\r\n  const handleShowEdite = () => setShowEdite(true); \r\n\r\n\r\n\r\n\r\n  const handelEditeCarePlan =(Id)=>{\r\n    SubmitDeletCarePlan(Id)\r\n    handleCloseEdite()  \r\n  }\r\n \r\n\r\n\r\n\r\n  const router = useRouter();\r\n\r\n\r\n  const { className, customers,CarePlanData, ...rest } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const handelview =(data)=>{\r\n    \r\n\r\n  \r\n  //   const res = AllUserData.filter((item,index) => index === data)\r\n    \r\n\r\n  //   console.log(res);\r\n  //   dispatch(GetProfileViewSliceInfo(res));\r\n    \r\n  //     router.history.push('/ViewProfile');\r\n \r\n  //   // window.location.replace('/ViewProfile');\r\n\r\n  // }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedCustomers = event.target.checked\r\n      ? customers.map(customer => customer.id)\r\n      : [];\r\n\r\n    setSelectedCustomers(selectedCustomers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomers.indexOf(id);\r\n    let newSelectedCustomers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomers.length - 1) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomers = newSelectedCustomers.concat(\r\n        selectedCustomers.slice(0, selectedIndex),\r\n        selectedCustomers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomers(newSelectedCustomers);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n\r\n\r\n<Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className='text-center '> \r\n          <div className=''>Alert</div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n           <div className='d-flex '>\r\n            Are you Sure ?\r\n           </div>\r\n             </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>handelDeletCarePlan(Id)} >\r\n            Delet\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n      <Modal show={showEdite} onHide={handleCloseEdite}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className='text-center '> \r\n          <div className=''>Edite Care Plan</div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n           <div className='d-flex '>\r\n           <EditeCarePlan custmerData={custmerData} handleCloseEdite={handleCloseEdite}/>\r\n           </div>\r\n             </Modal.Body>\r\n        <Modal.Footer>\r\n        \r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {customers.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(customers.length / rowsPerPage)}\r\n      </Typography>\r\n      <Card>\r\n        <CardHeader\r\n          action={<GenericMoreButton />}\r\n          title=\"All customers\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          <PerfectScrollbar>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {/* <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedCustomers.length === customers.length}\r\n                        color=\"primary\"\r\n                        indeterminate={\r\n                          selectedCustomers.length > 0 &&\r\n                          selectedCustomers.length < customers.length\r\n                        }\r\n                        onChange={handleSelectAll}\r\n                      />\r\n                    </TableCell> */}\r\n                    <TableCell>Number</TableCell>\r\n                    <TableCell>comunication</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>frequency</TableCell>\r\n                    <TableCell>Created</TableCell>\r\n                    \r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n              \r\n             \r\n              <TableBody>\r\n                  {CarePlanData?.map((customer,index) => (\r\n                    <TableRow\r\n                      hover\r\n                      // key={customer.id}\r\n                      // selected={selectedCustomers.indexOf(customer.id) !== -1}\r\n                    >\r\n                   <TableCell>{index + 1}</TableCell>\r\n\r\n                      \r\n                      <TableCell>{customer.comunication}</TableCell>\r\n\r\n                      <TableCell>{customer.date}</TableCell>\r\n                      <TableCell>\r\n                        {\r\n                          customer.frequency\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {\r\n                          customer.created_at\r\n                        }\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"right\">\r\n                      <Link \r\n                     to={{\r\n                      pathname: \"/viewplans\",\r\n                      state: customer // your data array of objects\r\n                    }} >\r\n                      <Button\r\n                      \r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                      </Link>\r\n                      \r\n                      <Button\r\n                          color=\"primary\"\r\n                          onClick={()=>{return (handleShowEdite(),setIdEdite(customer.id),setcustmerData(customer))}}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i className=\"fa-regular fa-pen-to-square p-1\"></i>\r\n                        </Button>\r\n                    \r\n                      \r\n\r\n\r\n                         <Button\r\n                         className='ms-1'\r\n                          color=\"primary\"\r\n                          onClick={()=>{return(setId(customer.id) ,handleShow())}}\r\n                          size=\"small\"\r\n                          \r\n                          variant=\"outlined\"\r\n                        >\r\n                          <i className=\"fa-sharp fa-solid fa-trash p-1\"></i>\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n             \r\n                \r\n              </Table>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={customers.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      <TableEditBar selected={selectedCustomers} />\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  customers: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport axios from 'utils/axios';\r\nimport { Page, SearchBar } from 'components';\r\nimport { Header, Results } from './components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetAllUserApi } from 'Hook/AllUser/Get-All-user-Hook';\r\nimport { useGetCarePlanApi } from 'Hook/CarePlan/Get-AllCarePlan-Hook';\r\nimport { DeletCarePlanApi } from 'Hook/CarePlan/Get-Delet-CarePlan-Hook';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerManagementList = () => {\r\n\r\n  const {isLoading,mutate:SubmitDeletCarePlan,isError,error,refetch} =  DeletCarePlanApi()\r\n  const {DeletCarePlanData} = useSelector(state => state.DeletCarePlanSlice)\r\nconsole.log(DeletCarePlanData)\r\nconst [Id,setId] =useState()\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true); \r\n\r\n  const handelDeletCarePlan =(id)=>{\r\n    SubmitDeletCarePlan(id)\r\n    handleClose()\r\n  }\r\n \r\n\r\n  const classes = useStyles();\r\n\r\n  const [customers, setCustomers] = useState([{},{}]);\r\n\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n\r\n  //   const fetchCustomers = () => {\r\n  //     axios.get('/api/management/customers').then(response => {\r\n  //       if (mounted) {\r\n  //         setCustomers(response.data.customers);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   fetchCustomers();\r\n\r\n  //   return () => {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  const handleFilter = () => {};\r\n  const handleSearch = () => {};\r\n  const {data}=useGetCarePlanApi()\r\n\r\n  const {CarePlanData} =useSelector(state => state.GetAllCAREplaneSlice)\r\n  console.log(CarePlanData);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Management List\"\r\n    >\r\n      <Header CarePlanData ={CarePlanData} handelDeletCarePlan={handelDeletCarePlan} />\r\n      <SearchBar\r\n        onFilter={handleFilter}\r\n        onSearch={handleSearch}\r\n      />\r\n      {customers && (\r\n        <Results\r\n        Id={Id}\r\n        setId={setId}\r\n        handelDeletCarePlan={handelDeletCarePlan}\r\n        handleShow={handleShow}\r\n        handleClose={handleClose}\r\n        show={show}\r\n          className={classes.results}\r\n          customers={customers}\r\n          CarePlanData ={CarePlanData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerManagementList;\r\n","export { default } from './list';\r\n"],"sourceRoot":""}